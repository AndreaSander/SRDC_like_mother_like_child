library(glmmTMB)
library(DHARMa)
library(betareg)
library(emmeans)
library(ggiraphExtra)
library(ggeffects)
library(mvtnorm)
library(boot)
library(bbmle)
library(performance)
library(see)
library(writexl)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
load(here("anonymized_data/longitudinal_data.Rda"))
#Saving my palette to use in visualizations
my_yellow<-"#FFC107"
my_orange<- "#D95F02"
my_blue<- "#1F78B4"
my_green<- "#33a02c"
my_purple<- "#683f6d"
#### CONSTRUCTING AND DESCRIBING ALL RELEVANT DATA SETS ####
#Trilingul exclusions count
total_excluded_triling<- final_data_no_exc %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp<=90) %>%
distinct(unique_id)%>%
tally()
#Monolingual exclusions
total_monoling_excluded<- final_data_no_exc %>%
filter(exp_l1 >95) %>%
filter(exp_l2 <5) %>%
distinct(unique_id) %>%
tally()
#after third language exclusions exclusions
n <- final_data_strat %>%
distinct(unique_id) %>%
tally()
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1)
#n when only taking first visit
n_keep_first_visit<-first_visit_only %>%
distinct(anon_baby_id)%>%
tally()
age_min <- round(min(first_visit_only$age, na.rm = T), 2)
age_max<- round(max(first_visit_only$age, na.rm = T), 2)
age_mean<- round(mean(first_visit_only$age, na.rm = T), 2)
age_sd<- round(sd(first_visit_only$age, na.rm = T), 2)
female<- first_visit_only %>%
filter(gender=="female")%>%
distinct(anon_baby_id)%>% #using anon_baby_id since it uniquely identifies individual babies, instead of identifying by study
tally()
num_visits <- final_data_strat %>%
count(anon_baby_id, name = "n_visits") %>%
count(n_visits, name = "n_families")  %>%
mutate(n_data_points = n_families* n_visits)
#French-English-Heritage bilingual percentages
FEH <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Exporting the final data set that we used in all analyses and visualizations
#write_xlsx(FEH,"anonymized_data\\fam_Str_cross_sectional.xlsx")
FEH_perc<- FEH %>%
group_by(bilingual_type) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#By bilingual type percentages
fre_eng_perc <- FEH %>%
filter(bilingual_type== "fre-eng")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_her_perc <- FEH %>%
filter(bilingual_type=="fre-her")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_eng_perc <- FEH %>%
filter(bilingual_type=="eng-her") %>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#l1 amount of exposure range
min_exp_range <- final_data_strat %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data_strat %>%
select(exp_l1) %>%
max()
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length <- longitudinal_data_analyses %>%
filter(visit <= 2)
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
#Family language strategy visualization
####### FOR THE FRENCH- ENGLISH SAMPLE ############
#Calculating how many families use each strategy and its corresponding %
prop_strategy_FE<- FEH %>%
filter(bilingual_type == "fre-eng")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Reordering levels so legend in the graph is in order.
prop_strategy_FE$strategy<- factor(prop_strategy_FE$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
prop_strategy_FE<- prop_strategy_FE %>%
arrange(desc(prop))
#Waffle plot
V1_FE<- setNames(prop_strategy_FE$n, c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lanaguage", "one-language-at-home", "single-parent"))
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
ggsave(file="Figure_1.png", width=25, height=7, dpi=300)
#Making a figure of most used strategies divided by lang exposure
for_breakdown <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
group_by(strategy, l1) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
for_breakdown$strategy<- factor(for_breakdown$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
ggplot(for_breakdown, aes(x=l1, y=n, fill=strategy)) +
geom_bar(stat="identity", position="fill") +
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue, "#91bfdb", "#e0f3f8"))
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue,"#91bfdb", "#e0f3f8"), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
print(figure_1)
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue,"#d73027", "#e0f3f8"), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
print(figure_1)
### Looking at the individual parent strategies in each family language strategy
##Both parents bilingual
FE_both_parent_b<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(bilingual_type == "fre-eng") %>%
filter(strategy=="both-parents-bilingual") %>%
mutate(caregiver1_French =  case_when (l1== "French"~care1_l1,
l1== "English"~care1_l2)) %>%
mutate(caregiver1_English =  case_when (l1== "English"~care1_l1,
l1== "French"~care1_l2)) %>%
mutate(caregiver2_French =  case_when (l1== "French"~care2_l1,
l1== "English"~care2_l2)) %>%
mutate(caregiver2_English =  case_when (l1== "English"~care2_l1,
l1== "French"~care2_l2)) %>%
mutate(mom_use_strategy = case_when( caregiver1_French == "regularly" & caregiver1_English == "regularly" ~ "both regularly",
caregiver1_French == "regularly" & caregiver1_English == "sometimes" ~ "french-reg-english-some",
caregiver1_French == "sometimes" & caregiver1_English == "regularly" ~ "french-some-english-reg"))%>%
mutate(dad_use_strategy = case_when( caregiver2_French == "regularly" & caregiver2_English == "regularly" ~ "both regularly",
caregiver2_French == "regularly" & caregiver2_English == "sometimes" ~ "french-reg-english-some",
caregiver2_French == "sometimes" & caregiver2_English == "regularly" ~ "french-some-english-reg",
TRUE~"both-sometimes"))
# what are the percentages ?
mom_biling_strat<- FE_both_parent_b %>%
group_by(mom_use_strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
dad_biling_strat<- FE_both_parent_b %>%
group_by(dad_use_strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
## One-parent-bilingual
#Which parent is the bilingual parent?
FE_one_parent_b<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(bilingual_type == "fre-eng") %>%
filter(strategy=="one-parent-bilingual") %>%
mutate(caregiver_biling = case_when(care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("regularly", "sometimes") ~ "caregiver1",
TRUE ~ "caregiver2"))
#What are the percentages
FE_caregiver_bi_prop <- FE_one_parent_b %>%
filter(type_of_family == "mother-father family") %>%
group_by(caregiver_biling) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 81% mothers are the bilingual caregiver
#Which languages are spoken by the monolingual parent?
monoling_careg_lang<- FE_one_parent_b %>%
mutate(monolingual_care_lang = case_when(caregiver_biling == "caregiver1" & care2_l1 %in% c("regularly", "sometimes") ~ l1,
caregiver_biling == "caregiver1" & care2_l2 %in% c("regularly", "sometimes") ~ l2,
caregiver_biling == "caregiver2" & care1_l1 %in% c("regularly", "sometimes") ~l1,
caregiver_biling == "caregiver2" & care1_l2 %in% c("regularly", "sometimes") ~l2)) %>%
group_by(monolingual_care_lang) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 69% on the parents who are monolingual speak English
##Also looking at OPOL to see who speaks French
FE_opol <- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(bilingual_type == "fre-eng") %>%
filter(strategy=="one-parent-one-lang") %>%
mutate(momlangs = paste0(l1, care1_l1, "-", l2, care1_l2), #get mom languages and amount spoken
dadlangs = paste0(l1, care2_l1, "-", l2, care2_l2)) %>% #get dad languages and amount spoken
mutate(across(c(momlangs, dadlangs),
~str_remove(., "-{0,1}.{6,7}never-{0,1}"))) %>% #remove the "never" languages
mutate(across(c(momlangs, dadlangs),
~case_when(str_detect(., "-") ~ "flex", #at this point, if there's still a hyphen, then both languages are used so it's "flex"
TRUE ~ str_remove(., "regularly|sometimes")))) %>% #if there is no hyphen, then it's just 1 language so remove the "regularly" or "sometimes" to just leave the language name
mutate(parents_lang_use = case_when(dadlangs == "flex" ~ paste0("dad_", str_to_lower(dadlangs), "_mom_", str_to_lower(momlangs)),
TRUE ~ paste0("mom_", str_to_lower(momlangs), "_dad_", str_to_lower(dadlangs)))) #if dad is the flex one, put him first, otherwise mom goes first
opol_count<- FE_opol %>%
group_by(parents_lang_use) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
## LONGITUDINAL DATA ANALYSES ##
FE_long_analyses<- longitudinal_data_analyses %>%
filter(bilingual_type=="fre-eng")
########### Count proportions ##########
v1_strat_prop <- FE_long_analyses %>%
select(visit, strategy) %>%
filter(visit==1) %>%
filter(!strategy == "single-parent") %>%
group_by(strategy) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_strat_prop <- FE_long_analyses %>%
select(visit, strategy) %>%
filter(visit==2) %>%
filter(!strategy == "single-parent") %>%
group_by(strategy) %>%
tally(name = "n_second_visit")%>%
mutate(proportion_second_visit = n_second_visit/sum(n_second_visit)) %>%
mutate(percentage_second_visit= proportion_second_visit*100)
FE_percentages_visits <- merge(v1_strat_prop, v2_strat_prop, by="strategy")
###########################
###################### GLMER MODEL To learn weather changing strategy was related to the time between visits ########
FE_for_long_glmer<- FE_long_analyses %>%
select(visit, strategy, length_between_visits, anon_baby_id) %>%
filter(visit %in% c(1,2)) %>%
filter(!strategy == "single-parent") %>%
pivot_wider(names_from = visit, values_from = strategy) %>%
rename(time_1 = "1") %>%
rename(time_2 = "2") %>%
mutate(change_strat = case_when(time_1 == time_2 ~"no_change",
TRUE~ "change"))
FE_for_long_glmer<- FE_for_long_glmer
FE_count_change <- FE_for_long_glmer %>%
group_by(change_strat) %>%
tally() %>%
mutate(perc = (n/sum(n)*100))
FE_strategy_change <- FE_for_long_glmer %>%
filter(change_strat=="change") %>%
group_by(time_2) %>%
tally() %>%
mutate(perc = (n/sum(n)*100))
long_model<- glmer(as.factor(change_strat) ~ scale(length_between_visits) +(1|anon_baby_id), data = FE_for_long_glmer, family="binomial")
summary(long_model)
############ make sankey graph ########
FE_for_sankey <- FE_for_long_glmer %>%
select(-change_strat) %>%
make_long("time_1", "time_2")
FE_for_sankey <- FE_for_sankey %>%
mutate(node= fct_relevel (node, "both-parents-bilingual", "one-parent-bilingual", "one-language-at-home", "one-parent-one-lang"))
FE_p1<- ggplot(FE_for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node )) +
geom_sankey()
figure_2 <- FE_p1+
scale_fill_manual(name= "x", values = c(my_orange, my_yellow, my_blue))
figure_2<- figure_2 +
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=35),axis.title = element_text(size=25), plot.title = element_text(size=25), legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())
ggsave(file="Figure_2.png", width=25, height=18, dpi=300)
##Mother sankey
mom_long<- FE_long_analyses %>% #this results in a dataframe that has one row per kid who had 2 FR-EN visits.
filter(type_of_family == "mother-father family") %>%
filter(!strategy=="single-parent") %>%
filter(visit %in% c(1,2)) %>%
select(anon_baby_id, l1, l2, care1_l1, care1_l2, visit, length_between_visits) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2),
visit = paste0("Visit_", visit)) %>%
rename("Fre" = caregiver_1_french_use,
"Eng" = caregiver_1_english_use) %>%
select(-care1_l1, -care1_l2, -l1, -l2) %>%
pivot_wider(names_from = visit, values_from = c(Fre, Eng)) %>%
rename_at(vars(starts_with("Fre")), ~ paste0(str_remove(., "Fre_"), "_Fre")) %>%
rename_at(vars(starts_with("Eng")), ~  paste0(str_remove(., "Eng_"), "_Eng")) %>%
drop_na()
mom_long_french<- mom_long %>%
select(anon_baby_id, length_between_visits, time_1_Fre, time_2_Fre)
mom_long<- FE_long_analyses %>% #this results in a dataframe that has one row per kid who had 2 FR-EN visits.
filter(type_of_family == "mother-father family") %>%
filter(!strategy=="single-parent") %>%
filter(visit %in% c(1,2)) %>%
select(anon_baby_id, l1, l2, care1_l1, care1_l2, visit, length_between_visits) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2),
visit = paste0("time_", visit)) %>%
rename("Fre" = caregiver_1_french_use,
"Eng" = caregiver_1_english_use) %>%
select(-care1_l1, -care1_l2, -l1, -l2) %>%
pivot_wider(names_from = visit, values_from = c(Fre, Eng)) %>%
rename_at(vars(starts_with("Fre")), ~ paste0(str_remove(., "Fre_"), "_Fre")) %>%
rename_at(vars(starts_with("Eng")), ~  paste0(str_remove(., "Eng_"), "_Eng")) %>%
drop_na()
mom_long_french<- mom_long %>%
select(anon_baby_id, length_between_visits, time_1_Fre, time_2_Fre)
mom_long_english<- mom_long %>%
select(anon_baby_id, length_between_visits, time_1_Eng, time_2_Eng)
mom_long_fre_s <- mom_long_french %>%
make_long("time_1_Fre","time_2_Fre")
#Changeing the levels so that the graph is in order
mom_long_fre_s$node <- factor(mom_long_fre_s$node, levels= c("never","sometimes", "regularly"))
mom_long_fre_s$next_node <- factor(mom_long_fre_s$next_node, levels= c("never","sometimes","regularly"))
mom_long_eng_s <- mom_long_english %>%
make_long("time_1_Eng", "time_2_Eng")
mom_long_eng_s$node <- factor(mom_long_eng_s$node, levels= c("never","sometimes", "regularly"))
mom_long_eng_s$next_node <- factor(mom_long_eng_s$next_node, levels= c("never","sometimes","regularly"))
v1_mother_prop_fre <- mom_long %>%
select(time_1_Fre, Visit_1_Eng) %>%
group_by(time_1_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v1_mother_prop_fre <- mom_long %>%
select(time_1_Fre, time_1_Eng) %>%
group_by(time_1_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_mother_prop_fre <- mom_long %>%
select(time_2_Fre, time_2_Eng) %>%
group_by(time_2_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v1_mother_prop_eng <- mom_long %>%
select(time_1_Fre, time_1_Eng) %>%
group_by(time_1_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_mother_prop_eng <- mom_long %>%
select(time_2_Fre, time_2_Eng) %>%
group_by(time_2_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
figure_3_a <- ggplot(mom_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
geom_sankey_label(size=10, color="black", fill="white")+
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw()+
theme(axis.text.x = element_text(size=30),legend.position = "none", plot.title = element_text(size=35)) +
labs(title= "A. Mothers' change of language use French")
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=30), legend.position = "none", plot.title = element_text(size=35))+
labs(title= "B. Mothers' change of language use English")
figure_3<- figure_3_a + figure_3_b
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
dad_long<- FE_long_analyses %>% #this results in a dataframe that has one row per kid who had 2 FR-EN visits.
filter(type_of_family == "mother-father family") %>%
filter(!strategy=="single-parent") %>%
filter(visit %in% c(1,2)) %>%
select(anon_baby_id, l1, l2, care2_l1, care2_l2, visit, length_between_visits) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~care2_l1,
l2=="French"~care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2),
visit = paste0("time_", visit)) %>%
rename("Fre" = caregiver_2_french_use,
"Eng" = caregiver_2_english_use) %>%
select(-care2_l1, -care2_l2, -l1, -l2) %>%
pivot_wider(names_from = visit, values_from = c(Fre, Eng)) %>%
rename_at(vars(starts_with("Fre")), ~ paste0(str_remove(., "Fre_"), "_Fre")) %>%
rename_at(vars(starts_with("Eng")), ~  paste0(str_remove(., "Eng_"), "_Eng")) %>%
drop_na()
dad_long_french<- dad_long %>%
select(anon_baby_id, length_between_visits, time_1_Fre, time_2_Fre) %>%
mutate(time_1_Fre = case_when(time_1_Fre == "NA"~"never",
TRUE~ Visit_1_Fre))
dad_long_french<- dad_long %>%
select(anon_baby_id, length_between_visits, time_1_Fre, time_2_Fre) %>%
mutate(time_1_Fre = case_when(time_1_Fre == "NA"~"never",
TRUE~ time_1_Fre))
dad_long_english<- dad_long %>%
select(anon_baby_id, length_between_visits, time_1_Eng, time_2_Eng)
dad_long_fre_s <- dad_long_french %>%
make_long("time_1_Fre","time_2_Fre")
dad_long_fre_s$node <- factor(dad_long_fre_s$node, levels= c("never","sometimes", "regularly"))
dad_long_fre_s$next_node <- factor(dad_long_fre_s$next_node, levels= c("never","sometimes","regularly"))
dad_long_eng_s <- dad_long_english %>%
make_long("time_1_Eng", "time_2_Eng")
dad_long_eng_s$node <- factor(dad_long_eng_s$node, levels= c("never","sometimes", "regularly"))
dad_long_eng_s$next_node <- factor(dad_long_eng_s$next_node, levels= c("never","sometimes","regularly"))
v1_dad_prop_fre <- dad_long %>%
select(time_1_Fre, time_1_Eng) %>%
group_by(time_1_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_dad_prop_fre <- dad_long %>%
select(time_2_Fre, time_2_Eng) %>%
group_by(time_2_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v1_dad_prop_eng <- dad_long %>%
select(time_1_Fre, time_1_Eng) %>%
group_by(time_1_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_dad_prop_eng <- dad_long %>%
select(time_2_Fre, time_2_Eng) %>%
group_by(time_2_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
figure_4_a <- ggplot(dad_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=30), legend.position = "none", plot.title = element_text(size=35))+
labs(title= "A. Fathers' change of language use French")
figure_4_b <- ggplot(dad_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values =c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=30), legend.position = "none", plot.title = element_text(size=35))+
labs(title= "B. Fathers' change of language use English")
figure_4<- figure_4_a + figure_4_b
ggsave(file="Figure_4.png", width=25, height=12, dpi=300)
figure_2<- figure_2 +
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(c("time 1", "time 2"), size=35),axis.title = element_text(size=25), plot.title = element_text(size=25), legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())
print(figure_2)
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
ggsave(file="Figure_1.png", width=25, height=7, dpi=300)
