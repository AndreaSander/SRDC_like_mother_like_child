distinct(anon_baby_id)%>%
tally()
age_min <- round(min(first_visit_only$age, na.rm = T), 2)
age_max<- round(max(first_visit_only$age, na.rm = T), 2)
age_mean<- round(mean(first_visit_only$age, na.rm = T), 2)
age_sd<- round(sd(first_visit_only$age, na.rm = T), 2)
female<- first_visit_only %>%
filter(gender=="female")%>%
distinct(anon_baby_id)%>% #using anon_baby_id since it uniquely identifies individual babies, instead of identifying by study
tally()
num_visits <- final_data_strat %>%
count(anon_baby_id, name = "n_visits") %>%
count(n_visits, name = "n_families")  %>%
mutate(n_data_points = n_families* n_visits)
#French-English-Heritage bilingual percentages
#### JOINING SES INFO TO CLEAN DATA
##Do antijoin to make sure everything is fine!
first_visit_only_joined<- first_visit_only %>%
right_join(SES_info, first_visit_only, by=c("study","unique_id", "anon_baby_id", "l1", "l2"))
FEH <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Exporting the final data set that we used in all analyses and visualizations
#write_xlsx(FEH,"anonymized_data\\fam_Str_cross_sectional.xlsx")
FEH_perc<- FEH %>%
group_by(bilingual_type) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#By bilingual type percentages
fre_eng_perc <- FEH %>%
filter(bilingual_type== "fre-eng")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_her_perc <- FEH %>%
filter(bilingual_type=="fre-her")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_eng_perc <- FEH %>%
filter(bilingual_type=="eng-her") %>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#l1 amount of exposure range
min_exp_range <- final_data_strat %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data_strat %>%
select(exp_l1) %>%
max()
## Calculate percentages of overall maternal education by strategy for supplementary materials
library(RColorBrewer)
FE_maternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(strategy, maternal_education) %>%
drop_na(maternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
library(lubridate)
library(sparkline)
library(webshot)
library(htmlwidgets)
library(formattable)
library(here)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
library(waffle)
library(ggsankey)
library(dplyr)
library(tidyverse)
library(patchwork)
library(ggpubr)
library(broom)
library(janitor)
library(glmmTMB)
library(DHARMa)
library(betareg)
library(emmeans)
library(ggiraphExtra)
library(ggeffects)
library(mvtnorm)
library(boot)
library(bbmle)
library(performance)
library(see)
library(writexl)
library(ggtext)
library(kableExtra)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
load(here("anonymized_data/longitudinal_data.Rda"))
SES_info<- readxl::read_xlsx("anonymized_data/SES_and_ethicity_info.xlsx")
SES_info<-clean_names(SES_info)
#Saving my palette to use in visualizations
my_yellow<-"#FFC107"
my_orange<- "#D95F02"
my_blue<- "#1F78B4"
my_green<- "#33a02c"
my_purple<- "#683f6d"
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1)
#### JOINING SES INFO TO CLEAN DATA
##Do antijoin to make sure everything is fine!
first_visit_only<- first_visit_only %>%
right_join(SES_info, first_visit_only, by=c("study","unique_id", "anon_baby_id", "l1", "l2"))
FEH <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
unique(FEH$bilingual_type)
her_for_lms <- FEH %>%
filter(!bilingual_type == "fre-eng") %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy %in% c("one-language-at-home", "single-parent")) %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, min_exp = min_exp/100)
her_for_sup <- her_for_lms %>%
mutate(mother_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_mother,
l1 %in% c("English","Heritage")~ age_l2_acquired_mother)) %>%
mutate(mother_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_mother,
l1%in% c("French","Heritage")~ age_l2_acquired_mother)) %>%
mutate(mother_heritage_aoa = case_when (l1 == "Heritage" ~ age_l1_acquired_mother,
l1%in% c("French","English")~ age_l2_acquired_mother)) %>%
mutate(father_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_father,
l1 %in% c("English","Heritage")~ age_l2_acquired_father)) %>%
mutate(father_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_father,
l1%in% c("French","Heritage")~ age_l2_acquired_father)) %>%
mutate(father_heritage_aoa = case_when (l1 == "Heritage" ~ age_l1_acquired_father,
l1%in% c("French","English")~ age_l2_acquired_father)) %>%
mutate(mother_french_accent = case_when(l1=="French"~ l1_accent_mother,
l1 %in% c("English","Heritage")~ l2_accent_mother))%>%
mutate(mother_english_accent = case_when(l1=="English"~ l1_accent_mother,
l1%in% c("French","Heritage")~ l2_accent_mother))%>%
mutate(mother_heritage_accent = case_when (l1 == "Heritage" ~ l1_accent_mother,
l1%in% c("French","English")~ l2_accent_mother))%>%
mutate(father_french_accent = case_when(l1=="French"~ l1_accent_father,
l1 %in% c("English","Heritage")~ l2_accent_father))%>%
mutate(father_english_accent = case_when(l1=="English"~ l1_accent_father,
l1%in% c("French","Heritage")~ l2_accent_father)) %>%
mutate(father_heritage_aoa = case_when (l1 == "Heritage" ~ l1_accent_father,
l1%in% c("French","English")~ l2_accent_father))
her_for_sup <- for_sup %>%
filter(!bilingual_type == "fre-eng") %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy %in% c("one-language-at-home", "single-parent")) %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, min_exp = min_exp/100)
her_for_sup <- her_for_sup %>%
filter(!bilingual_type == "fre-eng") %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy %in% c("one-language-at-home", "single-parent")) %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, min_exp = min_exp/100)
#STRATEGY LINEAR MODELS
her_lm_stratBYaoa_eng<- lm(eng_exp ~ strategy + mother_english_aoa + father_english_aoa, data=her_for_sup)
her_lm_stratBYaoa_fre <- lm(fre_exp ~ strategy + mother_french_aoa + father_french_aoa, data=her_for_sup)
her_lm_stratBYaoa_her <- lm(min_exp ~ strategy, + mother_her_aoa + father_her_aoa, data=her_for_sup)
her_lm_stratBYaoa_her <- lm(min_exp ~ strategy, + mother_heritage_aoa + father_her_aoa, data=her_for_sup)
her_lm_stratBYaoa_her <- lm(min_exp ~ strategy, + mother_heritage_aoa + father_heritage_aoa, data=her_for_sup)
unique(her_for_sup$mother_heritage_aoa)
her_lm_stratBYaoa_her <- lm(min_exp ~ strategy + mother_heritage_aoa + father_heritage_aoa, data=her_for_sup)
#Summary of STRATEGY LINEAR models
summary(her_lm_stratBYaoa_eng)
summary(her_lm_stratBYaoa_fre)
summary(her_lm_stratBYaoa_her)
unique(FEH$age_l2_acquired_father)
unique(FEH$age_l1_acquired_father)
unique(her_for_sup$age_l2_acquired_father)
unique(her_for_sup$age_l1_acquired_father)
summary(her_lm_stratBYaoa_her)
View(her_for_sup)
her_for_sup <- her_for_lms %>%
mutate(mother_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_mother,
l1 %in% c("English","Heritage")~ age_l2_acquired_mother)) %>%
mutate(mother_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_mother,
l1%in% c("French","Heritage")~ age_l2_acquired_mother)) %>%
mutate(mother_heritage_aoa = case_when (l1 == "Heritage" ~ age_l1_acquired_mother,
l1%in% c("French","English")~ age_l2_acquired_mother)) %>%
mutate(father_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_father,
l1 %in% c("English","Heritage")~ age_l2_acquired_father)) %>%
mutate(father_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_father,
l1%in% c("French","Heritage")~ age_l2_acquired_father)) %>%
mutate(father_heritage_aoa = case_when (l1 == "Heritage" ~ age_l1_acquired_father,
l1%in% c("French","English")~ age_l2_acquired_father)) %>%
mutate(mother_french_accent = case_when(l1=="French"~ l1_accent_mother,
l1 %in% c("English","Heritage")~ l2_accent_mother))%>%
mutate(mother_english_accent = case_when(l1=="English"~ l1_accent_mother,
l1%in% c("French","Heritage")~ l2_accent_mother))%>%
mutate(mother_heritage_accent = case_when (l1 == "Heritage" ~ l1_accent_mother,
l1%in% c("French","English")~ l2_accent_mother))%>%
mutate(father_french_accent = case_when(l1=="French"~ l1_accent_father,
l1 %in% c("English","Heritage")~ l2_accent_father))%>%
mutate(father_english_accent = case_when(l1=="English"~ l1_accent_father,
l1%in% c("French","Heritage")~ l2_accent_father)) %>%
mutate(father_heritage_accent = case_when (l1 == "Heritage" ~ l1_accent_father,
l1%in% c("French","English")~ l2_accent_father))
her_for_sup <- her_for_sup %>%
filter(!bilingual_type == "fre-eng") %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy %in% c("one-language-at-home", "single-parent")) %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, min_exp = min_exp/100)
her_lm_stratBYaoa_her <- lm(min_exp ~ strategy + mother_heritage_aoa + father_heritage_aoa, data=her_for_sup)
summary(her_lm_stratBYaoa_her) #no effect of proficiency but something strange happening with father aoa
parents_her_for_sup <- her_for_sup %>%
filter(type_of_family == "mother-father family")
HERlm_parentsBYaoa_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use + mother_english_aoa + father_english_aoa, data=parents_her_for_sup)
HERlm_parentsBYaoa_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use + mother_french_aoa + father_french_aoa, data=parents_her_for_sup)
HERlm_parentsBYaoa_her<- lm(fre_exp ~ caregiver_2_heritage_use + caregiver_1_heritage_use + mother_heritage_aoa + father_heritage_aoa, data=parents_her_for_sup)
#summary of CAREGIVER Linear models
summary(HERlm_parentsBYaoa_eng)
summary(HERlm_parentsBYaoa_fre)
summary(HERlm_parentsBYaoa_her)
her_for_lang_use<- for_sup_lms %>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use =="never"~ 0,
caregiver_1_french_use =="sometimes"~1,
caregiver_1_french_use =="regularly"~2))%>%
mutate(caregiver_2_french_use = case_when(caregiver_2_french_use =="never"~ 0,
caregiver_2_french_use =="sometimes"~1,
caregiver_2_french_use =="regularly"~2))%>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use =="never"~ 0,
caregiver_1_english_use =="sometimes"~1,
caregiver_1_english_use =="regularly"~2))%>%
mutate(caregiver_2_english_use = case_when(caregiver_2_english_use =="never"~ 0,
caregiver_2_english_use =="sometimes"~1,
caregiver_2_english_use =="regularly"~2)) %>%
mutate(caregiver_2_heritage_use = case_when(caregiver_2_heritage_use =="never"~ 0,
caregiver_2_english_use =="sometimes"~1,
caregiver_2_english_use =="regularly"~2)) %>%
mutate(caregiver_1_heritage_use = case_when(caregiver_1_heritage_use =="never"~ 0,
caregiver_2_english_use =="sometimes"~1,
caregiver_2_english_use =="regularly"~2))
her_for_lang_use<- her_for_sup %>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use =="never"~ 0,
caregiver_1_french_use =="sometimes"~1,
caregiver_1_french_use =="regularly"~2))%>%
mutate(caregiver_2_french_use = case_when(caregiver_2_french_use =="never"~ 0,
caregiver_2_french_use =="sometimes"~1,
caregiver_2_french_use =="regularly"~2))%>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use =="never"~ 0,
caregiver_1_english_use =="sometimes"~1,
caregiver_1_english_use =="regularly"~2))%>%
mutate(caregiver_2_english_use = case_when(caregiver_2_english_use =="never"~ 0,
caregiver_2_english_use =="sometimes"~1,
caregiver_2_english_use =="regularly"~2)) %>%
mutate(caregiver_2_heritage_use = case_when(caregiver_2_heritage_use =="never"~ 0,
caregiver_2_english_use =="sometimes"~1,
caregiver_2_english_use =="regularly"~2)) %>%
mutate(caregiver_1_heritage_use = case_when(caregiver_1_heritage_use =="never"~ 0,
caregiver_2_english_use =="sometimes"~1,
caregiver_2_english_use =="regularly"~2))
HERlm_use_mom_fre <- lm(caregiver_1_french_use ~ mother_french_aoa + father_french_aoa, data= her_for_lang_use)
HERlm_use_mom_eng <- lm(caregiver_1_english_use ~ mother_english_aoa + father_english_aoa, data= her_for_lang_use)
HERlm_use_mom_HER <- lm(caregiver_1_heritage_use ~ mother_heritage_aoa + father_heritage_aoa, data= her_for_lang_use)
summary(HERlm_use_mom_fre)
summary(HERlm_use_mom_eng)
summary(HERlm_use_mom_HER) #
View(her_for_lang_use)
View(her_for_sup)
HERlm_use_mom_HER <- lm(caregiver_1_heritage_use ~ mother_heritage_aoa, data= her_for_lang_use)
summary(HERlm_use_mom_HER) #
her_for_lang_use<- her_for_sup %>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use =="never"~ 0,
caregiver_1_french_use =="sometimes"~1,
caregiver_1_french_use =="regularly"~2))%>%
mutate(caregiver_2_french_use = case_when(caregiver_2_french_use =="never"~ 0,
caregiver_2_french_use =="sometimes"~1,
caregiver_2_french_use =="regularly"~2))%>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use =="never"~ 0,
caregiver_1_english_use =="sometimes"~1,
caregiver_1_english_use =="regularly"~2))%>%
mutate(caregiver_2_english_use = case_when(caregiver_2_english_use =="never"~ 0,
caregiver_2_english_use =="sometimes"~1,
caregiver_2_english_use =="regularly"~2)) %>%
mutate(caregiver_2_heritage_use = case_when(caregiver_2_heritage_use =="never"~ 0,
caregiver_2_heritage_use =="sometimes"~1,
caregiver_2_heritage_use =="regularly"~2)) %>%
mutate(caregiver_1_heritage_use = case_when(caregiver_1_heritage_use =="never"~ 0,
caregiver_1_heritage_use =="sometimes"~1,
caregiver_1_heritage_use =="regularly"~2))
HERlm_use_mom_HER <- lm(caregiver_1_heritage_use ~ mother_heritage_aoa, data= her_for_lang_use)
HERlm_use_mom_HER <- lm(caregiver_1_heritage_use ~ mother_heritage_aoa + father_heritage_aoa, data= her_for_lang_use)
summary(HERlm_use_mom_HER) # MODEL NOT WORKING
summary(HERlm_use_dad_fre)
HERlm_use_dad_fre <- lm(caregiver_2_french_use ~ mother_french_aoa + father_french_aoa, data= her_for_lang_use)
HERlm_use_dad_eng <- lm(caregiver_2_english_use ~ mother_english_aoa + father_english_aoa, data= her_for_lang_use)
HERlm_use_dad_HER <- lm(caregiver_2_heritage_use ~ mother_heritage_aoa + father_heritage_aoa, data= her_for_lang_use)
summary(HERlm_use_dad_fre)
summary(HERlm_use_dad_eng)
summary(HERlm_use_dad_HER)
summary(HERlm_use_dad_HER)
HERlm_use_dad_HER <- lm(caregiver_2_heritage_use ~   father_heritage_aoa, data= her_for_lang_use)
summary(HERlm_use_dad_HER) #no proficiency effect
HERlm_parentsBYaoa_her<- lm(min_exp ~ caregiver_2_heritage_use + caregiver_1_heritage_use + mother_heritage_aoa + father_heritage_aoa, data=parents_her_for_sup)
summary(HERlm_parentsBYaoa_her) #no proficiency effect
HERlm_parentsBYacc_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use + mother_english_accent + father_english_accent, data=parents_her_for_sup)
HERlm_parentsBYacc_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use + mother_french_accent + father_french_accent, data=parents_her_for_sup)
HERlm_parentsBYacc_her<- lm(min_exp ~ caregiver_2_heritage_use + caregiver_1_heritage_use + mother_heritage_accent + father_heritage_accent, data=parents_her_for_sup)
summary(HERlm_parentsBYacc_eng)
summary(HERlm_parentsBYacc_fre)
summary(HERlm_parentsBYacc_her)
FE_for_lms<- FEH %>%
filter(bilingual_type == "fre-eng") %>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
for_lms<- FE_for_lms %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100) %>%
drop_na()
#STRATEGY LINEAR MODELS
lm_strat_eng<- lm(eng_exp ~ strategy, data=for_lms)
lm_strat_fre <- lm(fre_exp ~ strategy, data=for_lms)
#Summary of STRATEGY LINEAR models
summary(lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
summary(lm_strat_fre) #Same as above, one parent bilingual is significant and not for beta.
###### Careviver models
parents_for_lms <- for_lms%>%
filter(type_of_family == "mother-father family") #Keeps only mother-father families as other configurations were to few to analyze separately
#MOTHER MODELS
lm_mom_eng<- lm(eng_exp ~ caregiver_1_english_use, data=for_lms)
lm_mom_fre<- lm(fre_exp ~ caregiver_1_french_use, data=for_lms)
#Summary of MOTHER models
summary(lm_mom_eng) #Similar pattern of results
summary(lm_mom_fre) #same pattern of results
#FATHER MODELS
lm_dad_eng<- lm(eng_exp ~ caregiver_2_english_use, data=for_lms)
lm_dad_fre<- lm(fre_exp ~ caregiver_2_french_use, data=for_lms)
#Summary of FATHER models
summary(lm_dad_eng) #Same pattern of results
summary(lm_dad_fre) #same pattern of results
#MOTHER AND FATHER MODELS
lm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=parents_for_lms)
lm_parents_aditive_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use, data=parents_for_lms)
#Summary of Mother and Father models
summary(lm_parents_aditive_eng) #same pattern of results
summary(lm_parents_aditive_fre) #same pattern of results
performance::compare_performance(lm_parents_aditive_fre, lm_dad_fre, lm_mom_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_dad_eng, lm_mom_eng)
##Comparison of strategy versus parents models
performance::compare_performance(lm_parents_aditive_fre, lm_strat_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_strat_eng)
for_sup <- FE_for_lms %>%
mutate(mother_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_mother,
l1=="English"~ age_l2_acquired_mother)) %>%
mutate(mother_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_mother,
l1=="French"~ age_l2_acquired_mother)) %>%
mutate(father_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_father,
l1=="English"~ age_l2_acquired_father)) %>%
mutate(father_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_father,
l1=="French"~ age_l2_acquired_father)) %>%
mutate(mother_french_accent = case_when(l1=="French"~ l1_accent_mother,
l1=="English"~ l2_accent_mother))%>%
mutate(mother_english_accent = case_when(l1=="English"~ l1_accent_mother,
l1=="French"~ l2_accent_mother))%>%
mutate(father_french_accent = case_when(l1=="French"~ l1_accent_father,
l1=="English"~ l2_accent_father))%>%
mutate(father_english_accent = case_when(l1=="English"~ l1_accent_father,
l1=="French"~ l2_accent_father))
#Selecting the necessary variables for the models
for_sup_lms<- for_sup %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family, mother_french_aoa, mother_english_aoa, father_french_aoa, father_english_aoa, mother_french_accent, mother_english_accent, father_french_accent, father_english_accent) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100)
#STRATEGY LINEAR MODELS (supplementary)
lm_stratBYaoa_eng<- lm(eng_exp ~ strategy + mother_english_aoa + father_english_aoa, data=for_sup_lms)
lm_stratBYaoa_fre <- lm(fre_exp ~ strategy + mother_french_aoa + father_french_aoa, data=for_sup_lms)
lm_stratBYacc_eng<- lm(eng_exp ~ strategy + mother_english_accent + father_english_accent, data=for_sup_lms)
lm_stratBYacc_fre <- lm(fre_exp ~ strategy + mother_french_accent + father_french_accent, data=for_sup_lms)
#Summary of STRATEGY LINEAR models
summary(lm_stratBYaoa_eng)  #mother english aoa does have a significant effect
#CAREGIVER LINEAR MODELS
lm_parentsBYaoa_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use + mother_english_aoa + father_english_aoa, data=for_sup_lms)
lm_parentsBYaoa_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use + mother_french_aoa + father_french_aoa, data=for_sup_lms)
lm_parentsBYacc_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use + mother_english_accent + father_english_accent, data=for_sup_lms)
#summary of CAREGIVER Linear models
summary(lm_parentsBYaoa_eng) #mother aoa still significant but not fathers'
summary(lm_parentsBYaoa_fre) #mother aoa not significant here.
anova(lm_parentsBYaoa_eng, lm_parents_aditive_eng)
testlm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=data=for_sup_lms)
testlm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=for_sup_lms)
testlm_parents_aditive_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use, data=for_sup_lms)
anova(lm_parentsBYaoa_eng, testlm_parents_aditive_eng)
