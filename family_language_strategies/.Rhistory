group_by(bilingual_type) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#By bilingual type percentages
fre_eng_perc <- FEH %>%
filter(bilingual_type== "fre-eng")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_her_perc <- FEH %>%
filter(bilingual_type=="fre-her")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_eng_perc <- FEH %>%
filter(bilingual_type=="eng-her") %>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#l1 amount of exposure range
min_exp_range <- final_data_strat %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data_strat %>%
select(exp_l1) %>%
max()
###JOINING SES INFO TO CLEAN DATA
FEH <- FEH %>%
right_join(SES_info, FEH, by=c("unique_id", "study", "anon_baby_id"))
##MATERNAL EDUCATION French-English sample
FE_maternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(maternal_education) %>%
drop_na(maternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Paternal EDUCATION French-English sample
FE_paternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(paternal_education) %>%
drop_na(paternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Child ethnicity French-English sample
FE_child_ethicity <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(child_ethnicity) %>%
drop_na(child_ethnicity)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##MATERNAL EDUCATION heritage sample
her_maternal_education <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(maternal_education) %>%
drop_na(maternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Paternal EDUCATION heritage sample
her_paternal_education <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(paternal_education) %>%
drop_na(paternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Child ethnicity her sample
her_child_ethicity <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(child_ethnicity) %>%
drop_na(child_ethnicity) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length <- longitudinal_data_analyses %>%
filter(visit <= 2)
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
#Family language strategy visualization
####### FOR THE FRENCH- ENGLISH SAMPLE ############
#Calculating how many families use each strategy and its corresponding %
prop_strategy_FE<- FEH %>%
filter(bilingual_type == "fre-eng")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Reordering levels so legend in the graph is in order.
prop_strategy_FE$strategy<- factor(prop_strategy_FE$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
prop_strategy_FE<- prop_strategy_FE %>%
arrange(desc(prop))
#Waffle plot
V1_FE<- setNames(prop_strategy_FE$n, c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lanaguage", "one-language-at-home", "single-parent"))
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
ggsave(file="Figure_1.png", width=25, height=7, dpi=300)
#Making a figure of most used strategies divided by lang exposure
for_breakdown <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
group_by(strategy, l1) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
for_breakdown$strategy<- factor(for_breakdown$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
ggplot(for_breakdown, aes(x=l1, y=n, fill=strategy)) +
geom_bar(stat="identity", position="fill") +
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue, "#91bfdb", "#e0f3f8"))
### Looking at the individual parent strategies in each family language strategy
##Both parents bilingual
FE_both_parent_b<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(bilingual_type == "fre-eng") %>%
filter(strategy=="both-parents-bilingual") %>%
mutate(caregiver1_French =  case_when (l1== "French"~care1_l1,
l1== "English"~care1_l2)) %>%
mutate(caregiver1_English =  case_when (l1== "English"~care1_l1,
l1== "French"~care1_l2)) %>%
mutate(caregiver2_French =  case_when (l1== "French"~care2_l1,
l1== "English"~care2_l2)) %>%
mutate(caregiver2_English =  case_when (l1== "English"~care2_l1,
l1== "French"~care2_l2)) %>%
mutate(mom_use_strategy = case_when( caregiver1_French == "regularly" & caregiver1_English == "regularly" ~ "both regularly",
caregiver1_French == "regularly" & caregiver1_English == "sometimes" ~ "french-reg-english-some",
caregiver1_French == "sometimes" & caregiver1_English == "regularly" ~ "french-some-english-reg"))%>%
mutate(dad_use_strategy = case_when( caregiver2_French == "regularly" & caregiver2_English == "regularly" ~ "both regularly",
caregiver2_French == "regularly" & caregiver2_English == "sometimes" ~ "french-reg-english-some",
caregiver2_French == "sometimes" & caregiver2_English == "regularly" ~ "french-some-english-reg",
TRUE~"both-sometimes"))
# what are the percentages ?
mom_biling_strat<- FE_both_parent_b %>%
group_by(mom_use_strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
dad_biling_strat<- FE_both_parent_b %>%
group_by(dad_use_strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
## One-parent-bilingual
#Which parent is the bilingual parent?
FE_one_parent_b<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(bilingual_type == "fre-eng") %>%
filter(strategy=="one-parent-bilingual") %>%
mutate(caregiver_biling = case_when(care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("regularly", "sometimes") ~ "caregiver1",
TRUE ~ "caregiver2"))
#What are the percentages
FE_caregiver_bi_prop <- FE_one_parent_b %>%
filter(type_of_family == "mother-father family") %>%
group_by(caregiver_biling) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 81% mothers are the bilingual caregiver
#Which languages are spoken by the monolingual parent?
monoling_careg_lang<- FE_one_parent_b %>%
mutate(monolingual_care_lang = case_when(caregiver_biling == "caregiver1" & care2_l1 %in% c("regularly", "sometimes") ~ l1,
caregiver_biling == "caregiver1" & care2_l2 %in% c("regularly", "sometimes") ~ l2,
caregiver_biling == "caregiver2" & care1_l1 %in% c("regularly", "sometimes") ~l1,
caregiver_biling == "caregiver2" & care1_l2 %in% c("regularly", "sometimes") ~l2)) %>%
group_by(monolingual_care_lang) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 69% on the parents who are monolingual speak English
##Also looking at OPOL to see who speaks French
FE_opol <- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(bilingual_type == "fre-eng") %>%
filter(strategy=="one-parent-one-lang") %>%
mutate(momlangs = paste0(l1, care1_l1, "-", l2, care1_l2), #get mom languages and amount spoken
dadlangs = paste0(l1, care2_l1, "-", l2, care2_l2)) %>% #get dad languages and amount spoken
mutate(across(c(momlangs, dadlangs),
~str_remove(., "-{0,1}.{6,7}never-{0,1}"))) %>% #remove the "never" languages
mutate(across(c(momlangs, dadlangs),
~case_when(str_detect(., "-") ~ "flex", #at this point, if there's still a hyphen, then both languages are used so it's "flex"
TRUE ~ str_remove(., "regularly|sometimes")))) %>% #if there is no hyphen, then it's just 1 language so remove the "regularly" or "sometimes" to just leave the language name
mutate(parents_lang_use = case_when(dadlangs == "flex" ~ paste0("dad_", str_to_lower(dadlangs), "_mom_", str_to_lower(momlangs)),
TRUE ~ paste0("mom_", str_to_lower(momlangs), "_dad_", str_to_lower(dadlangs)))) #if dad is the flex one, put him first, otherwise mom goes first
opol_count<- FE_opol %>%
group_by(parents_lang_use) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
FE_for_lms<- FEH %>%
filter(bilingual_type == "fre-eng") %>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
for_lms<- FE_for_lms %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100) %>%
drop_na()
#STRATEGY LINEAR MODELS
lm_strat_eng<- lm(eng_exp ~ strategy, data=for_lms)
lm_strat_fre <- lm(fre_exp ~ strategy, data=for_lms)
#Summary of STRATEGY LINEAR models
summary(lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
summary(lm_strat_fre) #Same as above, one parent bilingual is significant and not for beta.
###### Careviver models
parents_for_lms <- for_lms%>%
filter(type_of_family == "mother-father family") #Keeps only mother-father families as other configurations were to few to analyze separately
#MOTHER MODELS
lm_mom_eng<- lm(eng_exp ~ caregiver_1_english_use, data=for_lms)
lm_mom_fre<- lm(fre_exp ~ caregiver_1_french_use, data=for_lms)
#Summary of MOTHER models
summary(lm_mom_eng) #Similar pattern of results
summary(lm_mom_fre) #same pattern of results
#FATHER MODELS
lm_dad_eng<- lm(eng_exp ~ caregiver_2_english_use, data=for_lms)
lm_dad_fre<- lm(fre_exp ~ caregiver_2_french_use, data=for_lms)
#Summary of FATHER models
summary(lm_dad_eng) #Same pattern of results
summary(lm_dad_fre) #same pattern of results
#MOTHER AND FATHER MODELS
lm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=parents_for_lms)
lm_parents_aditive_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use, data=parents_for_lms)
#Summary of Mother and Father models
summary(lm_parents_aditive_eng) #same pattern of results
summary(lm_parents_aditive_fre) #same pattern of results
performance::compare_performance(lm_parents_aditive_fre, lm_dad_fre, lm_mom_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_dad_eng, lm_mom_eng)
##Comparison of strategy versus parents models
performance::compare_performance(lm_parents_aditive_fre, lm_strat_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_strat_eng)
###### FOR THE FRENCH- HERITAGE SAMPLE ###########
#Calculating how many families use each strategy and its corresponding %
her_prop_strategy<- FEH %>%
filter(!bilingual_type == "fre-eng")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Reordering levels so legend in the graph is in order.
her_prop_strategy$strategy<- factor(her_prop_strategy$strategy, levels= c("one-parent-bilingual","both-parents-bilingual", "one-parent-one-lang", "single-parent", "one-language-at-home"))
her_prop_strategy<- her_prop_strategy %>%
arrange(desc(prop))
#Waffle plot
her_V1<- setNames(her_prop_strategy$n, c( "one-parent-bilingual","both-parents-bilingual","one-parent-one-lanaguage",  "single-parent", "one-language-at-home"))
figure_5 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_purple, my_green), keep = T, size=0.6)
### Looking at the individual parent strategies in each family language strategy
##Both parents bilingual
her_both_parent_b<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(!bilingual_type == "fre-eng")%>%
filter(strategy=="both-parents-bilingual") %>%
mutate(caregiver1_French =  case_when (l1== "French"~care1_l1,
l2== "French"~care1_l2)) %>%
mutate(caregiver1_English =  case_when (l1== "English"~care1_l1,
l2== "English"~care1_l2)) %>%
mutate(caregiver1_heritage =  case_when (l1== "Heritage"~care1_l1,
l2== "Heritage"~care1_l2)) %>%
mutate(caregiver2_French =  case_when (l1== "French"~care2_l1,
l2== "French"~care2_l2)) %>%
mutate(caregiver2_English =  case_when (l1== "English"~care2_l1,
l2== "English"~care2_l2)) %>%
mutate(caregiver2_heritage =  case_when (l1== "Heritage"~care2_l1,
l2== "Heritage"~care2_l2)) %>%
mutate(mom_use_strategy = case_when( caregiver1_heritage == "regularly" & caregiver1_heritage == "regularly" ~ "both regularly",
caregiver1_French == "regularly" & caregiver1_heritage == "regularly" ~ "both regularly",
caregiver1_English == "regularly" & caregiver1_heritage == "regularly" ~ "both regularly",
caregiver1_French == "regularly" & caregiver1_heritage == "sometimes" ~ "french-reg-heritage-some",
caregiver1_French == "sometimes" & caregiver1_heritage == "regularly" ~ "french-some-heritage-reg",
caregiver1_English == "regularly" & caregiver1_heritage == "sometimes" ~ "english-reg-heritage-some",
caregiver1_English == "sometimes" & caregiver1_heritage == "regularly" ~ "english-some-heritage-reg",
))%>%
mutate(dad_use_strategy = case_when( caregiver2_heritage == "regularly" & caregiver2_heritage == "regularly" ~ "both regularly",
caregiver2_French == "regularly" & caregiver2_heritage == "regularly" ~ "both regularly",
caregiver2_English == "regularly" & caregiver2_heritage == "regularly" ~ "both regularly",
caregiver2_French == "regularly" & caregiver2_heritage == "sometimes" ~ "french-reg-heritage-some",
caregiver2_French == "sometimes" & caregiver2_heritage == "regularly" ~ "french-some-heritage-reg",
caregiver2_English == "regularly" & caregiver2_heritage == "sometimes" ~ "english-reg-heritage-some",
caregiver2_English == "sometimes" & caregiver2_heritage == "regularly" ~ "english-some-heritage-reg",
TRUE~"both-sometimes"))
# what are the percentages ?
her_mom_biling_strat<- her_both_parent_b %>%
group_by(mom_use_strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_dad_biling_strat<- her_both_parent_b %>%
group_by(dad_use_strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
## One-parent-bilingual
#Which parent is the bilingual parent?
her_one_parent_b<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(!bilingual_type == "fre-eng") %>%
filter(strategy=="one-parent-bilingual") %>%
mutate(caregiver_biling = case_when(care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("regularly", "sometimes") ~ "caregiver1",
TRUE ~ "caregiver2"))
#What are the percentages
her_caregiver_bi_prop <- her_one_parent_b %>%
group_by(caregiver_biling) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 67% mothers are the bilingual caregiver
#Which languages are spoken by the monolingual parent?
her_monoling_careg_lang<- her_one_parent_b %>%
mutate(monolingual_care_lang = case_when(caregiver_biling == "caregiver1" & care2_l1 %in% c("regularly", "sometimes") ~ l1,
caregiver_biling == "caregiver1" & care2_l2 %in% c("regularly", "sometimes") ~ l2,
caregiver_biling == "caregiver2" & care1_l1 %in% c("regularly", "sometimes") ~l1,
caregiver_biling == "caregiver2" & care1_l2 %in% c("regularly", "sometimes") ~l2)) %>%
group_by(monolingual_care_lang) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 69% on the parents who are monolingual speak English
##Also looking at OPOL strategy
her_opol<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(!bilingual_type == "fre-eng") %>%
filter(strategy=="one-parent-one-lang") %>%
mutate(parents_flexible_use = case_when( care1_l1 == "sometimes"| care1_l2 == "sometimes"|care2_l1 == "sometimes"|care2_l2 == "sometimes" ~ "flex_use",
TRUE ~ "strict_use"
))
her_flex_opol_count<- her_opol %>%
group_by(parents_flexible_use) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_opol_flex<- her_opol %>%
filter(parents_flexible_use == "flex_use") %>%
mutate(flex_parent = case_when(care1_l1 == "sometimes" | care1_l2  == "sometimes" ~ "mom",
TRUE~ "dad"))
her_opol_strict<- her_opol %>%
filter(!parents_flexible_use == "flex_use")
her_opol_parent_count<- her_opol_flex %>%
group_by(flex_parent) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
## Which language is spoken by which parent
l1_by_mother <- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(!bilingual_type == "fre-eng") %>%
group_by(l1, care1_l1) %>%
tally()
l1_by_father <- FEH%>%
filter(type_of_family == "mother-father family") %>%
filter(!bilingual_type == "fre-eng") %>%
group_by(l1, care2_l1)%>%
tally()
l2_by_mother <- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(!bilingual_type == "fre-eng") %>%
group_by(l2, care1_l2) %>%
tally()
l2_by_father <- FEH%>%
filter(type_of_family == "mother-father family") %>%
filter(!bilingual_type == "fre-eng") %>%
group_by(l2, care2_l2)%>%
tally()
her_for_lms <- FEH %>%
filter(!bilingual_type == "fre-eng") %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy %in% c("one-language-at-home", "single-parent")) %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, min_exp = min_exp/100)
#STRATEGY LINEAR MODELS
her_lm_strat_eng<- lm(eng_exp ~ strategy, data=her_for_lms)
her_lm_strat_fre <- lm(fre_exp ~ strategy, data=her_for_lms)
her_lm_strat_her <- lm(min_exp ~ strategy, data=her_for_lms)
#Summary of STRATEGY LINEAR models
summary(her_lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
summary(her_lm_strat_fre) #Same as above, one parent bilingual is significant and not for beta.
summary(her_lm_strat_her)
###### Careviver models
her_parents_for_lms <- her_for_lms %>%
filter(type_of_family == "mother-father family")
#MOTHER MODELS
her_lm_mom_eng<- lm(eng_exp ~ caregiver_1_english_use, data=her_for_lms)
her_lm_mom_fre<- lm(fre_exp ~ caregiver_1_french_use, data=her_for_lms)
her_lm_mom_her<- lm(min_exp ~ caregiver_1_heritage_use, data=her_for_lms)
#Summary of MOTHER models
summary(her_lm_mom_eng)
summary(her_lm_mom_fre)
summary(her_lm_mom_her)
#FATHER MODELS
her_lm_dad_eng<- lm(eng_exp ~ caregiver_2_english_use, data=her_for_lms)
her_lm_dad_fre<- lm(fre_exp ~ caregiver_2_french_use, data=her_for_lms)
her_lm_dad_her<- lm(min_exp ~ caregiver_2_heritage_use, data=her_for_lms)
#Summary of FATHER models
summary(her_lm_dad_eng)
summary(her_lm_dad_fre)
summary(her_lm_dad_her)
#MOTHER AND FATHER MODELS
her_lm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=her_for_lms)
her_lm_parents_aditive_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use, data=her_for_lms)
her_lm_parents_aditive_her<- lm(min_exp ~ caregiver_2_heritage_use + caregiver_1_heritage_use, data=her_for_lms)
#Summary of Mother and Father models
summary(her_lm_parents_aditive_eng)
summary(her_lm_parents_aditive_fre)
summary(her_lm_parents_aditive_her)
performance::compare_performance(her_lm_parents_aditive_fre, her_lm_dad_fre, her_lm_mom_fre)
performance::compare_performance(her_lm_parents_aditive_eng, her_lm_dad_eng, her_lm_mom_eng)
performance::compare_performance(her_lm_parents_aditive_her, her_lm_dad_her, her_lm_mom_her)
##Comparison of strategy versus parents models
performance::compare_performance(her_lm_parents_aditive_fre, her_lm_strat_fre)
performance::compare_performance(her_lm_parents_aditive_eng, her_lm_strat_eng)
performance::compare_performance(her_lm_parents_aditive_her, her_lm_strat_her)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
ov1<- plot_models(lm_parents_aditive_eng, lm_parents_aditive_fre, show.values = TRUE, show.p = T)+ theme_bw()
ov2<- plot_models(her_lm_parents_aditive_eng, her_lm_parents_aditive_fre, her_lm_parents_aditive_her, show.values = T, show.p = T)+ theme_bw()
other_visualization<- ov1+ov2
print(other_visualization)
?plot_models
ov1<- plot_models(lm_parents_aditive_eng, lm_parents_aditive_fre, show.values = TRUE, show.p = T, title = "Individual Parents' Contributions Model Estimates- French-English Sample")+ theme_bw()
ov2<- plot_models(her_lm_parents_aditive_eng, her_lm_parents_aditive_fre, her_lm_parents_aditive_her, show.values = T, show.p = T, title = "Individual Parents' Contributions Model Estimates- Heritage Sample")+ theme_bw()
other_visualization<- ov1+ov2
print(other_visualization)
ov1_labels<- c("father regular use", "father use sometimes", "mother use regularly", "mother use sometimes","father regular use", "father use sometimes", "mother use regularly", "mother use sometimes")
ov1<- plot_models(lm_parents_aditive_eng, lm_parents_aditive_fre, show.values = TRUE, show.p = T, title = "Individual Parents' Contributions Model Estimates- French-English Sample", axis.labels = ov1_labels)+ theme_bw()
print(ov1)
ov1_labels<- c("mother use regularly", "mother use sometimes", "father regular use", "father use sometimes", "mother use regularly", "mother use sometimes","father regular use", "father use sometimes")
ov1<- plot_models(lm_parents_aditive_eng, lm_parents_aditive_fre, show.values = TRUE, show.p = T, title = "Individual Parents' Contributions Model Estimates- French-English Sample", axis.labels = ov1_labels)+ theme_bw()
print(ov1)
ov1_labels<- c("mother use sometimes", "mother use regularly", "father use sometimes", "father use regularly", "mother use sometimes", "mother use regularly","father use sometimes", "father use regularly")
ov1<- plot_models(lm_parents_aditive_eng, lm_parents_aditive_fre, show.values = TRUE, show.p = T, title = "Individual Parents' Contributions Model Estimates- French-English Sample", axis.labels = ov1_labels)+ theme_bw()
print(ov1)
print(ov2)
ov2_labels<- c("mother use sometimes", "mother use regularly", "father use sometimes", "father use regularly", "mother use sometimes", "mother use regularly","father use sometimes", "father use regularly", "mother use sometimes", "mother use regularly","father use sometimes", "father use regularly")
ov2<- plot_models(her_lm_parents_aditive_eng, her_lm_parents_aditive_fre, her_lm_parents_aditive_her, show.values = T, show.p = T, title = "Individual Parents' Contributions Model Estimates- Heritage Sample", axis.labels = ov2_labels)+ theme_bw()
print(ov2)
other_visualization<- ov1+ov2
print(other_visualization)
print(other_visualization)
?plot_models
ov1<- plot_models(lm_parents_aditive_eng, lm_parents_aditive_fre, show.values = TRUE, show.p = T, title = "A.Individual Parents' Contributions Model Estimates- French-English Sample", axis.labels = ov1_labels)+ theme_bw() +
theme(axis.text.x = element_text(size=35))
print(ov1)
ov1<- plot_models(lm_parents_aditive_eng, lm_parents_aditive_fre, show.values = TRUE, show.p = T, title = "A.Individual Parents' Contributions Model Estimates- French-English Sample", axis.labels = ov1_labels)+ theme_bw() +
theme(axis.text.y = element_text(size=20))
print(ov1)
ov1<- plot_models(lm_parents_aditive_eng, lm_parents_aditive_fre, show.values = TRUE, show.p = T, title = "A.Individual Parents' Contributions Model Estimates- French-English Sample", axis.labels = ov1_labels)+ theme_bw() +
theme(axis.text.y = element_text(size=15))
print(ov1)
