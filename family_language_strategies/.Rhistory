tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_her_perc <- FEH %>%
filter(bilingual_type=="fre-her")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_eng_perc <- FEH %>%
filter(bilingual_type=="eng-her") %>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#l1 amount of exposure range
min_exp_range <- final_data_strat %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data_strat %>%
select(exp_l1) %>%
max()
###JOINING SES INFO TO CLEAN DATA
FEH <- FEH %>%
right_join(SES_info, FEH, by=c("unique_id", "study", "anon_baby_id"))
##MATERNAL EDUCATION French-English sample
FE_maternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(maternal_education) %>%
drop_na(maternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Paternal EDUCATION French-English sample
FE_paternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(paternal_education) %>%
drop_na(paternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Child ethnicity French-English sample
FE_child_ethicity <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(child_ethnicity) %>%
drop_na(child_ethnicity)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##MATERNAL EDUCATION heritage sample
her_maternal_education <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(maternal_education) %>%
drop_na(maternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Paternal EDUCATION heritage sample
her_paternal_education <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(paternal_education) %>%
drop_na(paternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Child ethnicity her sample
her_child_ethicity <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(child_ethnicity) %>%
drop_na(child_ethnicity) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length <- longitudinal_data_analyses %>%
filter(visit <= 2)
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
#Family language strategy visualization
####### FOR THE FRENCH- ENGLISH SAMPLE ############
#Calculating how many families use each strategy and its corresponding %
prop_strategy_FE<- FEH %>%
filter(bilingual_type == "fre-eng")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Reordering levels so legend in the graph is in order.
prop_strategy_FE$strategy<- factor(prop_strategy_FE$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
prop_strategy_FE<- prop_strategy_FE %>%
arrange(desc(prop))
#Waffle plot
V1_FE<- setNames(prop_strategy_FE$n, c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lanaguage", "one-language-at-home", "single-parent"))
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
ggsave(file="Figure_1.png", width=25, height=7, dpi=300)
#Making a figure of most used strategies divided by lang exposure
for_breakdown <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
group_by(strategy, l1) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
for_breakdown$strategy<- factor(for_breakdown$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
ggplot(for_breakdown, aes(x=l1, y=n, fill=strategy)) +
geom_bar(stat="identity", position="fill") +
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue, "#91bfdb", "#e0f3f8"))
for_chisq <- prop_strategy_FE %>%
filter(!strategy %in% c("single-parent", "one-language-at-home"))
xsq_test<- chisq.test(for_chisq$n)
chisq_value<- round(xsq_test$statistic, 2)
chisq_p<- round(xsq_test$p.value, 4)
### Looking at the individual parent strategies in each family language strategy
##Both parents bilingual
FE_both_parent_b<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(bilingual_type == "fre-eng") %>%
filter(strategy=="both-parents-bilingual") %>%
mutate(caregiver1_French =  case_when (l1== "French"~care1_l1,
l1== "English"~care1_l2)) %>%
mutate(caregiver1_English =  case_when (l1== "English"~care1_l1,
l1== "French"~care1_l2)) %>%
mutate(caregiver2_French =  case_when (l1== "French"~care2_l1,
l1== "English"~care2_l2)) %>%
mutate(caregiver2_English =  case_when (l1== "English"~care2_l1,
l1== "French"~care2_l2)) %>%
mutate(mom_use_strategy = case_when( caregiver1_French == "regularly" & caregiver1_English == "regularly" ~ "both regularly",
caregiver1_French == "regularly" & caregiver1_English == "sometimes" ~ "french-reg-english-some",
caregiver1_French == "sometimes" & caregiver1_English == "regularly" ~ "french-some-english-reg"))%>%
mutate(dad_use_strategy = case_when( caregiver2_French == "regularly" & caregiver2_English == "regularly" ~ "both regularly",
caregiver2_French == "regularly" & caregiver2_English == "sometimes" ~ "french-reg-english-some",
caregiver2_French == "sometimes" & caregiver2_English == "regularly" ~ "french-some-english-reg",
TRUE~"both-sometimes"))
# what are the percentages ?
mom_biling_strat<- FE_both_parent_b %>%
group_by(mom_use_strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
dad_biling_strat<- FE_both_parent_b %>%
group_by(dad_use_strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
## One-parent-bilingual
#Which parent is the bilingual parent?
FE_one_parent_b<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(bilingual_type == "fre-eng") %>%
filter(strategy=="one-parent-bilingual") %>%
mutate(caregiver_biling = case_when(care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("regularly", "sometimes") ~ "caregiver1",
TRUE ~ "caregiver2"))
#What are the percentages
FE_caregiver_bi_prop <- FE_one_parent_b %>%
filter(type_of_family == "mother-father family") %>%
group_by(caregiver_biling) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 81% mothers are the bilingual caregiver
#Which languages are spoken by the monolingual parent?
monoling_careg_lang<- FE_one_parent_b %>%
mutate(monolingual_care_lang = case_when(caregiver_biling == "caregiver1" & care2_l1 %in% c("regularly", "sometimes") ~ l1,
caregiver_biling == "caregiver1" & care2_l2 %in% c("regularly", "sometimes") ~ l2,
caregiver_biling == "caregiver2" & care1_l1 %in% c("regularly", "sometimes") ~l1,
caregiver_biling == "caregiver2" & care1_l2 %in% c("regularly", "sometimes") ~l2)) %>%
group_by(monolingual_care_lang) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 69% on the parents who are monolingual speak English
##Also looking at OPOL to see who speaks French
FE_opol <- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(bilingual_type == "fre-eng") %>%
filter(strategy=="one-parent-one-lang") %>%
mutate(momlangs = paste0(l1, care1_l1, "-", l2, care1_l2), #get mom languages and amount spoken
dadlangs = paste0(l1, care2_l1, "-", l2, care2_l2)) %>% #get dad languages and amount spoken
mutate(across(c(momlangs, dadlangs),
~str_remove(., "-{0,1}.{6,7}never-{0,1}"))) %>% #remove the "never" languages
mutate(across(c(momlangs, dadlangs),
~case_when(str_detect(., "-") ~ "flex", #at this point, if there's still a hyphen, then both languages are used so it's "flex"
TRUE ~ str_remove(., "regularly|sometimes")))) %>% #if there is no hyphen, then it's just 1 language so remove the "regularly" or "sometimes" to just leave the language name
mutate(parents_lang_use = case_when(dadlangs == "flex" ~ paste0("dad_", str_to_lower(dadlangs), "_mom_", str_to_lower(momlangs)),
TRUE ~ paste0("mom_", str_to_lower(momlangs), "_dad_", str_to_lower(dadlangs)))) #if dad is the flex one, put him first, otherwise mom goes first
opol_count<- FE_opol %>%
group_by(parents_lang_use) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
FE_for_lms<- FEH %>%
filter(bilingual_type == "fre-eng") %>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
for_lms<- FE_for_lms %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100) %>%
drop_na()
#STRATEGY LINEAR MODELS
lm_strat_eng<- lm(eng_exp ~ strategy, data=for_lms)
lm_strat_fre <- lm(fre_exp ~ strategy, data=for_lms)
#Summary of STRATEGY LINEAR models
summary(lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
summary(lm_strat_fre) #Same as above, one parent bilingual is significant and not for beta.
###### Careviver models
parents_for_lms <- for_lms%>%
filter(type_of_family == "mother-father family") #Keeps only mother-father families as other configurations were to few to analyze separately
#MOTHER MODELS
lm_mom_eng<- lm(eng_exp ~ caregiver_1_english_use, data=for_lms)
lm_mom_fre<- lm(fre_exp ~ caregiver_1_french_use, data=for_lms)
#Summary of MOTHER models
summary(lm_mom_eng) #Similar pattern of results
summary(lm_mom_fre) #same pattern of results
#FATHER MODELS
lm_dad_eng<- lm(eng_exp ~ caregiver_2_english_use, data=for_lms)
lm_dad_fre<- lm(fre_exp ~ caregiver_2_french_use, data=for_lms)
#Summary of FATHER models
summary(lm_dad_eng) #Same pattern of results
summary(lm_dad_fre) #same pattern of results
#MOTHER AND FATHER MODELS
lm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=parents_for_lms)
lm_parents_aditive_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use, data=parents_for_lms)
#Summary of Mother and Father models
summary(lm_parents_aditive_eng) #same pattern of results
summary(lm_parents_aditive_fre) #same pattern of results
performance::compare_performance(lm_parents_aditive_fre, lm_dad_fre, lm_mom_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_dad_eng, lm_mom_eng)
##Comparison of strategy versus parents models
performance::compare_performance(lm_parents_aditive_fre, lm_strat_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_strat_eng)
## LONGITUDINAL DATA ANALYSES ##
FE_long_analyses<- longitudinal_data_analyses %>%
filter(bilingual_type=="fre-eng")
v1_strat_prop <- FE_long_analyses %>%
select(visit, strategy) %>%
filter(visit==1) %>%
filter(!strategy == "single-parent") %>%
group_by(strategy) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_strat_prop <- FE_long_analyses %>%
select(visit, strategy) %>%
filter(visit==2) %>%
filter(!strategy == "single-parent") %>%
group_by(strategy) %>%
tally(name = "n_second_visit")%>%
mutate(proportion_second_visit = n_second_visit/sum(n_second_visit)) %>%
mutate(percentage_second_visit= proportion_second_visit*100)
FE_percentages_visits <- merge(v1_strat_prop, v2_strat_prop, by="strategy")
FE_for_sankey <- FE_for_long_glmer %>%
select(-change_strat) %>%
rename("time 1" = "time_1") %>%
rename("time 2" = "time_2") %>%
make_long("time 1", "time 2")
FE_for_long_glmer<- FE_long_analyses %>%
select(visit, strategy, length_between_visits, anon_baby_id) %>%
filter(visit %in% c(1,2)) %>%
filter(!strategy == "single-parent") %>%
pivot_wider(names_from = visit, values_from = strategy) %>%
rename(time_1 = "1") %>%
rename(time_2 = "2") %>%
mutate(change_strat = case_when(time_1 == time_2 ~"no_change",
TRUE~ "change"))
FE_for_long_glmer<- FE_for_long_glmer
FE_count_change <- FE_for_long_glmer %>%
group_by(change_strat) %>%
tally() %>%
mutate(perc = (n/sum(n)*100))
FE_strategy_change <- FE_for_long_glmer %>%
filter(change_strat=="change") %>%
group_by(time_2) %>%
tally() %>%
mutate(perc = (n/sum(n)*100))
long_model<- glmer(as.factor(change_strat) ~ scale(length_between_visits) +(1|anon_baby_id), data = FE_for_long_glmer, family="binomial")
summary(long_model)
FE_for_sankey <- FE_for_long_glmer %>%
select(-change_strat) %>%
rename("time 1" = "time_1") %>%
rename("time 2" = "time_2") %>%
make_long("time 1", "time 2")
FE_for_sankey <- FE_for_sankey %>%
mutate(node= fct_relevel (node, "both-parents-bilingual", "one-parent-bilingual", "one-language-at-home", "one-parent-one-lang"))
FE_p1<- ggplot(FE_for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node )) +
geom_sankey()
figure_2 <- FE_p1+
scale_fill_manual(name= "x", values = c(my_orange, my_yellow, my_blue))
figure_2<- figure_2 +
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=35),axis.title = element_text(size=25), plot.title = element_text(size=25), legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())
?annotate
print(figure_2)
print(figure_1)
?waffle
?annotate
figure_1<- waffle(parts = V1, rows=20, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, title = "Proportion of Use of Family Strategies", size=0.6) %>%
annotate("test")
figure_1<- waffle(parts = V1, rows=20, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, title = "Proportion of Use of Family Strategies", size=0.6)
#Waffle plot
V1<- setNames(prop_strategy$n, c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lanaguage", "one-language-at-home", "single-parent"))
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text")
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4, y=25)
figure_1
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4, y=25, label="some text")
figure_1
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4, y=5, label="some text")
figure_1
13*9
117-3
114/(13*18)
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4, y=8, label="52%")
figure_!
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4, y=8, label="52%")
figure_1
114/(13*17)
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4, y=12, label="52%")
figure_1
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4, y=15, label="52%")
figure_1
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4, y=13, label="52%")
figure_1
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4, y=14, label="52%")
figure_1
ggsave(file="Figure_1.png", width=25, height=7, dpi=300)
?annotate
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4:14, y=8, label=c("52%", "24%", "19%", "3%", "2%"))
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4:9, y=8, label=c("52%", "24%", "19%", "3%", "2%"))
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=4:8, y=8, label=c("52%", "24%", "19%", "3%", "2%"))
figure_1
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=c(4,7,10,11,12), y=8, label=c("52%", "24%", "19%", "3%", "2%"))
figure_1
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=c(4,11,15,16), y=8, label=c("52%", "24%", "19%", "3%", "2%"))
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=c(4,11,15,16,17), y=8, label=c("52%", "24%", "19%", "3%", "2%"))
figure_1
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=c(4,11,15), y=8, label=c("52%", "24%", "19%")) +
annotate("text", x=17, y=6, label= "3%")+
annotate("text", x=17, y=6, label= "3%")
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=c(4,11,15), y=8, label=c("52%", "24%", "19%")) +
annotate("text", x=17, y=6, label= "3%")+
annotate("text", x=19, y=10, label= "2%")
figure_1
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=c(4,11,15), y=8, label=c("52%", "24%", "19%")) +
annotate("text", x=17, y=6, label= "3%")+
annotate("text", x=17, y=10, label= "2%")
figure_1
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("text", x=c(4,11,15), y=8, label=c("52%", "24%", "19%"), box.color="white") +
annotate("text", x=17, y=6, label= "3%")+
annotate("text", x=17, y=10, label= "2%")
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
geom_text(aes(x=c(4,11,15), y=8, label=c("52%", "24%", "19%"), box.color="white")) +
annotate("text", x=17, y=6, label= "3%")+
annotate("text", x=17, y=10, label= "2%")
figure_1
install.packages("ggtext")
library(ggtext)
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("richtext", x=c(4,11,15), y=8, label=c("52%", "24%", "19%")) +
annotate("text", x=17, y=6, label= "3%")+
annotate("text", x=17, y=10, label= "2%")
figure_1
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12)) +
annotate("richtext", x=c(4,11,15), y=8, label=c("52%", "24%", "19%")) +
annotate("richtext", x=17, y=6, label= "3%")+
annotate("richtext", x=17, y=10, label= "2%")
figure_1
ggsave(file="Figure_1.png", width=25, height=7, dpi=300)
figure_1<- waffle(parts = V1_FE, rows=13, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, size=0.6)+
annotate("richtext", x=c(4,11,15), y=8, label=c("52%", "24%", "19%")) +
annotate("richtext", x=17, y=6, label= "3%")+
annotate("richtext", x=17, y=10, label= "2%")+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
figure_1
###### FOR THE FRENCH- HERITAGE SAMPLE ###########
#Calculating how many families use each strategy and its corresponding %
her_prop_strategy<- FEH %>%
filter(!bilingual_type == "fre-eng")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Reordering levels so legend in the graph is in order.
her_prop_strategy$strategy<- factor(her_prop_strategy$strategy, levels= c("one-parent-bilingual","both-parents-bilingual", "one-parent-one-lang", "single-parent", "one-language-at-home"))
her_prop_strategy<- her_prop_strategy %>%
arrange(desc(prop))
#Waffle plot
her_V1<- setNames(her_prop_strategy$n, c( "one-parent-bilingual","both-parents-bilingual","one-parent-one-lanaguage",  "single-parent", "one-language-at-home"))
figure_5 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_purple, my_green), keep = T, size=0.6)
annotate("richtext", x=c(4,11,15), y=8, label=c("40%", "24%", "19%")) +
annotate("richtext", x=17, y=6, label= "3%")+
annotate("richtext", x=17, y=10, label= "2%")+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
figure_5
figure_5 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_purple, my_green), keep = T, size=0.6) + annotate("richtext", x=c(4,11,15), y=8, label=c("40%", "30%", "20%")) +
annotate("richtext", x=17, y=6, label= "7%")+
annotate("richtext", x=17, y=10, label= "3%")+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
figure_5
figure_5 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_purple, my_green), keep = T, size=0.6) + annotate("richtext", x=c(3,10,14), y=6, label=c("40%", "30%", "20%")) +
annotate("richtext", x=8, y=4, label= "7%")+
annotate("richtext", x=17, y=7, label= "3%")+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
figure_5
figure_5 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_purple, my_green), keep = T, size=0.6) + annotate("richtext", x=c(2,4,6), y=4, label=c("40%", "30%", "20%")) +
annotate("richtext", x=10, y=2, label= "7%")+
annotate("richtext", x=10, y=6, label= "3%")+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
figure_5
figure_5 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_purple, my_green), keep = T, size=0.6) + annotate("richtext", x=c(2,6,8), y=4, label=c("40%", "30%", "20%")) +
annotate("richtext", x=10, y=2, label= "7%")+
annotate("richtext", x=10, y=6, label= "3%")+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
figure_5
figure_5 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_purple, my_green), keep = T, size=0.6) + annotate("richtext", x=c(2,6,9), y=4, label=c("40%", "30%", "20%")) +
annotate("richtext", x=10, y=2, label= "7%")+
annotate("richtext", x=10, y=6, label= "3%")+
theme(legend.text= element_text(size=12),legend.title= element_text(size=12))
figure_5
