my_orange<- "#D95F02"
my_blue<- "#1F78B4"
my_green<- "#33a02c"
my_purple<- "#683f6d"
#### CONSTRUCTING AND DESCRIBING ALL RELEVANT DATA SETS ####
#Trilingul exclusions count
total_excluded_triling<- final_data_no_exc %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp<=90) %>%
distinct(unique_id)%>%
tally()
#Monolingual exclusions
total_monoling_excluded<- final_data_no_exc %>%
filter(exp_l1 >95) %>%
filter(exp_l2 <5) %>%
distinct(unique_id) %>%
tally()
#after third language exclusions exclusions
n <- final_data_strat %>%
distinct(unique_id) %>%
tally()
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1)
#n when only taking first visit
n_keep_first_visit<-first_visit_only %>%
distinct(anon_baby_id)%>%
tally()
age_min <- round(min(first_visit_only$age, na.rm = T), 2)
age_max<- round(max(first_visit_only$age, na.rm = T), 2)
age_mean<- round(mean(first_visit_only$age, na.rm = T), 2)
age_sd<- round(sd(first_visit_only$age, na.rm = T), 2)
female<- first_visit_only %>%
filter(gender=="female")%>%
distinct(anon_baby_id)%>% #using anon_baby_id since it uniquely identifies individual babies, instead of identifying by study
tally()
num_visits <- final_data_strat %>%
count(anon_baby_id, name = "n_visits") %>%
count(n_visits, name = "n_families")  %>%
mutate(n_data_points = n_families* n_visits)
#French-English-Heritage bilingual percentages
#### JOINING SES INFO TO CLEAN DATA
## Make sure 5718960_cogmisp24 6517080_segment8 have the right languages on the SES sheet
first_visit_only<- first_visit_only %>%
right_join(SES_info, first_visit_only, by=c("study","unique_id", "anon_baby_id", "l1", "l2"))
FEH <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Exporting the final data set that we used in all analyses and visualizations
#write_xlsx(FEH,"anonymized_data\\fam_Str_cross_sectional.xlsx")
FEH_prof<- FEH %>%
mutate(mother_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_mother,
l1 %in% c("English","Heritage")~ age_l2_acquired_mother)) %>%
mutate(mother_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_mother,
l1%in% c("French","Heritage")~ age_l2_acquired_mother)) %>%
mutate(mother_heritage_aoa = case_when (l1 == "Heritage" ~ age_l1_acquired_mother,
l1%in% c("French","English")~ age_l2_acquired_mother)) %>%
mutate(father_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_father,
l1 %in% c("English","Heritage")~ age_l2_acquired_father)) %>%
mutate(father_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_father,
l1%in% c("French","Heritage")~ age_l2_acquired_father)) %>%
mutate(father_heritage_aoa = case_when (l1 == "Heritage" ~ age_l1_acquired_father,
l1%in% c("French","English")~ age_l2_acquired_father)) %>%
mutate(mother_french_aoa = case_when(mother_french_aoa <= 5 ~ "early_acquisition",
mother_french_aoa >5 ~ "older_than_5",
is.na(mother_french_aoa)~ NA)) %>%
mutate(mother_english_aoa = case_when(mother_english_aoa <= 5 ~ "early_acquisition",
mother_english_aoa >5 ~ "older_than_5",
is.na(mother_english_aoa) ~ NA)) %>%
mutate(mother_heritage_aoa = case_when(mother_heritage_aoa <= 5 ~ "early_acquisition",
mother_heritage_aoa >5 ~ "older_than_5",
is.na(mother_heritage_aoa)~ NA)) %>%
mutate(father_french_aoa = case_when(father_french_aoa <= 5 ~ "early_acquisition",
father_french_aoa >5 ~ "older_than_5",
is.na(father_french_aoa)~ NA)) %>%
mutate(father_english_aoa = case_when(father_english_aoa <= 5 ~ "early_acquisition",
father_english_aoa >5 ~ "older_than_5",
is.na(father_english_aoa)~ NA)) %>%
mutate(father_heritage_aoa = case_when(father_heritage_aoa <= 5 ~ "early_acquisition",
father_heritage_aoa >5 ~ "older_than_5",
is.na(father_english_aoa)~ NA))
## Mothers proficiency distribution
mothers_fre_prof <- FEH_prof%>%
group_by(mother_french_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
mothers_eng_prof <- FEH_prof%>%
group_by(mother_english_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
mothers_her_prof <- FEH_prof%>%
group_by(mother_heritage_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
#Fathers proficiency distribution
fathers_fre_prof <- FEH_prof%>%
group_by(father_french_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
fathers_eng_prof <- FEH_prof%>%
group_by(father_english_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
fathers_her_prof <- FEH_prof%>%
group_by(father_heritage_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
FEH_perc<- FEH %>%
group_by(bilingual_type) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#By bilingual type percentages
fre_eng_perc <- FEH %>%
filter(bilingual_type== "fre-eng")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_her_perc <- FEH %>%
filter(bilingual_type=="fre-her")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_eng_perc <- FEH %>%
filter(bilingual_type=="eng-her") %>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#l1 amount of exposure range
min_exp_range <- final_data_strat %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data_strat %>%
select(exp_l1) %>%
max()
## Calculate percentages of overall maternal education by strategy for supplementary materials
library(RColorBrewer)
FE_maternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
filter(!strategy == "single-parent")%>%
drop_na(strategy)%>%
group_by(strategy, maternal_education) %>%
drop_na(maternal_education)%>%
mutate(maternal_education = case_when(maternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
maternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
maternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
FE_maternal_education$maternal_education <- factor(FE_maternal_education$maternal_education, levels= c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_1<- ggplot(FE_maternal_education, aes(y=perc, x=strategy, fill=maternal_education)) +
geom_col(position = "fill") +
scale_fill_brewer(palette="Dark2")+
labs(title= "French-English sample maternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
HER_maternal_education <- FEH %>%
filter(bilingual_type %in% c("fre-her", "eng-her")) %>%
filter(!strategy == "single-parent")%>%
drop_na(strategy)%>%
group_by(strategy, maternal_education) %>%
drop_na(maternal_education) %>%
mutate(maternal_education = case_when(maternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
maternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
maternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
HER_maternal_education$maternal_education <- factor(HER_maternal_education$maternal_education, levels=c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_2<- ggplot(HER_maternal_education, aes(y=perc, x=strategy, fill=maternal_education)) +
geom_col(position = "fill") +
scale_fill_brewer(palette="Dark2") +
labs(title= "Heritage sample maternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
FE_paternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
filter(!strategy == "single-parent")%>%
drop_na(strategy)%>%
group_by(strategy, paternal_education) %>%
drop_na(paternal_education) %>%
mutate(paternal_education = case_when(paternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
paternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
paternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
FE_paternal_education$paternal_education <- factor(FE_paternal_education$paternal_education, levels=c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_3<- ggplot(FE_paternal_education, aes(y=perc, x=strategy, fill=paternal_education)) +
geom_col(position = "fill")  +
scale_fill_brewer(palette="Dark2") +
labs(title= "French-English sample paternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
HER_paternal_education <- FEH %>%
filter(bilingual_type %in% c("fre-her", "eng-her")) %>%
filter(!strategy == "single-parent")%>%
group_by(strategy, paternal_education) %>%
drop_na(paternal_education) %>%
mutate(paternal_education = case_when(paternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
paternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
paternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
HER_paternal_education$paternal_education <- factor(HER_paternal_education$paternal_education, levels=c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_4<- ggplot(HER_paternal_education, aes(y=perc, x=strategy, fill=paternal_education)) +
geom_col(position = "fill")+
scale_fill_brewer(palette="Dark2") +
labs(title= "Heritage sample paternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
#No graphs for this one as there are too many categories
FE_ethnicity <- FEH %>%
filter(bilingual_type=="fre-eng")%>%
group_by(strategy, child_ethnicity) %>%
drop_na(child_ethnicity) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
######## SES and ethnicity stats not by strategy
##MATERNAL EDUCATION French-English sample
FE_maternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(maternal_education) %>%
drop_na(maternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Paternal EDUCATION French-English sample
FE_paternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(paternal_education) %>%
drop_na(paternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Child ethnicity French-English sample
FE_child_ethicity <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(child_ethnicity) %>%
drop_na(child_ethnicity)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##MATERNAL EDUCATION heritage sample
her_maternal_education <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(maternal_education) %>%
drop_na(maternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Paternal EDUCATION heritage sample
her_paternal_education <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(paternal_education) %>%
drop_na(paternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Child ethnicity her sample
her_child_ethicity <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(child_ethnicity) %>%
drop_na(child_ethnicity) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length <- longitudinal_data_analyses %>%
filter(visit <= 2)
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
FE_for_lms<- FEH %>%
filter(bilingual_type == "fre-eng") %>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
for_lms<- FE_for_lms %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100) %>%
drop_na()
#STRATEGY LINEAR MODELS
lm_strat_eng<- lm(eng_exp ~ strategy, data=for_lms)
lm_strat_fre <- lm(fre_exp ~ strategy, data=for_lms)
#Summary of STRATEGY LINEAR models
summary(lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
summary(lm_strat_fre) #Same as above, one parent bilingual is significant and not for beta.
###### Careviver models
parents_for_lms <- for_lms%>%
filter(type_of_family == "mother-father family") #Keeps only mother-father families as other configurations were to few to analyze separately
#MOTHER MODELS
lm_mom_eng<- lm(eng_exp ~ caregiver_1_english_use, data=for_lms)
lm_mom_fre<- lm(fre_exp ~ caregiver_1_french_use, data=for_lms)
#Summary of MOTHER models
summary(lm_mom_eng) #Similar pattern of results
summary(lm_mom_fre) #same pattern of results
#FATHER MODELS
lm_dad_eng<- lm(eng_exp ~ caregiver_2_english_use, data=for_lms)
lm_dad_fre<- lm(fre_exp ~ caregiver_2_french_use, data=for_lms)
#Summary of FATHER models
summary(lm_dad_eng) #Same pattern of results
summary(lm_dad_fre) #same pattern of results
#MOTHER AND FATHER MODELS
lm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=parents_for_lms)
lm_parents_aditive_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use, data=parents_for_lms)
#Summary of Mother and Father models
summary(lm_parents_aditive_eng) #same pattern of results
summary(lm_parents_aditive_fre) #same pattern of results
performance::compare_performance(lm_parents_aditive_fre, lm_dad_fre, lm_mom_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_dad_eng, lm_mom_eng)
##Comparison of strategy versus parents models
performance::compare_performance(lm_parents_aditive_fre, lm_strat_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_strat_eng)
mom_long<- FE_long_analyses %>% #this results in a dataframe that has one row per kid who had 2 FR-EN visits.
filter(type_of_family == "mother-father family") %>%
filter(!strategy=="single-parent") %>%
filter(visit %in% c(1,2)) %>%
select(anon_baby_id, l1, l2, care1_l1, care1_l2, visit, length_between_visits) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2),
visit = paste0("time_", visit)) %>%
rename("Fre" = caregiver_1_french_use,
"Eng" = caregiver_1_english_use) %>%
select(-care1_l1, -care1_l2, -l1, -l2) %>%
pivot_wider(names_from = visit, values_from = c(Fre, Eng)) %>%
rename_at(vars(starts_with("Fre")), ~ paste0(str_remove(., "Fre_"), "_Fre")) %>%
rename_at(vars(starts_with("Eng")), ~  paste0(str_remove(., "Eng_"), "_Eng")) %>%
drop_na()
## LONGITUDINAL DATA ANALYSES ##
FE_long_analyses<- longitudinal_data_analyses %>%
filter(bilingual_type=="fre-eng")
mom_long<- FE_long_analyses %>% #this results in a dataframe that has one row per kid who had 2 FR-EN visits.
filter(type_of_family == "mother-father family") %>%
filter(!strategy=="single-parent") %>%
filter(visit %in% c(1,2)) %>%
select(anon_baby_id, l1, l2, care1_l1, care1_l2, visit, length_between_visits) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2),
visit = paste0("time_", visit)) %>%
rename("Fre" = caregiver_1_french_use,
"Eng" = caregiver_1_english_use) %>%
select(-care1_l1, -care1_l2, -l1, -l2) %>%
pivot_wider(names_from = visit, values_from = c(Fre, Eng)) %>%
rename_at(vars(starts_with("Fre")), ~ paste0(str_remove(., "Fre_"), "_Fre")) %>%
rename_at(vars(starts_with("Eng")), ~  paste0(str_remove(., "Eng_"), "_Eng")) %>%
drop_na()
mom_long_french<- mom_long %>%
select(anon_baby_id, length_between_visits, time_1_Fre, time_2_Fre)
mom_long_english<- mom_long %>%
select(anon_baby_id, length_between_visits, time_1_Eng, time_2_Eng)
mom_long_fre_s <- mom_long_french %>%
rename("time 1" = "time_1_Fre") %>%
rename("time 2" = "time_2_Fre") %>%
make_long("time 1","time 2")
#Changeing the levels so that the graph is in order
mom_long_fre_s$node <- factor(mom_long_fre_s$node, levels= c("never","sometimes", "regularly"))
mom_long_fre_s$next_node <- factor(mom_long_fre_s$next_node, levels= c("never","sometimes","regularly"))
mom_long_eng_s <- mom_long_english %>%
rename("time 1" = "time_1_Eng") %>%
rename("time 2" = "time_2_Eng") %>%
make_long("time 1","time 2")
mom_long_eng_s$node <- factor(mom_long_eng_s$node, levels= c("never","sometimes", "regularly"))
mom_long_eng_s$next_node <- factor(mom_long_eng_s$next_node, levels= c("never","sometimes","regularly"))
figure_3_a <- ggplot(mom_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw() +
labs(title= "A. Mothers' change of language use", subtitle = "French")+
theme(axis.text.x = element_text(size=30),legend.position = "none", plot.title = element_text(size=35),
plot.subtitle.title = element_text(size=30), axis.title=element_blank())+
annotate("richtext", x=c(1,1,1), y=c(5,-9,-20), label=c(20,11,5), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-9,-20), label=c(16,17,3), size=10) #Adding the N at time 2
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"), name= "language use with child frequency")+
theme_bw()+
labs(title= "B. Mothers' change of language use", subtitle = "English")+
theme(axis.text.x = element_text(size=30), plot.title = element_text(size=35),plot.subtitle.title = element_text(size=30), axis.title = element_blank(), legend.text = element_text(size=30), legend.title = element_text(size=30))+
annotate("richtext", x=c(1,1,1), y=c(6,-10,-20), label=c(24, 8, 4), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-10,-20), label=c(26,7,3), size=10) #Adding the N at time 2
figure_3<- figure_3_a + figure_3_b
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
print(figure_3)
figure_3_a <- ggplot(mom_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw() +
labs(title= "A. Mothers' change of language use", subtitle = "French")+
theme(axis.text.x = element_text(size=30),legend.position = "none", plot.title = element_text(size=35),
plot.subtitle = element_text(size=30), axis.title=element_blank())+
annotate("richtext", x=c(1,1,1), y=c(5,-9,-20), label=c(20,11,5), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-9,-20), label=c(16,17,3), size=10) #Adding the N at time 2
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"), name= "language use with child frequency")+
theme_bw()+
labs(title= "B. Mothers' change of language use", subtitle = "English")+
theme(axis.text.x = element_text(size=30), plot.title = element_text(size=35),plot.subtitle = element_text(size=30), axis.title = element_blank(), legend.text = element_text(size=30), legend.title = element_text(size=30))+
annotate("richtext", x=c(1,1,1), y=c(6,-10,-20), label=c(24, 8, 4), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-10,-20), label=c(26,7,3), size=10) #Adding the N at time 2
figure_3<- figure_3_a + figure_3_b
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
print(figure_3)
print(figure_3_a)
print(figure_3_b)
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw() +
labs(title= "A. Mothers' change of language use", subtitle = "English")+
theme(axis.text.x = element_text(size=30),legend.position = "none", plot.title = element_text(size=35),
plot.subtitle = element_text(size=30), axis.title=element_blank())+
annotate("richtext", x=c(1,1,1), y=c(6,-10,-20), label=c(24, 8, 4), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-10,-20), label=c(26,7,3), size=10) #Adding the N at time 2
figure_3<- figure_3_a + figure_3_b
print(figure_3)
