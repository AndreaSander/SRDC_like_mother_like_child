m5_effects <- ggpredict(m5, terms = c("age", "strategy"))
custom_palette = c("#BD081C","#0099FF", "#00B489", "#FF8F00")
plot(m5_effects, add.data = F, colors= custom_palette, alpha=.2)
# MODEL FOR MINORITY LANGUAGE EXPOSURE + VISUALIZATION
m6 <- glmmTMB(min_exp ~ strategy * age, data=for_beta_min, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m6) # Significant effects for one-language-at-home and its interaction with age and the interaction between one-parent-one-lang and age.
# We run model diagnostics with DHARMa
sim_m6 <- simulateResiduals(m6)
plot(sim_m6) # MODEL OK!
testDispersion(sim_m6) # MODEL OK!
# We can plot the fixed effects for m6, the best model so far (very interesting!)
m6_effects <- ggpredict(m6, terms = c("age", "strategy"))
custom_palette = c("#BD081C","#0099FF", "#00B489", "#FF8F00")
plot(m6_effects, add.data = F, colors= custom_palette, alpha=.2)
# Create the dataframes to run the models for each language. Monolinguals are excluded, as are the rows
# where exposure for a given language equals 100. Since exposure is on a 0-100 scale and the beta distributions
# works with values ranging from 0-1, exposure is divided by 100.
for_beta <- for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, min_exp, strategy, lang_status) %>%
filter(lang_status != "monolingual") %>%
filter(gender != "NA")
# Dataframe for english exposure
for_beta_eng <- for_beta %>%
select(age, eng_exp, strategy, lang_status, anon_baby_id) %>%
filter(eng_exp != "NA") %>%
filter(eng_exp !=100) %>%
mutate(eng_exp = eng_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for french exposure
for_beta_fre <- for_beta %>%
select(age, fre_exp, strategy, lang_status, anon_baby_id) %>%
filter(fre_exp != "NA") %>%
filter(fre_exp != 100) %>%
mutate(fre_exp = fre_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for minority language exposure
for_beta_min <- for_beta %>%
select(age, min_exp, strategy, lang_status, anon_baby_id) %>%
filter(min_exp != "NA") %>%
filter(min_exp !=100) %>%
mutate(min_exp = min_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# When modelling direct proportions, using a beta distribution is a good idea.
# We can fit a beta model with eng_exp and age as a predictor.
# These models are better than the linear models, but still present issues (i.e., heteroscedasticity).
m2a <- glmmTMB(eng_exp ~ strategy, data=for_beta_eng, family= beta_family(link="logit"))
summary(m2a)
sim_m2a <- simulateResiduals(m2a)
plot(sim_m2a)
m2b <- glmmTMB(eng_exp ~ strategy * age, data=for_beta_eng, family= beta_family(link="logit"))
summary(m2b) # NOTE: No significant effects
sim_m2b <- simulateResiduals(m2b)
plot(sim_m2b)
# To solve the heteroscedasticity problem, we can use the dispformula argument so that that the dispersion parameter phi is allowed to vary by the levels of "strategy"
m3a <- glmmTMB(eng_exp ~ strategy, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~strategy)
summary(m3a) # Significant effect for one-parent-bilingual; AIC = -83.7
sim_m3a <- simulateResiduals(m3a)
plot(sim_m3a) # MODEL OK!
m3b <- glmmTMB(eng_exp ~ strategy * age, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~strategy)
summary(m3b) # No significant effects
sim_m2b <- simulateResiduals(m2b)
plot(sim_m2b) # NOTE: Quantile deviations detected
# We can enhance the model by allowing the dispersion parameter in the beta distribution to differ across the different levels of "strategy" and the different values of "age"
m4a <- glmmTMB(eng_exp ~ strategy, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m4a)
sim_m4a <- simulateResiduals(m2b)
plot(sim_m4a) # NOTE: Quantile deviations detected
m4b <- glmmTMB(eng_exp ~ strategy * age, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m4b) # Significant effects for one-language-at-home and its interaction with age
# We run model diagnostics with DHARMa
sim_m4b <- simulateResiduals(m4b)
plot(sim_m4b) # MODEL OK!
testDispersion(sim_m4b) # MODEL OK!
# We can plot the fixed effects for m4b, the best model so far (very interesting!)
m4b_effects <- ggpredict(m4b, terms = c("age", "strategy"))
custom_palette = c("#BD081C","#0099FF", "#00B489", "#FF8F00")
plot(m4b_effects, add.data = F, colors= custom_palette, alpha=.2)
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter. This code computes pairwise comparisons of the estimated marginal means of eng_exp across the different levels of "strategy", while holding "age" constant at its mean value.
emtrends(m4b, pairwise ~ strategy, var="age") # trend for one-language-at-home significantly different from that of one parent-bilingual
# MODEL FOR FRENCH EXPOSURE + VISUALIZATION
m5 <- glmmTMB(fre_exp ~ strategy * age, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m5) # No significant results
# We run model diagnostics with DHARMa
sim_m5 <- simulateResiduals(m5)
plot(sim_m5) # MODEL OK!
testDispersion(sim_m5) # MODEL OK!
# We can plot the fixed effects for m5, the best model so far
m5_effects <- ggpredict(m5, terms = c("age", "strategy"))
custom_palette = c("#BD081C","#0099FF", "#00B489", "#FF8F00")
plot(m5_effects, add.data = F, colors= custom_palette, alpha=.2)
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m5, pairwise ~ strategy, var="age") # no significant results
# MODEL FOR MINORITY LANGUAGE EXPOSURE + VISUALIZATION
m6 <- glmmTMB(min_exp ~ strategy * age, data=for_beta_min, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m6) # Significant effects for one-language-at-home and its interaction with age and the interaction between one-parent-one-lang and age.
# We run model diagnostics with DHARMa
sim_m6 <- simulateResiduals(m6)
plot(sim_m6) # MODEL OK!
testDispersion(sim_m6) # MODEL OK!
# We can plot the fixed effects for m6, the best model so far (very interesting!)
m6_effects <- ggpredict(m6, terms = c("age", "strategy"))
custom_palette = c("#BD081C","#0099FF", "#00B489", "#FF8F00")
plot(m6_effects, add.data = F, colors= custom_palette, alpha=.2)
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m6, pairwise ~ strategy, var="age") # # trend for one-language-at-home significantly different from that of one parent-bilingual
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(dplyr)
library(lme4)
library(lmerTest)
library(rstatix)
library(broom)
library(janitor)
library(glmmTMB)
library(DHARMa)
library(betareg)
library(emmeans)
library(ggeffects)
library(mvtnorm)
library(boot)
library(bbmle)
load(here("anonymized_data/final_merged_data.Rda"))
n<- final_data%>%
distinct(unique_id) #n of 552
gender<- final_data %>%
distinct(unique_id, gender)%>%
group_by(gender)%>%
tally()
#16 na for gender I think from LEQs withouth associated demographics
range(final_data$age, na.rm = T) #4.33 - 30.9 months so 4 - 31 if we round.
##NOTE: Originally I had also added exposure on language 3 and 4. Language 3 and 4 always amount to less than 10% because we excluded trilinguals. However,
#in parental interviews caregivers frequently give a third language and the final calculation is so low it amounts to 0
#this was 0 inflating our english and french exposures, and because we are interested in how bilingual strategies relate to bilingual exposure, I decided to get rid of l3 and 4 exposure when making the frenc, english, and heritage language esposure variables.
vars<-c("exp_l3", "exp_l4")
final_data_language_coded<-
final_data %>%
mutate_at(vars, as.numeric) %>%
mutate(l3 = replace(l3, l3=="NA", "no lang")) %>%
mutate(l4 = replace(l4, l4=="NA", "no lang")) %>%
mutate(fre_exp = case_when(l1=="French"~ exp_l1,
l2=="French"~ exp_l2,
#l3=="French" & exp_l3 >=1 ~ exp_l3,
#l4=="French"  & exp_l4 >=1 ~ exp_l4
))%>%
mutate(eng_exp = case_when(l1=="English"~ exp_l1,
l2=="English"~ exp_l2,
#l3=="English"~ exp_l3,
#l4=="English"~ exp_l4
)) %>%
mutate(min_exp = case_when (!(l1 %in% c("French", "English"))& l2 %in% c("French", "English") ~ exp_l1,
!(l2 %in% c("French", "English")) & l1 %in% c("French", "English") ~ exp_l2
))
final_data_strat <- final_data_language_coded%>%
mutate(strategy=case_when(
#one-parent-one-lang-strict: Each parent speaks only one language and both parents don't speak the same language
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#(The same language cannot be spoken regularly by both parents or that would be considered a one-parent-bilingual strategy)
#**NOTE: we ended up having a single category for OPOL instead of divinding it into strict and flex.
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang",
#one-parent-bilingual: One parent speaks 2 languages, the other parent only speaks one language
#Starting point
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
#Some bilingual parents put both of their languages as sometimes rather than both as regularly
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#One parent bilingual (R&R or S&S) and another parent that speaks one of the language but not the other (R|S & N|NA)
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#Both parents speak the same language regularly, and one of them speak another language sometimes
#(not one-parent-one-lang-flex because both parents use the same language regularly in opposition to each parent having a different language that they use regularly)
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "one-parent-bilingual",
#both-parents-bilingual: Both parents speak both languages either regularly or sometimes
care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "both-parents-bilingual",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#The same language cannot be spoken regularly by both parents or it comes to be filled under the one-parent-bilingual strategy.
#**NOTE: we ended up having a single category for OPOL instead of divinding it into strict and flex.
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang",
#one-language-at-home: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-language-at-home",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "one-language-at-home",
#single-parent: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "single-parent",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "single-parent"
))
#Calculate the proportion for the different strategies
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
# I decided to exclude "true" monolinguals characterized here to the best of our abilities as children whose families use one language at home strategy, and the childcare language is the same as the one language at home strategy = they are being exposed to a single language = most likely not a bilingual strategy.
final_data_strat <-
final_data_strat %>%
mutate(bilinugal_strategy= case_when(strategy=="one-language-at-home" & childcare_l1 == l1 & childcare_l2 %in% c(NA, "NA")  ~ "no",
strategy=="one-language-at-home" & childcare_l2 == l1 & childcare_l1 %in% c(NA, "NA") ~"no",
strategy=="one-language-at-home" & childcare_l1 %in% c(NA, "NA") & childcare_l2 %in% c(NA, "NA") ~"no",
TRUE~"yes")) %>%
filter(bilinugal_strategy=="yes")
save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
#Sanity check, all the monolinguals we have are using bilingual strategies
eng_monoling <- final_data_strat %>%
filter(eng_exp == 100)
fre_moling <- final_data_strat %>%
filter(fre_exp==100)
final_data_strat <- final_data_strat %>%
mutate(lang_status = case_when(
l2=="NA" ~ "monolingual",
exp_l2== 0 ~ "monolingual",
l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "both_maj",
l1 %in% c("French", "English") & !(l2 %in% c("French", "English")) ~ "one_maj",
!(l1 %in% c("French", "English")) & l2 %in% c("French", "English") ~ "one_maj",
TRUE ~ "both_min"
))
#do check that the monolinguals are actually monolinguals and not both min
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter (visit==1)
for_blc_anova <- first_visit_only %>%
filter(!strategy == "single-parent")
View(for_blc_anova)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(dplyr)
library(lme4)
library(lmerTest)
library(rstatix)
library(broom)
library(janitor)
library(glmmTMB)
library(DHARMa)
library(betareg)
library(emmeans)
library(ggeffects)
library(mvtnorm)
library(boot)
library(bbmle)
load(here("anonymized_data/final_merged_data.Rda"))
##NOTE: Originally I had also added exposure on language 3 and 4. Language 3 and 4 always amount to less than 10% because we excluded trilinguals. However,
#in parental interviews caregivers frequently give a third language and the final calculation is so low it amounts to 0
#this was 0 inflating our english and french exposures, and because we are interested in how bilingual strategies relate to bilingual exposure, I decided to get rid of l3 and 4 exposure when making the frenc, english, and heritage language esposure variables.
vars<-c("exp_l3", "exp_l4")
final_data_language_coded<-
final_data %>%
mutate_at(vars, as.numeric) %>%
mutate(l3 = replace(l3, l3=="NA", "no lang")) %>%
mutate(l4 = replace(l4, l4=="NA", "no lang")) %>%
mutate(fre_exp = case_when(l1=="French"~ exp_l1,
l2=="French"~ exp_l2,
#l3=="French" & exp_l3 >=1 ~ exp_l3,
#l4=="French"  & exp_l4 >=1 ~ exp_l4
))%>%
mutate(eng_exp = case_when(l1=="English"~ exp_l1,
l2=="English"~ exp_l2,
#l3=="English"~ exp_l3,
#l4=="English"~ exp_l4
)) %>%
mutate(min_exp = case_when (!(l1 %in% c("French", "English"))& l2 %in% c("French", "English") ~ exp_l1,
!(l2 %in% c("French", "English")) & l1 %in% c("French", "English") ~ exp_l2
))
final_data_strat <- final_data_language_coded%>%
mutate(strategy=case_when(
#one-parent-one-lang-strict: Each parent speaks only one language and both parents don't speak the same language
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#(The same language cannot be spoken regularly by both parents or that would be considered a one-parent-bilingual strategy)
#**NOTE: we ended up having a single category for OPOL instead of divinding it into strict and flex.
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang",
#one-parent-bilingual: One parent speaks 2 languages, the other parent only speaks one language
#Starting point
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
#Some bilingual parents put both of their languages as sometimes rather than both as regularly
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#One parent bilingual (R&R or S&S) and another parent that speaks one of the language but not the other (R|S & N|NA)
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#Both parents speak the same language regularly, and one of them speak another language sometimes
#(not one-parent-one-lang-flex because both parents use the same language regularly in opposition to each parent having a different language that they use regularly)
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "one-parent-bilingual",
#both-parents-bilingual: Both parents speak both languages either regularly or sometimes
care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "both-parents-bilingual",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#The same language cannot be spoken regularly by both parents or it comes to be filled under the one-parent-bilingual strategy.
#**NOTE: we ended up having a single category for OPOL instead of divinding it into strict and flex.
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang",
#one-language-at-home: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-language-at-home",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "one-language-at-home",
#single-parent: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "single-parent",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "single-parent"
))
#Calculate the proportion for the different strategies
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
# I decided to exclude "true" monolinguals characterized here to the best of our abilities as children whose families use one language at home strategy, and the childcare language is the same as the one language at home strategy = they are being exposed to a single language = most likely not a bilingual strategy.
final_data_strat <-
final_data_strat %>%
mutate(bilinugal_strategy= case_when(strategy=="one-language-at-home" & childcare_l1 == l1 & childcare_l2 %in% c(NA, "NA")  ~ "no",
strategy=="one-language-at-home" & childcare_l2 == l1 & childcare_l1 %in% c(NA, "NA") ~"no",
strategy=="one-language-at-home" & childcare_l1 %in% c(NA, "NA") & childcare_l2 %in% c(NA, "NA") ~"no",
TRUE~"yes")) %>%
filter(bilinugal_strategy=="yes")
#In the end, after discussion we decided to filter all the strictly monolinguals because we are truly interested in bilinguals mainly.
final_data_strat <-
final_data_strat %>%
filter(exp_l1 <95) %>%
filter(exp_l1 >5)
save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
range(final_data_strat$exp_l1)
range(final_data_strat$exp_l2)
load(here("anonymized_data/final_merged_data.Rda"))
##NOTE: Originally I had also added exposure on language 3 and 4. Language 3 and 4 always amount to less than 10% because we excluded trilinguals. However,
#in parental interviews caregivers frequently give a third language and the final calculation is so low it amounts to 0
#this was 0 inflating our english and french exposures, and because we are interested in how bilingual strategies relate to bilingual exposure, I decided to get rid of l3 and 4 exposure when making the frenc, english, and heritage language esposure variables.
vars<-c("exp_l3", "exp_l4")
final_data_language_coded<-
final_data %>%
mutate_at(vars, as.numeric) %>%
mutate(l3 = replace(l3, l3=="NA", "no lang")) %>%
mutate(l4 = replace(l4, l4=="NA", "no lang")) %>%
mutate(fre_exp = case_when(l1=="French"~ exp_l1,
l2=="French"~ exp_l2,
#l3=="French" & exp_l3 >=1 ~ exp_l3,
#l4=="French"  & exp_l4 >=1 ~ exp_l4
))%>%
mutate(eng_exp = case_when(l1=="English"~ exp_l1,
l2=="English"~ exp_l2,
#l3=="English"~ exp_l3,
#l4=="English"~ exp_l4
)) %>%
mutate(min_exp = case_when (!(l1 %in% c("French", "English"))& l2 %in% c("French", "English") ~ exp_l1,
!(l2 %in% c("French", "English")) & l1 %in% c("French", "English") ~ exp_l2
))
final_data_strat <- final_data_language_coded%>%
mutate(strategy=case_when(
#one-parent-one-lang-strict: Each parent speaks only one language and both parents don't speak the same language
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#(The same language cannot be spoken regularly by both parents or that would be considered a one-parent-bilingual strategy)
#**NOTE: we ended up having a single category for OPOL instead of divinding it into strict and flex.
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang",
#one-parent-bilingual: One parent speaks 2 languages, the other parent only speaks one language
#Starting point
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
#Some bilingual parents put both of their languages as sometimes rather than both as regularly
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#One parent bilingual (R&R or S&S) and another parent that speaks one of the language but not the other (R|S & N|NA)
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#Both parents speak the same language regularly, and one of them speak another language sometimes
#(not one-parent-one-lang-flex because both parents use the same language regularly in opposition to each parent having a different language that they use regularly)
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "one-parent-bilingual",
#both-parents-bilingual: Both parents speak both languages either regularly or sometimes
care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "both-parents-bilingual",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#The same language cannot be spoken regularly by both parents or it comes to be filled under the one-parent-bilingual strategy.
#**NOTE: we ended up having a single category for OPOL instead of divinding it into strict and flex.
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang",
#one-language-at-home: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-language-at-home",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "one-language-at-home",
#single-parent: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "single-parent",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "single-parent"
))
#Calculate the proportion for the different strategies
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
# I decided to exclude "true" monolinguals characterized here to the best of our abilities as children whose families use one language at home strategy, and the childcare language is the same as the one language at home strategy = they are being exposed to a single language = most likely not a bilingual strategy.
final_data_strat <-
final_data_strat %>%
mutate(bilinugal_strategy= case_when(strategy=="one-language-at-home" & childcare_l1 == l1 & childcare_l2 %in% c(NA, "NA")  ~ "no",
strategy=="one-language-at-home" & childcare_l2 == l1 & childcare_l1 %in% c(NA, "NA") ~"no",
strategy=="one-language-at-home" & childcare_l1 %in% c(NA, "NA") & childcare_l2 %in% c(NA, "NA") ~"no",
TRUE~"yes")) %>%
filter(bilinugal_strategy=="yes")
#In the end, after discussion we decided to filter all the strictly monolinguals because we are truly interested in bilinguals mainly.
final_data_strat <-
final_data_strat %>%
filter(exp_l1 <95) %>%
filter(exp_l2 >5)
range(final_data_strat$exp_l1) #47-94
range(final_data_strat$exp_l2)
save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
final_data_strat <- final_data_strat %>%
mutate(lang_status = case_when(
l2=="NA" ~ "monolingual",
exp_l2== 0 ~ "monolingual",
l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "both_maj",
l1 %in% c("French", "English") & !(l2 %in% c("French", "English")) ~ "one_maj",
!(l1 %in% c("French", "English")) & l2 %in% c("French", "English") ~ "one_maj",
TRUE ~ "both_min"
))
#do check that the monolinguals are actually monolinguals and not both min
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter (visit==1)
for_blc_anova <- first_visit_only %>%
filter(!strategy == "single-parent")
blc_model_french <- aov(l2_exp ~ strategy, data = for_blc_anova)
blc_model_french <- aov(exp_l2 ~ strategy, data = for_blc_anova)
tidy(anova_model_french)
tidy(blc_model_french)
tukey_hsd(blc_model_french)
unique(for_blc_anova$l2)
blc_anova_fre <- for_blc_anova %>%
filter(l2=="French")
blc_model_french <- aov(exp_l2 ~ strategy, data = blc_anova_fre)
tidy(blc_model_french)
tukey_hsd(blc_model_french)
blc_anova_her <- for_blc_anova %>%
filter(l2== !C("French", "English"))
blc_anova_her <- for_blc_anova %>%
filter(l2== !c("French", "English"))
blc_anova_her <- for_blc_anova %>%
filter !(l2== c("French", "English"))
blc_anova_her <- for_blc_anova %>%
filter (l2!= c("French", "English"))
unique(blc_anova_her$l2)
blc_anova_her <- for_blc_anova %>%
filter (l2== !c("French", "English"))
blc_anova_her <- for_blc_anova %>%
filter (!l2 %in% c("French", "English"))
unique(blc_anova_her$l2)
