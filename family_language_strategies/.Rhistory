LEQ_data %>%
mutate(study = tolower(study)) %>%
mutate(unique_id = paste(anon_baby_id, study, sep="_"))
final_data <-
right_join(demographic_data, LEQ_data ,  by= "unique_id")
final_data$do_birth<-as.Date(as.character(final_data$do_birth))
final_data$leq_date<-as.Date(as.character(final_data$leq_date))
final_data <- final_data %>%
mutate(age= interval(start= do_birth, end=leq_date)/
duration(n=1, unit="months"))
final_data <- final_data %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp>=90) #59 exclusions for more than 10% exposure to a third language
save(final_data, file=here("anonymized_data/final_merged_data.Rda"))
range(final_data$age, na.rm = T)
#age_errors<- final_data %>%
filter(age=<0)
#age_errors<- final_data %>%
filter(age<=0)
View(final_data)
load(here("anonymized_data/final_merged_data.Rda"))
age_errors <- final_data %>%
filter(age=<1)
age_errors <- final_data %>%
filter(age<=1)
View(age_errors)
View(age_errors)
gender<- final_data %>%
distinct(unique_id, gender)%>%
group_by(gender)%>%
tally()
View(gender)
final_data <- final_data %>%
mutate(strategy=case_when(
#OPOL_S: Each parent speaks only one language and both parents don't speak the same language
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "OPOL_S",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OPOL_S",
#OPOL_F: Each parent speaks mainly one language, and one of them sometimes speaks another language
#(The same language cannot be spoken regularly by both parents or that would be considered a Biling1 strategy)
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "OPOL_F",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "OPOL_F",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OPOL_F",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "OPOL_F",
#Biling1: One parent speaks 2 languages, the other parent only speaks one language
#Starting point
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "Biling1",
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "Biling1",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
#Some bilingual parents put both of their languages as sometimes rather than both as regularly
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "Biling1",
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "Biling1",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
#One parent bilingual (R&R or S&S) and another parent that speaks one of the language but not the other (R|S & N|NA)
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "Biling1",
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "Biling1",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "Biling1",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "Biling1",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
#Both parents speak the same language regularly, and one of them speak another language sometimes
#(not OPOL_F because both parents use the same language regularly in opposition to each parent having a different language that they use regularly)
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "Biling1",
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "Biling1",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "Biling1",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "Biling1",
#Biling2: Both parents speak both languages either regularly or sometimes
care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "Biling2",
#OPOL_F: Each parent speaks mainly one language, and one of them sometimes speaks another language
#The same language cannot be spoken regularly by both parents or it comes to be filled under the Biling1 strategy
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "OPOL_F",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "OPOL_F",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OPOL_F",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "OPOL_F",
#OLH: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OLH",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "OLH",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "OLH",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "OLH",
#Single: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "Single",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "Single"
))
#Calculate the proportion for the different strategies
prop_strategy<-all_data%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
#Calculate the proportion for the different strategies
prop_strategy<-final_data%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
View(prop_strategy)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
load(here("anonymized_data/longitudinal_data.Rda"))
View(longitudinal_data)
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
?make_long
test<- longitudinal_data %>%
group_by(age, unique_id) %>%
mutate(visit = case_when(age<age ~ 1,
TRUE~"TEST"))
View(longitudinal_data)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
View(longitudinal_data)
for_sankey <- longitudinal_data %>%
make_long(visit, strategy)
View(for_sankey)
View(for_sankey)
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node))) +
geom_sankey()
View(longitudinal_data)
?pivot_wider
unique(longitudinal_data$visit)
wider_longitudinal <- pivot_wider(longitudinal_data, id_cols = c("visit_1", "visit_2", "visit_3", "visit_4"),
names_from = visit, values_from = strategy )
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy )
View(wider_longitudinal)
?rename
?rename_with
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy ) %>%
rename_with(c("1","2","3","4"), c("visit_1", "visit_2", "visit_3", "visit_4"))
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy ) %>%
rename(c("1","2","3","4"), c("visit_1", "visit_2", "visit_3", "visit_4"))
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = 1, )
View(longitudinal_data)
View(wider_longitudinal)
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", )
View(wider_longitudinal)
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2, visit_3, visit_4)
View(for_sankey)
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node))) +
geom_sankey()
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2, visit_3, visit_4, strategy)
View(wider_longitudinal)
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2, visit_3, visit_4, anon_baby_id)
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node))) +
geom_sankey()
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2, visit_3, visit_4)
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node, na.rm=T))) +
geom_sankey()
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)na.rm=T)) +
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), na.rm=T)) +
geom_sankey()
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
View(longitudinal_data)
View(wider_longitudinal)
for_sankey <- longitudinal_data %>%
make_long(visit, srtategy)
View(longitudinal_data)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
for_sankey <- longitudinal_data %>%
make_long(visit, srtategy)
for_sankey <- longitudinal_data %>%
make_long(visit, srategy)
for_sankey <- longitudinal_data %>%
make_long(visit, strategy)
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
for_sankey <- longitudinal_data %>%
make_long(strategy, visit)
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(strategy_2 = strategy) #to allow to build sankey later
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- longitudinal_data %>%
make_long(visit_1, visit_2, visit_3, visit_4, strategy_2)
View(wider_longitudinal)
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2, visit_3, visit_4, strategy_2)
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
for_sankey <- wider_longitudinal %>%
make_long(strategy_2, visit_1, visit_2, visit_3, visit_4)
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
View(longitudinal_data)
View(wider_longitudinal)
load(here("anonymized_data/longitudinal_data.Rda"))
View(longitudinal_data)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(strategy_2 = strategy)
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey_b <- wider_longitudinal %>%
make_long(strategy_2, visit_1, strategy_2, visit_2)
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
ggplot(for_sankey_b, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
for_sankey_b <- wider_longitudinal %>%
make_long(visit_1, strategy_2, visit_2)
ggplot(for_sankey_b, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(strategy_2 = strategy)
wider_longitudinal_2 <- pivot_wider(longitudinal_data,
names_from = strategy, values_from = visit )
View(wider_longitudinal_2)
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
View(wider_longitudinal_2)
View(wider_longitudinal)
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(strategy_2 = strategy)
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- longitudinal_data %>%
make_long(strategy, visit)
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
##trying sankey options out
#Okay so this is just showing you the proportions of strategy at each time point, you want to see how they evolved
for_sankey_b <- wider_longitudinal %>%
make_long(visit_1, strategy_2, visit_2)
ggplot(for_sankey_b, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(dplyr)
load(here("anonymized_data/final_merged_data.Rda"))
final_data_strat <- final_data %>%
mutate(strategy=case_when(
#OPOL_S: Each parent speaks only one language and both parents don't speak the same language
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "OPOL_S",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OPOL_S",
#OPOL_F: Each parent speaks mainly one language, and one of them sometimes speaks another language
#(The same language cannot be spoken regularly by both parents or that would be considered a Biling1 strategy)
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "OPOL_F",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "OPOL_F",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OPOL_F",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "OPOL_F",
#Biling1: One parent speaks 2 languages, the other parent only speaks one language
#Starting point
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "Biling1",
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "Biling1",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
#Some bilingual parents put both of their languages as sometimes rather than both as regularly
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "Biling1",
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "Biling1",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
#One parent bilingual (R&R or S&S) and another parent that speaks one of the language but not the other (R|S & N|NA)
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "Biling1",
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "Biling1",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "Biling1",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "Biling1",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
#Both parents speak the same language regularly, and one of them speak another language sometimes
#(not OPOL_F because both parents use the same language regularly in opposition to each parent having a different language that they use regularly)
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "Biling1",
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "Biling1",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "Biling1",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "Biling1",
#Biling2: Both parents speak both languages either regularly or sometimes
care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "Biling2",
#OPOL_F: Each parent speaks mainly one language, and one of them sometimes speaks another language
#The same language cannot be spoken regularly by both parents or it comes to be filled under the Biling1 strategy
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "OPOL_F",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "OPOL_F",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OPOL_F",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "OPOL_F",
#OLH: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OLH",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "OLH",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "OLH",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "OLH",
#Single: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "Single",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "Single"
))
#Calculate the proportion for the different strategies
prop_strategy<-final_data%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
#Calculate the proportion for the different strategies
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
final_data_strat<- final_data_strat %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
View(final_data_strat)
for_sankey_2 <- final_data_strat %>%
make_long(visit, l1, strategy)
ggplot(for_sankey_2, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
View(final_data_strat)
for_sankey_2 <- final_data_strat %>%
make_long(visit, strategy) #ideas
ggplot(for_sankey_2, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey()
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() #%>%
wider_longitudinal <- pivot_wider(longitudinal_data,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
View(for_sankey)
ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node)), na.rm=T) +
geom_sankey(na.rm=T)
?geom_sankey
View(wider_longitudinal)
prop_strategy_visit <-longitudinal_data %>%
group_by(strategy, visit) %>%
tally() %>%
mutate(prop = n/sum(n))
View(prop_strategy_visit)
prop_strategy_visit <-wider_longitudinal%>%
group_by(visit_1, visit_2, visit_3, visit_4) %>%
tally() %>%
mutate(prop = n/sum(n))
View(prop_strategy_visit)
prop_strategy_visit <-wider_longitudinal%>%
group_by(visit_1, visit_2, visit_3, visit_4) %>%
tally()
View(prop_strategy_visit)
