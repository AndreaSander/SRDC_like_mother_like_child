tally() %>%
mutate(prop = n/sum(n))
save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() #%>%
# mutate(strategy_2 = strategy)
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy)
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2, visit_3, visit_4)
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())
print(p1)
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())
print(p1)
library(here)
library(tidyverse)
library(dplyr)
load(here("anonymized_data/final_merged_data.Rda"))
final_data_strat <- final_data %>%
mutate(strategy=case_when(
#one-parent-one-lang-strict: Each parent speaks only one language and both parents don't speak the same language
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-parent-one-lang-strict",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-strict",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#(The same language cannot be spoken regularly by both parents or that would be considered a one-parent-bilingual strategy)
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-flex",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang-flex",
#one-parent-bilingual: One parent speaks 2 languages, the other parent only speaks one language
#Starting point
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
#Some bilingual parents put both of their languages as sometimes rather than both as regularly
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#One parent bilingual (R&R or S&S) and another parent that speaks one of the language but not the other (R|S & N|NA)
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#Both parents speak the same language regularly, and one of them speak another language sometimes
#(not one-parent-one-lang-flex because both parents use the same language regularly in opposition to each parent having a different language that they use regularly)
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "one-parent-bilingual",
#both-parents-bilingual: Both parents speak both languages either regularly or sometimes
care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "both-parents-bilingual",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#The same language cannot be spoken regularly by both parents or it comes to be filled under the one-parent-bilingual strategy
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-flex",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang-flex",
#one-language-at-home: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-language-at-home",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "one-language-at-home",
#single-parent: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "single-parent",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "single-parent"
))
#Calculate the proportion for the different strategies
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
#keeps only data where the baby participated more than once
longitudinal_data<- final_data %>%
add_count(anon_baby_id) %>%
filter(nn>1)
save(longitudinal_data, file=here("anonymized_data/longitudinal_data.Rda"))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(lubridate)
load(here("anonymized_data/LEQ_data.Rda"))
load(here("anonymized_data/demographic_data.Rda"))
#rename
LEQ_data <- final_fam_str
demographic_data <- demog_anonym
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
View(longitudinal_data)
library(here)
library(tidyverse)
library(dplyr)
load(here("anonymized_data/final_merged_data.Rda"))
n<- final_data%>%
distinct(unique_id) #n of 552
gender<- final_data %>%
distinct(unique_id, gender)%>%
group_by(gender)%>%
tally()
#16 na for gender I think from LEQs withouth associated demographics
range(final_data$age, na.rm = T) #4.33 - 30.9 months so 4 - 31 if we round.
final_data_strat <- final_data %>%
mutate(strategy=case_when(
#one-parent-one-lang-strict: Each parent speaks only one language and both parents don't speak the same language
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-parent-one-lang-strict",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-strict",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#(The same language cannot be spoken regularly by both parents or that would be considered a one-parent-bilingual strategy)
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-flex",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang-flex",
#one-parent-bilingual: One parent speaks 2 languages, the other parent only speaks one language
#Starting point
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
#Some bilingual parents put both of their languages as sometimes rather than both as regularly
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#One parent bilingual (R&R or S&S) and another parent that speaks one of the language but not the other (R|S & N|NA)
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#Both parents speak the same language regularly, and one of them speak another language sometimes
#(not one-parent-one-lang-flex because both parents use the same language regularly in opposition to each parent having a different language that they use regularly)
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "one-parent-bilingual",
#both-parents-bilingual: Both parents speak both languages either regularly or sometimes
care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "both-parents-bilingual",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#The same language cannot be spoken regularly by both parents or it comes to be filled under the one-parent-bilingual strategy
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-flex",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang-flex",
#one-language-at-home: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-language-at-home",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "one-language-at-home",
#single-parent: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "single-parent",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "single-parent"
))
#Calculate the proportion for the different strategies
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
#keeps only data where the baby participated more than once
longitudinal_data<- final_data_strat %>%
add_count(anon_baby_id) %>%
filter(nn>1)
save(longitudinal_data, file=here("anonymized_data/longitudinal_data.Rda"))
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy)
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" ) %>%
filter(strategy !="single-parent")
View(wider_longitudinal)
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2) %>%
filter(str_detect("single-parent"))
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2) %>%
filter(str_detect(c(visit_1, visit_2), "single-parent", negate = T))
View(wider_longitudinal)
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2) %>%
filter(str_detect(wider_longitudinal, "single-parent", negate = T))
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2) %>%
filter(str_detect(visit_1, "single-parent", negate = T))
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
View(for_sankey)
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy) %>%
filter(str_detect(strategy, "single-parent", negate=T))
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())
print(p1)
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_fill_viridis_d(option = "inferno")
print(p2)
print(p1)
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_fill_viridis_d(option = "turbo")
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_fill_viridis_d(option = "turbo")
print(p1)
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_fill_viridis_d(option = "rocket")
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_fill_viridis_d(option = "rocket")
print(p1)
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_fill_viridis_d(option = "mako")
print(p1)
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_colour_brewer(palette = "Set1")
print(p1)
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_colour_brewer(palette = "Set1")
print(p1)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy) %>%
filter(str_detect(strategy, "single-parent", negate=T))
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_colour_brewer(palette = "Set1")
print(p1)
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_colour_brewer(palette = "BrBG")
print(p1)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy) %>%
filter(str_detect(strategy, "single-parent", negate=T))
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_colour_brewer(palette = "BrBG")
print(p1)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy) %>%
filter(str_detect(strategy, "single-parent", negate=T))
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_colour_brewer(palette = "PuOr")
print(p1)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy) %>%
filter(str_detect(strategy, "single-parent", negate=T))
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_colour_brewer(palette = "Accent")
print(p1)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy) %>%
filter(str_detect(strategy, "single-parent", negate=T))
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
scale_colour_brewer(palette = "Dark2")
print(p1)
p1 + scale_colour_brewer(palette = "Dark2")
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy) %>%
filter(str_detect(strategy, "single-parent", negate=T))
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey() +
scale_colour_brewer(palette = "Dark2")
p1<- p1 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())
print(p1)
