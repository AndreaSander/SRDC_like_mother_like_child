filter(visit %in% c(1,2)) %>%
group_by(anon_baby_id)# %>%
## LONGITUDINAL DATA ANALYSES ##
her_long_analyses<- longitudinal_data_analyses %>%
filter(!bilingual_type=="fre-eng") %>%
filter(visit %in% c(1,2)) %>%
group_by(anon_baby_id) %>%
filter(n()<1) %>% #Just want to keep the families that have data for two visits
ungroup()
## LONGITUDINAL DATA ANALYSES ##
her_long_analyses<- longitudinal_data_analyses %>%
filter(!bilingual_type=="fre-eng") %>%
filter(visit %in% c(1,2)) %>%
group_by(anon_baby_id) %>%
filter(n()>1) %>% #Just want to keep the families that have data for two visits
ungroup()
## LONGITUDINAL DATA ANALYSES ##
her_long_analyses<- longitudinal_data_analyses %>%
filter(!bilingual_type=="fre-eng") %>%
filter(visit %in% c(1,2)) %>%
group_by(anon_baby_id) %>%
mutate(visit22 = row_number())
summary(her_lm_just_age_eng)
her_lm_just_age_eng<- lm(eng_exp ~ age, data=her_for_lms)
her_lm_just_age_fre<- lm(fre_exp ~ age, data=her_for_lms)
her_lm_just_age_her<- lm(min_exp ~ age, data=her_for_lms)
summary(her_lm_just_age_eng)
summary(her_lm_just_age_fre)
summary(herlm_just_age_her)
summary(her_lm_just_age_her)
her_lm_age_by_eng<- lm(eng_exp ~ age * strategy, data=her_for_lms)
her_lm_age_by_fre<- lm(fre_exp ~ age * strategy, data=her_for_lms)
her_lm_age_by_her<- lm(min_exp ~ age * strategy, data=her_for_lms)
summary(her_lm_age_by_eng)
summary(her_lm_age_by_fre)
summary(her_lm_age_by_her)
figure_x_a <-ggplot(her_for_anova_graphs, aes( x=age , y=fre_exp, color=strategy)) +
geom_smooth(alpha=0.2)+
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
ylim(0, 100)+
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20), legend.position = "none")+
labs(title= "A. French exposure changes by age/strategy")
print(figure_x_a)
###### FOR THE FRENCH- HERITAGE SAMPLE ###########
#Calculating how many families use each strategy and its corresponding %
her_prop_strategy<- FEH %>%
filter(!bilingual_type == "fre-eng")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
View(her_prop_strategy)
#Reordering levels so legend in the graph is in order.
her_prop_strategy$strategy<- factor(her_prop_strategy$strategy, levels= c("one-parent-bilingual","both-parents-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
her_prop_strategy<- her_prop_strategy %>%
arrange(desc(prop))
figure_6 <- waffle(parts = her_V1, rows=5, colors = c(my_yellow, my_orange, my_blue, my_green, my_purple), keep = T, title = "% Family Strategies for the French-heritage sample", size=0.6)
#Waffle plot
her_V1<- setNames(her_prop_strategy$n, c( "one-parent-bilingual","both-parents-bilingual","one-parent-one-lanaguage", "one-language-at-home", "single-parent"))
figure_6 <- waffle(parts = her_V1, rows=5, colors = c(my_yellow, my_orange, my_blue, my_green, my_purple), keep = T, title = "% Family Strategies for the French-heritage sample", size=0.6)
print(figure_6)
figure_6 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_green, my_purple), keep = T, title = "% Family Strategies for the French-heritage sample", size=0.6)
print(figure_6)
figure_6 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_green, my_purple), keep = T, title = "% Family Strategies for the French/English-heritage sample", size=0.6)
print(figure_6)
###### FOR THE FRENCH- HERITAGE SAMPLE ###########
#Calculating how many families use each strategy and its corresponding %
her_prop_strategy<- FEH %>%
filter(!bilingual_type == "fre-eng")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Reordering levels so legend in the graph is in order.
her_prop_strategy$strategy<- factor(her_prop_strategy$strategy, levels= c("one-parent-bilingual","both-parents-bilingual", "one-parent-one-lang", "single-parent", "one-language-at-home"))
her_prop_strategy<- her_prop_strategy %>%
arrange(desc(prop))
#Waffle plot
her_V1<- setNames(her_prop_strategy$n, c( "one-parent-bilingual","both-parents-bilingual","one-parent-one-lanaguage",  "single-parent", "one-language-at-home"))
figure_6 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_purple, my_green), keep = T, title = "% Family Strategies for the French/English-heritage sample", size=0.6)
print(figure_6)
print(figure_6)
her_for_chisq <- her_prop_strategy %>%
filter(!strategy %in% c("single-parent", "one-language-at-home"))
her_xsq_test<- chisq.test(her_for_chisq$n)
View(her_xsq_test)
tidy(her_xsq_test)
library(lubridate)
library(sparkline)
library(webshot)
library(htmlwidgets)
library(formattable)
library(here)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
library(waffle)
library(ggsankey)
library(dplyr)
library(tidyverse)
library(patchwork)
library(ggpubr)
library(broom)
library(janitor)
library(glmmTMB)
library(DHARMa)
library(betareg)
library(emmeans)
library(ggiraphExtra)
library(ggeffects)
library(mvtnorm)
library(boot)
library(bbmle)
library(performance)
library(see)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
load(here("anonymized_data/longitudinal_data.Rda"))
#Saving my palette to use in visualizations
my_yellow<-"#FFC107"
my_orange<- "#D95F02"
my_blue<- "#1F78B4"
my_green<- "#33a02c"
my_purple<- "#683f6d"
#### CONSTRUCTING AND DESCRIBING ALL RELEVANT DATA SETS ####
#Trilingul exclusions count
total_excluded_triling<- final_data_no_exc %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp<=90) %>%
distinct(unique_id)%>%
tally()
#Monolingual exclusions
total_monoling_excluded<- final_data %>%
filter(exp_l1 >95) %>%
filter(exp_l2 <5) %>%
distinct(unique_id) %>%
tally()
#after third language exclusions exclusions
n <- final_data %>%
distinct(unique_id) %>%
tally()
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1) #439 data from first visit only
#n when only taking first visit
n_keep_first_visit<-first_visit_only %>%
distinct(unique_id)%>%
tally()
age_min <- round(min(first_visit_only$age, na.rm = T), 2)
age_max<- round(max(first_visit_only$age, na.rm = T), 2)
age_mean<- round(mean(first_visit_only$age, na.rm = T), 2)
age_sd<- round(sd(first_visit_only$age, na.rm = T), 2)
female<- first_visit_only %>%
filter(gender=="female")%>%
distinct(unique_id)%>%
tally()
twice_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn==2)%>%
distinct(unique_id)%>%
tally()
three_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn==3)%>%
distinct(unique_id)%>%
tally()
four_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn>3)%>%
distinct(unique_id)%>%
tally()
#French-English-Heritage bilingual percentages
FEH <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
FEH_perc<- FEH %>%
group_by(bilingual_type) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#By bilingual type percentages
fre_eng_perc <- FEH %>%
filter(bilingual_type== "fre-eng")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_her_perc <- FEH %>%
filter(bilingual_type=="fre-her")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_eng_perc <- FEH %>%
filter(bilingual_type=="eng-her") %>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#l1 amount of exposure range
min_exp_range <- final_data %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data %>%
select(exp_l1) %>%
max()
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id, leq_date)
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(nn==2) %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
select(anon_baby_id, first_visit_date, second_visit_date) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
distinct() %>%
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) ##Filter visits that were very close together.
##!! There is a mistake in one date which results in a negative date. Fix.
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
View(FEH_perc)
221*61
13481/100
#Calculating how many families use each strategy and its corresponding %
prop_strategy_FE<- FEH %>%
filter(bilingual_type == "fre-eng")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
View(prop_strategy_FE)
###### FOR THE FRENCH- HERITAGE SAMPLE ###########
#Calculating how many families use each strategy and its corresponding %
her_prop_strategy<- FEH %>%
filter(!bilingual_type == "fre-eng")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
View(her_prop_strategy)
18+2+24+12+4
221+60
100-79
test<- FEH %>%
filter(bilingual_type == "fre_her")
View(FEH)
test<- FEH %>%
filter(bilingual_type == "fre-her")
test<- FEH %>%
filter(bilingual_type == "fre-eng")
test<- FEH %>%
filter(bilingual_type == "eng-her")
31*100
3100/60
for_lms <- FE_for_blc_anova %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100) %>%
drop_na()
FE_for_anova_graphs<-FEH %>%
filter(bilingual_type == "fre-eng")
FE_for_anova_graphs$strategy<- factor(FE_for_anova_graphs$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
FE_for_anova_graphs <- FE_for_anova_graphs %>%
filter(!strategy %in% c("single-parent", "one-language-at-home"))
figure_2_a <-ggplot(FE_for_anova_graphs, aes( x=strategy , y=fre_exp, fill = strategy )) +
stat_summary(geom="bar")+
stat_summary() +
ylim(0,100) +
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20), legend.position = "none")+
labs(title= "A. Mean French exposure by strategy")
figure_2_b <-ggplot(FE_for_anova_graphs, aes( x=strategy , y=eng_exp, fill = strategy )) +
stat_summary(geom="bar")+
stat_summary() +
ylim(0,100) +
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20), legend.position = "none")+
labs(title= "B. Mean English exposure by strategy")
figure_2_c <-ggplot(FE_for_anova_graphs, aes( x=strategy , y=exp_l2, fill = strategy )) +
stat_summary(geom="bar")+
stat_summary() +
ylim(0,50) +
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20), legend.text= element_text(size=20), legend.title= element_text(size=20))+
labs(title= "C. Mean exposure balance by strategy")
figure_2<- figure_2_a + figure_2_b + figure_2_c
for_lms <- FE_for_blc_anova %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100) %>%
drop_na()
FE_for_anovas<- FEH %>%
filter(bilingual_type == "fre-eng") %>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
##French Anova objects
FE_anova_model_french <- aov(fre_exp ~ strategy, data= FE_for_anovas)
FE_aov_fre<- tidy(FE_anova_model_french)
FE_tukey_fre_s<- TukeyHSD (FE_anova_model_french)
FE_fre_F <- FE_aov_fre$statistic
FE_fre_p <- FE_aov_fre$p.value
##English ANOVA objects
FE_anova_model_english <- aov(eng_exp ~ strategy, data= FE_for_anovas)
FE_aov_eng<- tidy(FE_anova_model_english)
FE_tukey_eng_s<- TukeyHSD(FE_anova_model_english)
FE_eng_F <- FE_aov_eng$statistic
FE_eng_p <- FE_aov_eng$p.value
#model_performance(anova_model_english)
#check_model(anova_model_english)
## Exposure balance
FE_for_blc_anova <- FEH %>%
filter(bilingual_type == "fre-eng")%>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
FE_blc_model <- aov(exp_l2 ~ strategy, data= FE_for_blc_anova)
FE_aov_blc<- tidy(FE_blc_model)
FE_tukey_blc_s<- TukeyHSD(FE_blc_model)
model_performance(anova_model_french)
for_lms <- FE_for_blc_anova %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100) %>%
drop_na()
#REORDERING THE CAREGIVER LEVELS SO THAT THEY ARE ORDERED IN THE GRAPH
for_lms$caregiver_1_french_use <- factor(for_lms$caregiver_1_french_use, levels= c("never","sometimes", "regularly"))
for_lms$caregiver_1_english_use <- factor(for_lms$caregiver_1_english_use, levels= c("never","sometimes", "regularly"))
for_lms$caregiver_2_french_use <- factor(for_lms$caregiver_2_french_use, levels= c("never","sometimes", "regularly"))
for_lms$caregiver_2_english_use <- factor(for_lms$caregiver_2_english_use, levels= c("never","sometimes", "regularly"))
# Dataframe for english exposure
lm_eng <- for_lms %>%
select(age, eng_exp, strategy, anon_baby_id, caregiver_1_french_use, caregiver_1_english_use, caregiver_2_french_use,caregiver_2_english_use) %>%
filter(eng_exp != "NA") %>%
mutate(eng_exp = eng_exp/100) %>%
drop_na()
# Dataframe for french exposure
lm_fre <- for_lms %>%
select(age, fre_exp, strategy, anon_baby_id, caregiver_1_french_use, caregiver_1_english_use, caregiver_2_french_use, caregiver_2_english_use) %>%
filter(fre_exp != "NA") %>%
mutate(fre_exp = fre_exp/100) %>%
drop_na()
#STRATEGY LINEAR MODELS
lm_strat_eng<- lm(eng_exp ~ strategy, data=lm_eng)
lm_strat_fre <- lm(fre_exp ~ strategy, data=lm_fre)
#Summary of STRATEGY LINEAR models
summary(lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
summary(lm_strat_fre) #Same as above, one parent bilingual is significant and not for beta.
###### Careviver models
#MOTHER MODELS
lm_mom_eng<- lm(eng_exp ~ caregiver_1_english_use, data=lm_eng)
lm_mom_fre<- lm(fre_exp ~ caregiver_1_french_use, data=lm_fre)
#Summary of MOTHER models
summary(lm_mom_eng) #Similar pattern of results
summary(lm_mom_fre) #same pattern of results
#FATHER MODELS
lm_dad_eng<- lm(eng_exp ~ caregiver_2_english_use, data=lm_eng)
lm_dad_fre<- lm(fre_exp ~ caregiver_2_french_use, data=lm_fre)
#Summary of FATHER models
summary(lm_dad_eng) #Same pattern of results
summary(lm_dad_fre) #same pattern of results
#MOTHER AND FATHER MODELS
lm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=lm_eng)
lm_parents_aditive_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use, data=lm_fre)
#Summary of Mother and Father models
summary(lm_parents_aditive_eng) #same pattern of results
summary(lm_parents_aditive_fre) #same pattern of results
performance::compare_performance(lm_parents_aditive_fre, lm_dad_fre, lm_mom_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_dad_eng, lm_mom_eng)
##Comparison of strategy versus parents models
performance::compare_performance(lm_parents_aditive_fre, lm_strat_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_strat_eng)
#plot the aditive caregiver models
figure_p_A<-ggPredict(lm_parents_aditive_eng)+
theme_bw() +
theme(axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),axis.title = element_text(size=12), plot.title = element_text(size=15), legend.text= element_text(size=12),legend.title= element_text(size=12))+
labs(title= "A. Mothers and father interaction predicting English")
figure_p_B<-ggPredict(lm_parents_aditive_fre)+
theme_bw() +
theme(axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),axis.title = element_text(size=12), plot.title = element_text(size=15), legend.text= element_text(size=12),legend.title= element_text(size=12))+
labs(title= "B. Mothers and father interaction predicting French")
figure_p<- figure_p_A+figure_p_B
#AGE MODELS
#just age models
lm_just_age_eng<- lm(eng_exp ~ age, data=lm_eng)
lm_just_age_fre<- lm(fre_exp ~ age, data=lm_fre)
#Summary of just age AGE models
summary(lm_just_age_eng) #Similar pattern of results for beta and lm
summary(lm_just_age_fre) #Same pattern of results for beta and lm
#age by strategy models
lm_age_by_eng<- lm(eng_exp ~ age * strategy, data=lm_eng)
lm_age_by_fre<- lm(fre_exp ~ age * strategy, data=lm_fre)
#Summary of age by strategy models
summary(lm_age_by_eng) #same pattern of results
summary(lm_age_by_fre) #SImilar pattern of results
#age by parent individual strategy models
lm_eng_age_by_parents <- lm(eng_exp ~ age*(caregiver_2_english_use + caregiver_1_english_use), data= lm_eng)
lm_fre_age_by_parents <- lm(fre_exp ~ age*(caregiver_2_french_use + caregiver_1_french_use), data= lm_fre)
#Summary of age by parent individual strategy models
summary(lm_eng_age_by_parents) #same pattern of results
summary(lm_fre_age_by_parents) #SImilar pattern of results
##Comparison of strategy versus parents models
performance::compare_performance(lm_parents_aditive_fre, lm_strat_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_strat_eng)
75/2
37.5+25
