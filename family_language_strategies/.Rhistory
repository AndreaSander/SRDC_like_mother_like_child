drop_na(paternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Child ethnicity French-English sample
FE_child_ethicity <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(child_ethnicity) %>%
drop_na(child_ethnicity)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##MATERNAL EDUCATION heritage sample
her_maternal_education <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(maternal_education) %>%
drop_na(maternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Paternal EDUCATION heritage sample
her_paternal_education <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(paternal_education) %>%
drop_na(paternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Child ethnicity her sample
her_child_ethicity <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(child_ethnicity) %>%
drop_na(child_ethnicity) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length <- longitudinal_data_analyses %>%
filter(visit <= 2)
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
FE_for_lms<- FEH %>%
filter(bilingual_type == "fre-eng") %>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
for_lms<- FE_for_lms %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100) %>%
drop_na()
#STRATEGY LINEAR MODELS
lm_strat_eng<- lm(eng_exp ~ strategy, data=for_lms)
lm_strat_fre <- lm(fre_exp ~ strategy, data=for_lms)
#Summary of STRATEGY LINEAR models
summary(lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
summary(lm_strat_fre) #Same as above, one parent bilingual is significant and not for beta.
###### Careviver models
parents_for_lms <- for_lms%>%
filter(type_of_family == "mother-father family") #Keeps only mother-father families as other configurations were to few to analyze separately
#MOTHER MODELS
lm_mom_eng<- lm(eng_exp ~ caregiver_1_english_use, data=for_lms)
lm_mom_fre<- lm(fre_exp ~ caregiver_1_french_use, data=for_lms)
#Summary of MOTHER models
summary(lm_mom_eng) #Similar pattern of results
summary(lm_mom_fre) #same pattern of results
#FATHER MODELS
lm_dad_eng<- lm(eng_exp ~ caregiver_2_english_use, data=for_lms)
lm_dad_fre<- lm(fre_exp ~ caregiver_2_french_use, data=for_lms)
#Summary of FATHER models
summary(lm_dad_eng) #Same pattern of results
summary(lm_dad_fre) #same pattern of results
#MOTHER AND FATHER MODELS
lm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=parents_for_lms)
lm_parents_aditive_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use, data=parents_for_lms)
#Summary of Mother and Father models
summary(lm_parents_aditive_eng) #same pattern of results
summary(lm_parents_aditive_fre) #same pattern of results
performance::compare_performance(lm_parents_aditive_fre, lm_dad_fre, lm_mom_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_dad_eng, lm_mom_eng)
##Comparison of strategy versus parents models
performance::compare_performance(lm_parents_aditive_fre, lm_strat_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_strat_eng)
## LONGITUDINAL DATA ANALYSES ##
FE_long_analyses<- longitudinal_data_analyses %>%
filter(bilingual_type=="fre-eng")
########### Count proportions ##########
v1_strat_prop <- FE_long_analyses %>%
select(visit, strategy) %>%
filter(visit==1) %>%
filter(!strategy == "single-parent") %>%
group_by(strategy) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_strat_prop <- FE_long_analyses %>%
select(visit, strategy) %>%
filter(visit==2) %>%
filter(!strategy == "single-parent") %>%
group_by(strategy) %>%
tally(name = "n_second_visit")%>%
mutate(proportion_second_visit = n_second_visit/sum(n_second_visit)) %>%
mutate(percentage_second_visit= proportion_second_visit*100)
FE_percentages_visits <- merge(v1_strat_prop, v2_strat_prop, by="strategy")
###########################
###################### GLMER MODEL To learn weather changing strategy was related to the time between visits ########
FE_for_long_glmer<- FE_long_analyses %>%
select(visit, strategy, length_between_visits, anon_baby_id) %>%
filter(visit %in% c(1,2)) %>%
filter(!strategy == "single-parent") %>%
pivot_wider(names_from = visit, values_from = strategy) %>%
rename(time_1 = "1") %>%
rename(time_2 = "2") %>%
mutate(change_strat = case_when(time_1 == time_2 ~"no_change",
TRUE~ "change"))
FE_for_long_glmer<- FE_for_long_glmer
FE_count_change <- FE_for_long_glmer %>%
group_by(change_strat) %>%
tally() %>%
mutate(perc = (n/sum(n)*100))
FE_strategy_change <- FE_for_long_glmer %>%
filter(change_strat=="change") %>%
group_by(time_2) %>%
tally() %>%
mutate(perc = (n/sum(n)*100))
long_model<- glmer(as.factor(change_strat) ~ scale(length_between_visits) +(1|anon_baby_id), data = FE_for_long_glmer, family="binomial")
summary(long_model)
############ make sankey graph ########
FE_for_sankey <- FE_for_long_glmer %>%
select(-change_strat) %>%
rename("time 1" = "time_1") %>%
rename("time 2" = "time_2") %>%
make_long("time 1", "time 2")
FE_for_sankey <- FE_for_sankey %>%
mutate(node= fct_relevel (node, "both-parents-bilingual", "one-parent-bilingual", "one-language-at-home", "one-parent-one-lang"))
FE_p1<- ggplot(FE_for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node )) +
geom_sankey()
FE_node_counts <- FE_for_sankey %>%
filter(x=="time 1") %>%
group_by(node) %>%
summarise(count = n()) %>%
ungroup()
FE_next_node_counts <- FE_for_sankey %>%
filter(x=="time 1") %>%
group_by(next_node) %>%
summarise(count = n()) %>%
ungroup()
FE_p1$data$node<- factor(FE_p1$data$node, levels= c("one-parent-one-lang","one-parent-bilingual", "both-parents-bilingual"))
FE_p1$data$next_node <- factor(FE_p1$data$next_node, levels= c("one-parent-one-lang","one-parent-bilingual", "both-parents-bilingual"))
figure_2 <- FE_p1+
scale_fill_manual(name= "Family Language Strategies", values = c(my_blue, my_yellow, my_orange))
figure_2<- figure_2 +
# geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
annotate("richtext", x=c(1,1,1), y=c(12,-3,-15), label=FE_node_counts$count, size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(12,-5,-15), label=FE_next_node_counts$count, size=10)+ #Adding the N at time 2
theme(axis.text.x = element_text(size=35), axis.title = element_blank(), plot.title = element_text(size=35), axis.ticks = element_blank(), axis.text.y = element_blank(), legend.text = element_text(size=35), legend.title = element_text(size=35))
ggsave(file="Figure_2.png",  width=25, height=12, dpi=300)
##Mother sankey
mom_long<- FE_long_analyses %>% #this results in a dataframe that has one row per kid who had 2 FR-EN visits.
filter(type_of_family == "mother-father family") %>%
filter(!strategy=="single-parent") %>%
filter(visit %in% c(1,2)) %>%
select(anon_baby_id, l1, l2, care1_l1, care1_l2, visit, length_between_visits) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2),
visit = paste0("time_", visit)) %>%
rename("Fre" = caregiver_1_french_use,
"Eng" = caregiver_1_english_use) %>%
select(-care1_l1, -care1_l2, -l1, -l2) %>%
pivot_wider(names_from = visit, values_from = c(Fre, Eng)) %>%
rename_at(vars(starts_with("Fre")), ~ paste0(str_remove(., "Fre_"), "_Fre")) %>%
rename_at(vars(starts_with("Eng")), ~  paste0(str_remove(., "Eng_"), "_Eng")) %>%
drop_na()
mom_long_french<- mom_long %>%
select(anon_baby_id, length_between_visits, time_1_Fre, time_2_Fre)
mom_long_english<- mom_long %>%
select(anon_baby_id, length_between_visits, time_1_Eng, time_2_Eng)
mom_long_fre_s <- mom_long_french %>%
rename("time 1" = "time_1_Fre") %>%
rename("time 2" = "time_2_Fre") %>%
make_long("time 1","time 2")
#Changeing the levels so that the graph is in order
mom_long_fre_s$node <- factor(mom_long_fre_s$node, levels= c("never","sometimes", "regularly"))
mom_long_fre_s$next_node <- factor(mom_long_fre_s$next_node, levels= c("never","sometimes","regularly"))
mom_long_eng_s <- mom_long_english %>%
rename("time 1" = "time_1_Eng") %>%
rename("time 2" = "time_2_Eng") %>%
make_long("time 1","time 2")
mom_long_eng_s$node <- factor(mom_long_eng_s$node, levels= c("never","sometimes", "regularly"))
mom_long_eng_s$next_node <- factor(mom_long_eng_s$next_node, levels= c("never","sometimes","regularly"))
v1_mother_prop_fre <- mom_long %>%
select(time_1_Fre, time_1_Eng) %>%
group_by(time_1_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_mother_prop_fre <- mom_long %>%
select(time_2_Fre, time_2_Eng) %>%
group_by(time_2_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v1_mother_prop_eng <- mom_long %>%
select(time_1_Fre, time_1_Eng) %>%
group_by(time_1_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_mother_prop_eng <- mom_long %>%
select(time_2_Fre, time_2_Eng) %>%
group_by(time_2_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
mom_fre_node_counts <- mom_long_fre_s %>%
filter(x=="time 1") %>%
group_by(node) %>%
summarise(count = n()) %>%
ungroup()
mom_fre_next_node_counts <-  mom_long_fre_s %>%
filter(x=="time 1") %>%
group_by(next_node) %>%
summarise(count = n()) %>%
ungroup()
figure_3_a <- ggplot(mom_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw() +
labs(title= "A. Mothers' change of language use", subtitle = "French")+
theme(axis.text.x = element_text(size=30),legend.position = "none", plot.title = element_text(size=35),
plot.subtitle = element_text(size=30), axis.title=element_blank())+
annotate("richtext", x=c(1,1,1), y=c(5,-9,-20), label=c(20,11,5), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-9,-20), label=c(16,17,3), size=10) #Adding the N at time 2
mom_eng_node_counts <- mom_long_eng_s %>%
filter(x=="time 1") %>%
group_by(node) %>%
summarise(count = n()) %>%
ungroup()
mom_eng_next_node_counts <-  mom_long_eng_s %>%
filter(x=="time 1") %>%
group_by(next_node) %>%
summarise(count = n()) %>%
ungroup()
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw() +
labs(title= "A. Mothers' change of language use", subtitle = "English")+
theme(axis.text.x = element_text(size=30),legend.position = "none", plot.title = element_text(size=35),
plot.subtitle = element_text(size=30), axis.title=element_blank())+
annotate("richtext", x=c(1,1,1), y=c(6,-10,-20), label=c(24, 8, 4), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-10,-20), label=c(26,7,3), size=10) #Adding the N at time 2
figure_3<- figure_3_a + figure_3_b
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
View(figure_3_a)
View(figure_3_b)
dad_long<- FE_long_analyses %>% #this results in a dataframe that has one row per kid who had 2 FR-EN visits.
filter(type_of_family == "mother-father family") %>%
filter(!strategy=="single-parent") %>%
filter(visit %in% c(1,2)) %>%
select(anon_baby_id, l1, l2, care2_l1, care2_l2, visit, length_between_visits) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~care2_l1,
l2=="French"~care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2),
visit = paste0("time_", visit)) %>%
rename("Fre" = caregiver_2_french_use,
"Eng" = caregiver_2_english_use) %>%
select(-care2_l1, -care2_l2, -l1, -l2) %>%
pivot_wider(names_from = visit, values_from = c(Fre, Eng)) %>%
rename_at(vars(starts_with("Fre")), ~ paste0(str_remove(., "Fre_"), "_Fre")) %>%
rename_at(vars(starts_with("Eng")), ~  paste0(str_remove(., "Eng_"), "_Eng")) %>%
drop_na()
dad_long_french<- dad_long %>%
select(anon_baby_id, length_between_visits, time_1_Fre, time_2_Fre) %>%
mutate(time_1_Fre = case_when(time_1_Fre == "NA"~"never",
TRUE~ time_1_Fre))
dad_long_english<- dad_long %>%
select(anon_baby_id, length_between_visits, time_1_Eng, time_2_Eng)
dad_long_fre_s <- dad_long_french %>%
rename("time 1" = "time_1_Fre") %>%
rename("time 2" = "time_2_Fre") %>%
make_long("time 1","time 2")
dad_long_fre_s$node <- factor(dad_long_fre_s$node, levels= c("never","sometimes", "regularly"))
dad_long_fre_s$next_node <- factor(dad_long_fre_s$next_node, levels= c("never","sometimes","regularly"))
dad_long_eng_s <- dad_long_english %>%
rename("time 1" = "time_1_Eng") %>%
rename("time 2" = "time_2_Eng") %>%
make_long("time 1","time 2")
dad_long_eng_s$node <- factor(dad_long_eng_s$node, levels= c("never","sometimes", "regularly"))
dad_long_eng_s$next_node <- factor(dad_long_eng_s$next_node, levels= c("never","sometimes","regularly"))
v1_dad_prop_fre <- dad_long %>%
select(time_1_Fre, time_1_Eng) %>%
group_by(time_1_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_dad_prop_fre <- dad_long %>%
select(time_2_Fre, time_2_Eng) %>%
group_by(time_2_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v1_dad_prop_eng <- dad_long %>%
select(time_1_Fre, time_1_Eng) %>%
group_by(time_1_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_dad_prop_eng <- dad_long %>%
select(time_2_Fre, time_2_Eng) %>%
group_by(time_2_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
dad_fre_node_counts <- dad_long_fre_s %>%
filter(x=="time 1") %>%
group_by(node) %>%
summarise(count = n()) %>%
ungroup()
dad_fre_next_node_counts <-  dad_long_fre_s %>%
filter(x=="time 1") %>%
group_by(next_node) %>%
summarise(count = n()) %>%
ungroup()
figure_4_a <- ggplot(dad_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw()+
theme(axis.text.x = element_text(size=30), legend.position = "none", plot.title = element_text(size=35), plot.subtitle = element_text(size = 30))+
labs(title= "A. Fathers' change of language use", subtitle = "French")+
annotate("richtext", x=c(1,1,1), y=c(5,-10,-20), label=c(22, 8, 6), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-10,-20), label=c(23,8,5), size=10) #Adding the N at time 2
dad_eng_node_counts <- mom_long_eng_s %>%
filter(x=="time 1") %>%
group_by(node) %>%
summarise(count = n()) %>%
ungroup()
dad_eng_next_node_counts <-  dad_long_eng_s %>%
filter(x=="time 1") %>%
group_by(next_node) %>%
summarise(count = n()) %>%
ungroup()
figure_4_b <- ggplot(dad_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values =c("#dac291","#41ae76", "#75638b"), name="language use with child frequency")+
theme_bw()+
theme(axis.text.x = element_text(size=30), plot.title = element_text(size=35), axis.title = element_blank(), legend.text = element_text(size=30), legend.title = element_text(size=30), plot.subtitle = element_text(size = 30))+
labs(title= "B. Fathers' change of language use", subtitle = "English")+
annotate("richtext", x=c(1,1,1), y=c(4,-10,-22), label=c(24,8,4), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(4,-10,-22), label=c(20,9,7), size=10) #Adding the N at time 2
figure_4<- figure_4_a + figure_4_b
ggsave(file="Figure_4.png", width=25, height=12, dpi=300)
install.packages("cowplot")
library(cowplot)
figure_3<- plot_grid(figure_3_a, figure_3_b, ncol=2)
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
figure_4<- plot_grid(figure_3_a, figure_3_b, ncol=2)
ggsave(file="Figure_4.png", width=25, height=12, dpi=300)
figure_4<- plot_grid(figure_4_a, figure_4_b, ncol=2)
ggsave(file="Figure_4.png", width=25, height=12, dpi=300)
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw() +
labs(title= "A. Mothers' change of language use", subtitle = "English")+
theme(axis.text.x = element_text(size=30),legend.text = element_text(size=30), plot.title = element_text(size=35),
plot.subtitle = element_text(size=30), axis.title=element_blank())+
annotate("richtext", x=c(1,1,1), y=c(6,-10,-20), label=c(24, 8, 4), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-10,-20), label=c(26,7,3), size=10) #Adding the N at time 2
figure_3<- plot_grid(figure_3_a, figure_3_b, ncol=2)
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"), name="language use with child frequency")+
theme_bw() +
labs(title= "A. Mothers' change of language use", subtitle = "English")+
theme(axis.text.x = element_text(size=30),legend.text = element_text(size=30), plot.title = element_text(size=35),
plot.subtitle = element_text(size=30), axis.title=element_blank())+
annotate("richtext", x=c(1,1,1), y=c(6,-10,-20), label=c(24, 8, 4), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-10,-20), label=c(26,7,3), size=10) #Adding the N at time 2
figure_3<- plot_grid(figure_3_a, figure_3_b, ncol=2)
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"), name="language use with child frequency")+
theme_bw() +
labs(title= "A. Mothers' change of language use", subtitle = "English")+
theme(axis.text.x = element_text(size=30),legend.text = element_text(size=30),legend.title = element_text(size=30), plot.title = element_text(size=35),
plot.subtitle = element_text(size=30), axis.title=element_blank())+
annotate("richtext", x=c(1,1,1), y=c(6,-10,-20), label=c(24, 8, 4), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-10,-20), label=c(26,7,3), size=10) #Adding the N at time 2
figure_3<- plot_grid(figure_3_a, figure_3_b, ncol=2)
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"), name="language use with child frequency")+
theme_bw() +
labs(title= "A. Mothers' change of language use", subtitle = "English")+
theme(axis.text.x = element_text(size=30),legend.text = element_text(size=30),legend.title = element_text(size=30), plot.title = element_text(size=35),
plot.subtitle = element_text(size=30), axis.title=element_blank())+
annotate("richtext", x=c(1,1,1), y=c(6,-10,-20), label=c(24, 8, 4), size=10)+ #Adding the N at time 1
annotate("richtext", x=c(2,2,2), y=c(5,-10,-20), label=c(26,7,3), size=10) #Adding the N at time 2
figure_3<- plot_grid(figure_3_a, figure_3_b, ncol=2)
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
?plot_grid
figure_3<- plot_grid(figure_3_a, figure_3_b, ncol=2, rel_widths = c(2,2))
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
figure_3<- plot_grid(figure_3_a, figure_3_b, ncol=2, rel_widths = c(2,4))
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
figure_3<- plot_grid(figure_3_a, figure_3_b, ncol=2, rel_widths = c(2,3))
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
figure_4<- plot_grid(figure_4_a, figure_4_b, ncol=2, rel_widths = c(2,3))
ggsave(file="Figure_4.png", width=25, height=12, dpi=300)
load("~/Research/family_language_strategies/family_language_strategies/anonymized_data/longitudinal_data.Rda")
View(longitudinal_data)
load("~/Research/family_language_strategies/family_language_strategies/anonymized_data/LEQ_data.Rda")
View(final_fam_str)
load("~/Research/family_language_strategies/family_language_strategies/anonymized_data/final_merged_data.Rda")
View(final_data)
load("~/Research/family_language_strategies/family_language_strategies/anonymized_data/final_data_no_exc.Rda")
load("~/Research/family_language_strategies/family_language_strategies/anonymized_data/final_data_strat.Rda")
load("~/Research/family_language_strategies/family_language_strategies/anonymized_data/demographic_data.Rda")
View(final_data_no_exc)
View(final_data_strat)
View(final_data)
View(demog_anonym)
load("~/Research/family_language_strategies/family_language_strategies/anonymized_data/LEQ_data.Rda")
load("~/Research/family_language_strategies/family_language_strategies/anonymized_data/LEQ_data.Rda")
