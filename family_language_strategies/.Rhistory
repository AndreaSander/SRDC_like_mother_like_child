filter(eng_exp != "NA") %>%
filter(eng_exp !=100) %>%
mutate(eng_exp = eng_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for french exposure
for_beta_fre <- for_beta %>%
select(age, fre_exp, strategy, lang_status, anon_baby_id) %>%
filter(fre_exp != "NA") %>%
filter(fre_exp != 100) %>%
mutate(fre_exp = fre_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for minority language exposure
for_beta_min <- for_beta %>%
select(age, min_exp, strategy, lang_status, anon_baby_id) %>%
filter(min_exp != "NA") %>%
filter(min_exp !=100) %>%
mutate(min_exp = min_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
#Dataframe for balance
for_balance<- for_beta_blc%>%
select(age, exp_l2, strategy, lang_status, anon_baby_id) %>%
filter(exp_l2 != "NA") %>%
mutate(exp_l2 = exp_l2/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
m4b <- glmmTMB(eng_exp ~ strategy * age, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * age)
# Create the dataframes to run the models for each language. Monolinguals are excluded, as are the rows
# where exposure for a given language equals 100. Since exposure is on a 0-100 scale and the beta distributions
# works with values ranging from 0-1, exposure is divided by 100.
for_beta <- for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, min_exp, strategy, lang_status) %>%
filter(lang_status != "monolingual") %>%
filter(gender != "NA") %>%
filter(!strategy == "one-language-at-home")
for_beta_blc <- for_blc_anova %>%
select(gender, anon_baby_id, age, exp_l2, strategy, lang_status) %>%
filter(lang_status != "monolingual") %>%
filter(gender != "NA") %>%
filter(!strategy == "one-language-at-home")
# Dataframe for english exposure
for_beta_eng <- for_beta %>%
select(age, eng_exp, strategy, lang_status, anon_baby_id) %>%
filter(eng_exp != "NA") %>%
filter(eng_exp !=100) %>%
mutate(eng_exp = eng_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for french exposure
for_beta_fre <- for_beta %>%
select(age, fre_exp, strategy, lang_status, anon_baby_id) %>%
filter(fre_exp != "NA") %>%
filter(fre_exp != 100) %>%
mutate(fre_exp = fre_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for minority language exposure
for_beta_min <- for_beta %>%
select(age, min_exp, strategy, lang_status, anon_baby_id) %>%
filter(min_exp != "NA") %>%
filter(min_exp !=100) %>%
mutate(min_exp = min_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
#Dataframe for balance
for_balance<- for_beta_blc%>%
select(age, exp_l2, strategy, lang_status, anon_baby_id) %>%
filter(exp_l2 != "NA") %>%
mutate(exp_l2 = exp_l2/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
m4b <- glmmTMB(eng_exp ~ strategy * age, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m4b) # No significant effects, except for the intercept which is both parents bilingual?
# We run model diagnostics with DHARMa
sim_m4b <- simulateResiduals(m4b)
plot(sim_m4b) # MODEL OK!
testDispersion(sim_m4b) # MODEL OK!
# We can plot the fixed effects for m4b, the best model so far (very interesting!)
m4b_effects <- ggpredict(m4b, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_green, my_yellow, my_blue)
figure_3a<- plot(m4b_effects, add.data = F, colors= custom_palette, alpha=.2)+
theme(legend.position = "none")+
labs(title= "A. Predicted values of English Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter. This code computes pairwise comparisons of the estimated marginal means of eng_exp across the different levels of "strategy", while holding "age" constant at its mean value.
emtrends(m4b, pairwise ~ strategy, var="age") # trend for one-language-at-home significantly different from that of one parent-bilingual
# MODEL FOR FRENCH EXPOSURE + VISUALIZATION
m5 <- glmmTMB(fre_exp ~ strategy * age, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m5) # same as English only for the intercept.
# We run model diagnostics with DHARMa
sim_m5 <- simulateResiduals(m5)
plot(sim_m5) # MODEL OK!
testDispersion(sim_m5) # MODEL OK!
# We can plot the fixed effects for m5, the best model so far
m5_effects <- ggpredict(m5, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_green, my_yellow, my_blue)
figure_3b<- plot(m5_effects, add.data = F, colors= custom_palette, alpha=.2)+
labs(title= "B. Predicted values of French Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m5, pairwise ~ strategy, var="age") # no significant results
# MODEL FOR MINORITY LANGUAGE EXPOSURE + VISUALIZATION
m6 <- glmmTMB(min_exp ~ strategy * age, data=for_beta_min, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m6) # Significant effects for one-language-at-home and its interaction with age and with age is a significant predictor.
# We run model diagnostics with DHARMa
sim_m6 <- simulateResiduals(m6)
plot(sim_m6) # MODEL OK!
testDispersion(sim_m6) # MODEL OK!
# We can plot the fixed effects for m6, the best model so far (very interesting!)
m6_effects <- ggpredict(m6, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_green, my_yellow, my_blue)
figure_3c<- plot(m6_effects, add.data = F, colors= custom_palette, alpha=.2) +
theme(legend.position = "none")+
labs(title= "C. Predicted values of HL Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m6, pairwise ~ strategy, var="age") # # trend for one-language-at-home significantly different from that of one parent-bilingual
m7<- glmmTMB(exp_l2 ~ strategy * age, data=for_balance, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m7)
m7_effects <- ggpredict(m7, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_green, my_yellow, my_blue)
figure_3d<- plot(m7_effects, add.data = F, colors= custom_palette, alpha=.2)+
theme(legend.position = "none")+
labs(title= "D. Predicted values of Exposure Balance")
figure_3a + figure_3b + figure_3c + figure_3d
View(for_beta)
# Create the dataframes to run the models for each language. Monolinguals are excluded, as are the rows
# where exposure for a given language equals 100. Since exposure is on a 0-100 scale and the beta distributions
# works with values ranging from 0-1, exposure is divided by 100.
for_beta <- for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, min_exp, strategy, lang_status) %>%
filter(lang_status != "monolingual") %>%
filter(gender != "NA") %>%
filter(!strategy == "one-language-at-home")
for_beta_blc <- for_blc_anova %>%
select(gender, anon_baby_id, age, exp_l2, strategy, lang_status) %>%
filter(lang_status != "monolingual") %>%
filter(gender != "NA") %>%
filter(!strategy == "one-language-at-home")
# Dataframe for english exposure
for_beta_eng <- for_beta %>%
select(age, eng_exp, strategy, lang_status, anon_baby_id) %>%
filter(eng_exp != "NA") %>%
filter(eng_exp !=100) %>%
mutate(eng_exp = eng_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for french exposure
for_beta_fre <- for_beta %>%
select(age, fre_exp, strategy, lang_status, anon_baby_id) %>%
filter(fre_exp != "NA") %>%
filter(fre_exp != 100) %>%
mutate(fre_exp = fre_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for minority language exposure
for_beta_min <- for_beta %>%
select(age, min_exp, strategy, lang_status, anon_baby_id) %>%
filter(min_exp != "NA") %>%
filter(min_exp !=100) %>%
mutate(min_exp = min_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
#Dataframe for balance
for_balance<- for_beta_blc%>%
select(age, exp_l2, strategy, lang_status, anon_baby_id) %>%
filter(exp_l2 != "NA") %>%
mutate(exp_l2 = exp_l2/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
m4b <- glmmTMB(eng_exp ~ strategy * age, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m4b) # No significant effects, except for the intercept which is both parents bilingual?
# We run model diagnostics with DHARMa
sim_m4b <- simulateResiduals(m4b)
plot(sim_m4b) # MODEL OK!
testDispersion(sim_m4b) # MODEL OK!
# We can plot the fixed effects for m4b, the best model so far (very interesting!)
m4b_effects <- ggpredict(m4b, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3a<- plot(m4b_effects, add.data = F, colors= custom_palette, alpha=.2)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=23), legend.position = "none")+
labs(title= "A. Predicted values of English Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter. This code computes pairwise comparisons of the estimated marginal means of eng_exp across the different levels of "strategy", while holding "age" constant at its mean value.
emtrends(m4b, pairwise ~ strategy, var="age") # trend for one-language-at-home significantly different from that of one parent-bilingual
# MODEL FOR FRENCH EXPOSURE + VISUALIZATION
m5 <- glmmTMB(fre_exp ~ strategy * age, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m5) # same as English only for the intercept.
# We run model diagnostics with DHARMa
sim_m5 <- simulateResiduals(m5)
plot(sim_m5) # MODEL OK!
testDispersion(sim_m5) # MODEL OK!
# We can plot the fixed effects for m5, the best model so far
m5_effects <- ggpredict(m5, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3b<- plot(m5_effects, add.data = F, colors= custom_palette, alpha=.2)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=23), legend.text= element_text(size=20), legend.title= element_text(size=20))+
labs(title= "B. Predicted values of French Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m5, pairwise ~ strategy, var="age") # no significant results
# MODEL FOR MINORITY LANGUAGE EXPOSURE + VISUALIZATION
m6 <- glmmTMB(min_exp ~ strategy * age, data=for_beta_min, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m6) # Significant effects for one-language-at-home and its interaction with age and with age is a significant predictor.
# We run model diagnostics with DHARMa
sim_m6 <- simulateResiduals(m6)
plot(sim_m6) # MODEL OK!
testDispersion(sim_m6) # MODEL OK!
# We can plot the fixed effects for m6, the best model so far (very interesting!)
m6_effects <- ggpredict(m6, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3c<- plot(m6_effects, add.data = F, colors= custom_palette, alpha=.2) +
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=23), legend.position = "none")+
labs(title= "C. Predicted values of HL Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m6, pairwise ~ strategy, var="age") # # trend for one-language-at-home significantly different from that of one parent-bilingual
m7<- glmmTMB(exp_l2 ~ strategy * age, data=for_balance, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m7)
m7_effects <- ggpredict(m7, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3d<- plot(m7_effects, add.data = F, colors= custom_palette, alpha=.2)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=23), legend.position = "none")+
labs(title= "D. Predicted values of Exposure Balance")
figure_3a + figure_3b + figure_3c + figure_3d
View(for_beta_blc)
# Create the dataframes to run the models for each language. Monolinguals are excluded, as are the rows
# where exposure for a given language equals 100. Since exposure is on a 0-100 scale and the beta distributions
# works with values ranging from 0-1, exposure is divided by 100.
for_beta <- for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, min_exp, strategy, lang_status) %>%
filter(lang_status != "monolingual") %>%
filter(gender != "NA") %>%
filter(!strategy == "one-language-at-home")
for_beta_blc <- for_blc_anova %>%
select(gender, anon_baby_id, age, exp_l2, strategy, lang_status) %>%
filter(lang_status != "monolingual") %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome")
# Dataframe for english exposure
for_beta_eng <- for_beta %>%
select(age, eng_exp, strategy, lang_status, anon_baby_id) %>%
filter(eng_exp != "NA") %>%
filter(eng_exp !=100) %>%
mutate(eng_exp = eng_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for french exposure
for_beta_fre <- for_beta %>%
select(age, fre_exp, strategy, lang_status, anon_baby_id) %>%
filter(fre_exp != "NA") %>%
filter(fre_exp != 100) %>%
mutate(fre_exp = fre_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for minority language exposure
for_beta_min <- for_beta %>%
select(age, min_exp, strategy, lang_status, anon_baby_id) %>%
filter(min_exp != "NA") %>%
filter(min_exp !=100) %>%
mutate(min_exp = min_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
#Dataframe for balance
for_balance<- for_beta_blc%>%
select(age, exp_l2, strategy, lang_status, anon_baby_id) %>%
filter(exp_l2 != "NA") %>%
mutate(exp_l2 = exp_l2/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
m4b <- glmmTMB(eng_exp ~ strategy * age, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m4b) # No significant effects, except for the intercept which is both parents bilingual?
# We run model diagnostics with DHARMa
sim_m4b <- simulateResiduals(m4b)
plot(sim_m4b) # MODEL OK!
testDispersion(sim_m4b) # MODEL OK!
# We can plot the fixed effects for m4b, the best model so far (very interesting!)
m4b_effects <- ggpredict(m4b, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3a<- plot(m4b_effects, add.data = F, colors= custom_palette, alpha=.5)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=23), legend.position = "none")+
labs(title= "A. Predicted values of English Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter. This code computes pairwise comparisons of the estimated marginal means of eng_exp across the different levels of "strategy", while holding "age" constant at its mean value.
emtrends(m4b, pairwise ~ strategy, var="age") # trend for one-language-at-home significantly different from that of one parent-bilingual
# MODEL FOR FRENCH EXPOSURE + VISUALIZATION
m5 <- glmmTMB(fre_exp ~ strategy * age, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m5) # same as English only for the intercept.
# We run model diagnostics with DHARMa
sim_m5 <- simulateResiduals(m5)
plot(sim_m5) # MODEL OK!
testDispersion(sim_m5) # MODEL OK!
# We can plot the fixed effects for m5, the best model so far
m5_effects <- ggpredict(m5, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3b<- plot(m5_effects, add.data = F, colors= custom_palette, alpha=.5)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=23), legend.text= element_text(size=20), legend.title= element_text(size=20))+
labs(title= "B. Predicted values of French Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m5, pairwise ~ strategy, var="age") # no significant results
# MODEL FOR MINORITY LANGUAGE EXPOSURE + VISUALIZATION
m6 <- glmmTMB(min_exp ~ strategy * age, data=for_beta_min, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m6) # Significant effects for one-language-at-home and its interaction with age and with age is a significant predictor.
# We run model diagnostics with DHARMa
sim_m6 <- simulateResiduals(m6)
plot(sim_m6) # MODEL OK!
testDispersion(sim_m6) # MODEL OK!
# We can plot the fixed effects for m6, the best model so far (very interesting!)
m6_effects <- ggpredict(m6, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3c<- plot(m6_effects, add.data = F, colors= custom_palette, alpha=.5) +
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=23), legend.position = "none")+
labs(title= "C. Predicted values of HL Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m6, pairwise ~ strategy, var="age") # # trend for one-language-at-home significantly different from that of one parent-bilingual
m7<- glmmTMB(exp_l2 ~ strategy * age, data=for_balance, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m7)
m7_effects <- ggpredict(m7, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3d<- plot(m7_effects, add.data = F, colors= custom_palette, alpha=.5)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=23), legend.position = "none")+
labs(title= "D. Predicted values of Exposure Balance")
figure_3a + figure_3b + figure_3c + figure_3d
# Create the dataframes to run the models for each language. Monolinguals are excluded, as are the rows
# where exposure for a given language equals 100. Since exposure is on a 0-100 scale and the beta distributions
# works with values ranging from 0-1, exposure is divided by 100.
for_beta <- for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, min_exp, strategy, lang_status) %>%
filter(lang_status != "monolingual") %>%
filter(gender != "NA") %>%
filter(!strategy == "one-language-at-home")
for_beta_blc <- for_blc_anova %>%
select(gender, anon_baby_id, age, exp_l2, strategy, lang_status) %>%
filter(lang_status != "monolingual") %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome")
# Dataframe for english exposure
for_beta_eng <- for_beta %>%
select(age, eng_exp, strategy, lang_status, anon_baby_id) %>%
filter(eng_exp != "NA") %>%
filter(eng_exp !=100) %>%
mutate(eng_exp = eng_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for french exposure
for_beta_fre <- for_beta %>%
select(age, fre_exp, strategy, lang_status, anon_baby_id) %>%
filter(fre_exp != "NA") %>%
filter(fre_exp != 100) %>%
mutate(fre_exp = fre_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for minority language exposure
for_beta_min <- for_beta %>%
select(age, min_exp, strategy, lang_status, anon_baby_id) %>%
filter(min_exp != "NA") %>%
filter(min_exp !=100) %>%
mutate(min_exp = min_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
#Dataframe for balance
for_balance<- for_beta_blc%>%
select(age, exp_l2, strategy, lang_status, anon_baby_id) %>%
filter(exp_l2 != "NA") %>%
mutate(exp_l2 = exp_l2/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
m4b <- glmmTMB(eng_exp ~ strategy * age, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m4b) # No significant effects, except for the intercept which is both parents bilingual?
# We run model diagnostics with DHARMa
sim_m4b <- simulateResiduals(m4b)
plot(sim_m4b) # MODEL OK!
testDispersion(sim_m4b) # MODEL OK!
# We can plot the fixed effects for m4b, the best model so far (very interesting!)
m4b_effects <- ggpredict(m4b, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3a<- plot(m4b_effects, add.data = F, colors= custom_palette, alpha=.05)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=22), legend.position = "none")+
labs(title= "A. Predicted values of English Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter. This code computes pairwise comparisons of the estimated marginal means of eng_exp across the different levels of "strategy", while holding "age" constant at its mean value.
emtrends(m4b, pairwise ~ strategy, var="age") # trend for one-language-at-home significantly different from that of one parent-bilingual
# MODEL FOR FRENCH EXPOSURE + VISUALIZATION
m5 <- glmmTMB(fre_exp ~ strategy * age, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m5) # same as English only for the intercept.
# We run model diagnostics with DHARMa
sim_m5 <- simulateResiduals(m5)
plot(sim_m5) # MODEL OK!
testDispersion(sim_m5) # MODEL OK!
# We can plot the fixed effects for m5, the best model so far
m5_effects <- ggpredict(m5, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3b<- plot(m5_effects, add.data = F, colors= custom_palette, alpha=.05)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=22), legend.text= element_text(size=20), legend.title= element_text(size=20))+
labs(title= "B. Predicted values of French Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m5, pairwise ~ strategy, var="age") # no significant results
# MODEL FOR MINORITY LANGUAGE EXPOSURE + VISUALIZATION
m6 <- glmmTMB(min_exp ~ strategy * age, data=for_beta_min, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m6) # Significant effects for one-language-at-home and its interaction with age and with age is a significant predictor.
# We run model diagnostics with DHARMa
sim_m6 <- simulateResiduals(m6)
plot(sim_m6) # MODEL OK!
testDispersion(sim_m6) # MODEL OK!
# We can plot the fixed effects for m6, the best model so far (very interesting!)
m6_effects <- ggpredict(m6, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3c<- plot(m6_effects, add.data = F, colors= custom_palette, alpha=.05) +
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=22), legend.position = "none")+
labs(title= "C. Predicted values of HL Exposure")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m6, pairwise ~ strategy, var="age") # # trend for one-language-at-home significantly different from that of one parent-bilingual
m7<- glmmTMB(exp_l2 ~ strategy * age, data=for_balance, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m7)
m7_effects <- ggpredict(m7, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3d<- plot(m7_effects, add.data = F, colors= custom_palette, alpha=.05)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=22), legend.position = "none")+
labs(title= "D. Predicted values of Exposure Balance")
figure_3a + figure_3b + figure_3c + figure_3d
# Create the dataframes to run the models for each language. Monolinguals are excluded, as are the rows
# where exposure for a given language equals 100. Since exposure is on a 0-100 scale and the beta distributions
# works with values ranging from 0-1, exposure is divided by 100.
for_beta <- for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, min_exp, strategy, lang_status) %>%
filter(lang_status != "monolingual") %>%
filter(gender != "NA") %>%
filter(!strategy == "one-language-at-home")
for_beta_blc <- for_blc_anova %>%
select(gender, anon_baby_id, age, exp_l2, strategy, lang_status) %>%
filter(lang_status != "monolingual") %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome")
# Dataframe for english exposure
for_beta_eng <- for_beta %>%
select(age, eng_exp, strategy, lang_status, anon_baby_id) %>%
filter(eng_exp != "NA") %>%
filter(eng_exp !=100) %>%
mutate(eng_exp = eng_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for french exposure
for_beta_fre <- for_beta %>%
select(age, fre_exp, strategy, lang_status, anon_baby_id) %>%
filter(fre_exp != "NA") %>%
filter(fre_exp != 100) %>%
mutate(fre_exp = fre_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
# Dataframe for minority language exposure
for_beta_min <- for_beta %>%
select(age, min_exp, strategy, lang_status, anon_baby_id) %>%
filter(min_exp != "NA") %>%
filter(min_exp !=100) %>%
mutate(min_exp = min_exp/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
#Dataframe for balance
for_balance<- for_beta_blc%>%
select(age, exp_l2, strategy, lang_status, anon_baby_id) %>%
filter(exp_l2 != "NA") %>%
mutate(exp_l2 = exp_l2/100,
strategy = as.factor(strategy),
lang_status = as.factor(lang_status))
m4b <- glmmTMB(eng_exp ~ strategy * age, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m4b) # No significant effects, except for the intercept which is both parents bilingual?
# We run model diagnostics with DHARMa
sim_m4b <- simulateResiduals(m4b)
plot(sim_m4b) # MODEL OK!
testDispersion(sim_m4b) # MODEL OK!
# We can plot the fixed effects for m4b, the best model so far (very interesting!)
m4b_effects <- ggpredict(m4b, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3a<- plot(m4b_effects, add.data = F, colors= custom_palette, alpha=.05)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=22), legend.position = "none")+
labs(title= "A. Predicted values of English")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter. This code computes pairwise comparisons of the estimated marginal means of eng_exp across the different levels of "strategy", while holding "age" constant at its mean value.
emtrends(m4b, pairwise ~ strategy, var="age") # trend for one-language-at-home significantly different from that of one parent-bilingual
# MODEL FOR FRENCH EXPOSURE + VISUALIZATION
m5 <- glmmTMB(fre_exp ~ strategy * age, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * age)
summary(m5) # same as English only for the intercept.
# We run model diagnostics with DHARMa
sim_m5 <- simulateResiduals(m5)
plot(sim_m5) # MODEL OK!
testDispersion(sim_m5) # MODEL OK!
# We can plot the fixed effects for m5, the best model so far
m5_effects <- ggpredict(m5, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3b<- plot(m5_effects, add.data = F, colors= custom_palette, alpha=.05)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=22), legend.text= element_text(size=20), legend.title= element_text(size=20))+
labs(title= "B. Predicted values of French")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m5, pairwise ~ strategy, var="age") # no significant results
# MODEL FOR MINORITY LANGUAGE EXPOSURE + VISUALIZATION
m6 <- glmmTMB(min_exp ~ strategy * age, data=for_beta_min, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m6) # Significant effects for one-language-at-home and its interaction with age and with age is a significant predictor.
# We run model diagnostics with DHARMa
sim_m6 <- simulateResiduals(m6)
plot(sim_m6) # MODEL OK!
testDispersion(sim_m6) # MODEL OK!
# We can plot the fixed effects for m6, the best model so far (very interesting!)
m6_effects <- ggpredict(m6, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3c<- plot(m6_effects, add.data = F, colors= custom_palette, alpha=.05) +
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=22), legend.position = "none")+
labs(title= "C. Predicted values of HL")
# We can estimate and compare the marginal means of the response variable across different levels of "strategy", while accounting for the effect of "age" and the varying dispersion parameter.
emtrends(m6, pairwise ~ strategy, var="age") # # trend for one-language-at-home significantly different from that of one parent-bilingual
m7<- glmmTMB(exp_l2 ~ strategy * age, data=for_balance, family= beta_family(link="logit"), dispformula = ~ strategy + age)
summary(m7)
m7_effects <- ggpredict(m7, terms = c("age", "strategy"))
custom_palette = c(my_orange, my_yellow, my_blue)
figure_3d<- plot(m7_effects, add.data = F, colors= custom_palette, alpha=.05)+
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=22), legend.position = "none")+
labs(title= "D. Predicted values of Exposure Balance")
figure_3a + figure_3b + figure_3c + figure_3d
figure_3<- figure_3a + figure_3b + figure_3c + figure_3d
print(figure_3)
