knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
library(waffle)
load(here("anonymized_data/longitudinal_data.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
prop_strategy<- prop_strategy %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop, .desc=F))
View(prop_strategy)
waffle(prop_strategy$n)
waffle(prop_strategy$n, rows=5)
waffle(prop_strategy$n, rows=20)
View(prop_strategy)
196+124+145+42+30+15
552/18
552/22
552/23
waffle(prop_strategy$n, rows=23)
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_waffle (n_rows=23, size=0.33, colour="white")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80"))
?geom_waffle
# vector
x<- c(both-parents-bilingual=196, one-language-at-home=124, one-parent-bilingual=145, one-parent-one-lang-flex=42,
waffle(prop_strategy$n, rows=23)
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_bw()
waffle(prop_strategy$n, rows=23)
prop_strategy_balance<-final_data_strat%>%
group_by(dom_lang_exp, strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_relevel(strategy, "single-parent", "one-parent-one-lang-strict","one-parent-one-lang-flex","one-language-at-home","one-parent-bilingual", "both-parents-bilingual"))
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_bw()
final_data_strat <- final_data_strat %>%
mutate(dom_lang_exp = case_when( exp_l1 >= 45 & exp_l1 <= 60 ~"45-60",
exp_l1 >= 60.1 & exp_l1 <=75 ~"60-75",
exp_l1 >=75.1 & exp_l1 <= 90 ~"75-90",
exp_l1 >=90.1 & exp_l1 <=100 ~"90-100"))
prop_strategy_balance<-final_data_strat%>%
group_by(dom_lang_exp, strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_relevel(strategy, "single-parent", "one-parent-one-lang-strict","one-parent-one-lang-flex","one-language-at-home","one-parent-bilingual", "both-parents-bilingual"))
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col() +
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
theme_bw() +
labs(title= "Proportion of Use of Family Strategies by Dominant Language Exposure Bin")
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(dplyr)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
View(final_data)
library(here)
library(tidyverse)
library(dplyr)
library(lme4)
library(lmerTest)
library(rstatix)
library(broom)
library(janitor)
vars<-c("exp_l3", "exp_l4")
final_data_french_coded <-
final_data %>%
mutate_at(vars, as.numeric) %>%
mutate(l3 = replace(l3, l3=="NA", "no lang")) %>%
mutate(l4 = replace(l4, l4=="NA", "no lang")) %>%
mutate(fre_exp = case_when(l1=="French"~ exp_l1,
l2=="French"~ exp_l2,
l3=="French"~ exp_l3,
l4=="French"~ exp_l4,
TRUE~ 0)) %>%
mutate(eng_exp = case_when(l1=="English"~ exp_l1,
l2=="English"~ exp_l2,
l3=="English"~ exp_l3,
l4=="English"~ exp_l4,
TRUE~ 0)) %>%
mutate(min_exp = case_when (!(l1 %in% c("French", "English"))& l2 %in% c("French", "English") ~ exp_l1,
!(l2 %in% c("French", "English")) & l1 %in% c("French", "English") ~ exp_l2,
TRUE ~ 0
))
load(here("anonymized_data/final_merged_data.Rda"))
vars<-c("exp_l3", "exp_l4")
final_data_french_coded <-
final_data %>%
mutate_at(vars, as.numeric) %>%
mutate(l3 = replace(l3, l3=="NA", "no lang")) %>%
mutate(l4 = replace(l4, l4=="NA", "no lang")) %>%
mutate(fre_exp = case_when(l1=="French"~ exp_l1,
l2=="French"~ exp_l2,
l3=="French"~ exp_l3,
l4=="French"~ exp_l4,
TRUE~ 0)) %>%
mutate(eng_exp = case_when(l1=="English"~ exp_l1,
l2=="English"~ exp_l2,
l3=="English"~ exp_l3,
l4=="English"~ exp_l4,
TRUE~ 0)) %>%
mutate(min_exp = case_when (!(l1 %in% c("French", "English"))& l2 %in% c("French", "English") ~ exp_l1,
!(l2 %in% c("French", "English")) & l1 %in% c("French", "English") ~ exp_l2,
TRUE ~ 0
))
final_data_strat <- final_data_french_coded %>%
mutate(strategy=case_when(
#one-parent-one-lang-strict: Each parent speaks only one language and both parents don't speak the same language
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-parent-one-lang-strict",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-strict",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#(The same language cannot be spoken regularly by both parents or that would be considered a one-parent-bilingual strategy)
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-flex",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang-flex",
#one-parent-bilingual: One parent speaks 2 languages, the other parent only speaks one language
#Starting point
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
#Some bilingual parents put both of their languages as sometimes rather than both as regularly
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#One parent bilingual (R&R or S&S) and another parent that speaks one of the language but not the other (R|S & N|NA)
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#Both parents speak the same language regularly, and one of them speak another language sometimes
#(not one-parent-one-lang-flex because both parents use the same language regularly in opposition to each parent having a different language that they use regularly)
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "one-parent-bilingual",
#both-parents-bilingual: Both parents speak both languages either regularly or sometimes
care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "both-parents-bilingual",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#The same language cannot be spoken regularly by both parents or it comes to be filled under the one-parent-bilingual strategy
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-flex",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang-flex",
#one-language-at-home: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-language-at-home",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "one-language-at-home",
#single-parent: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "single-parent",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "single-parent"
))
#Calculate the proportion for the different strategies
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
library(here)
library(tidyverse)
library(dplyr)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
View(final_data_strat)
range(final_data_strat$fre_exp)
#Family language strategy visualization
final_data_strat <- final_data_strat %>%
mutate(fre_exp_bins = case_when( fre_exp >= 0 & fre_exp <= 25 ~"0-25",
fre_exp>= 25.1 & fre_exp <=50 ~"25-50",
fre_exp >=50.1 & fre_exp <= 75 ~"50-75",
fre_exp >=75.1 & fre_exp <=100 ~"75-100"))
prop_strategy_balance<-final_data_strat%>%
group_by(fre_exp_bins, strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_relevel(strategy, "single-parent", "one-parent-one-lang-strict","one-parent-one-lang-flex","one-language-at-home","one-parent-bilingual", "both-parents-bilingual"))
figure_2<- ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col() +
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
theme_bw() +
labs(title= "Proportion of Use of Family Strategies by Dominant Language Exposure Bin")
print(figure_2)
figure_2<- ggplot(prop_strategy_balance,aes( x=fre_exp_bins, y= prop, fill = strategy )) +
geom_col() +
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
theme_bw() +
labs(title= "Proportion of Use of Family Strategies by Dominant Language Exposure Bin")
print(figure_2)
library(waffle)
remove.packages("waffle", lib="~/R/win-library/4.1")
devtools::install_git("https://git.rud.is/hrbrmstr/waffle.git")
install.packages("waffle", repos = "https://cinc.rud.is")
install.packages("waffle", repos = "https://cinc.rud.is")
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
library(waffle)
load(here("anonymized_data/longitudinal_data.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
prop_strategy<- prop_strategy %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop, .desc=F))
?geom_waffle
ggplot(prop_strategy, aes(vals=n, fill=strategy)) +
geom_waffle (nrows=23)+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80"))
#Descriptive graphs: 1 proportion of use statistic.
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
prop_strategy<- prop_strategy %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop, .desc=F))
# vector
waffle(prop_strategy$n, rows=23)
ggplot(prop_strategy, aes(fill=strategy, values= n)) +
geom_waffle (nrows=23)+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80"))
# labs(x="", title = "Proportion of Use of Family Strategies")+
# theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
#  theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_bw()
#strategy by L2 exposure
final_data_strat <- final_data_strat %>%
mutate(dom_lang_exp = case_when( exp_l1 >= 45 & exp_l1 <= 60 ~"45-60",
exp_l1 >= 60.1 & exp_l1 <=75 ~"60-75",
exp_l1 >=75.1 & exp_l1 <= 90 ~"75-90",
exp_l1 >=90.1 & exp_l1 <=100 ~"90-100"))
prop_strategy_balance<-final_data_strat%>%
group_by(dom_lang_exp, strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_relevel(strategy, "single-parent", "one-parent-one-lang-strict","one-parent-one-lang-flex","one-language-at-home","one-parent-bilingual", "both-parents-bilingual"))
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col() +
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
theme_bw() +
labs(title= "Proportion of Use of Family Strategies by Dominant Language Exposure Bin")
ggplot(prop_strategy, aes(fill=strategy, values= n)) +
geom_waffle (nrows=23)+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_bw()
ggplot(prop_strategy, aes(fill=strategy, values= n)) +
geom_waffle (nrows=23, size=0.33)+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_bw()
ggplot(prop_strategy, aes(fill=strategy, values= n)) +
geom_waffle (nrows=23)+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (nrows=23, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (nrows=24, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_void()
View(prop_strategy)
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (nrows=12, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T, nrows=12)) +
geom_waffle (color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (nrows=12, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
# coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=12, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=23, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=23, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#1f78b4","#a6cee3","#7570b3", "#33a02c", "#b2df8a", "#d95f02")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=23, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#7570b3","#33a02c","#b2df8a", "#d95f02", "#a6cee3", "#1f78b4")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=23, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#7570b3","#33a02c","#b2df8a", "#d95f02", "#1b9e77", "#1f78b4")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=23, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#7570b3","#33a02c","#b2df8a", "#d95f02", "#e7298a", "#1f78b4")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=23, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#7570b3","#33a02c","#b2df8a", "#d95f02", "#FFC107", "#1f78b4")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=23, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#7570b3","#33a02c","#b2df8a", "#d95f02", "#DC267F", "#1f78b4")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=23, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#7570b3","#33a02c","#b2df8a", "#d95f02", "#FFC107", "#1f78b4")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
one_point_per_family <- final_data_strat%>%
add_count(anon_baby_id) %>%
filter(nn=1)
one_point_per_family <- final_data_strat%>%
add_count(anon_baby_id)
View(one_point_per_family)
one_point_per_family <- final_data_strat%>%
add_count(anon_baby_id) %>%
filter(nn==1)
348+204
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
library(waffle)
load(here("anonymized_data/longitudinal_data.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
View(first_visit_only)
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1)
prop_strategy<- first_visit_only %>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
prop_strategy<- prop_strategy %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop, .desc=F))
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=23, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#7570b3","#33a02c","#b2df8a", "#d95f02", "#FFC107", "#1f78b4")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
439-11
ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=22, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#7570b3","#33a02c","#b2df8a", "#d95f02", "#FFC107", "#1f78b4")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
knitr::opts_chunk$set(echo = TRUE)
#Family language strategy visualization
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1) #439 data from first visit only
prop_strategy<- first_visit_only %>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
prop_strategy<- prop_strategy %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop, .desc=F))
#Waffle plot
figure_1<- ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=22, color="white")+
scale_fill_manual (name = "Family Strategy", values =c("#7570b3","#33a02c","#b2df8a", "#d95f02", "#FFC107", "#1f78b4")) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
View(prop_strategy)
library(here)
library(tidyverse)
library(dplyr)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
#subseting to get data only from each child's first visit to the lab
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1) #439 data from first visit only
#n when only taking first visit
n_keep_first_visit<-first_visit_only %>%
distinct(unique_id)%>%
tally()
#Calculating how many families use each strategy and its corresponding %
prop_strategy<- first_visit_only %>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
perc_both_parents_biling<- prop_strategy %>%
filter(strategy=="both_parents-bilingual") %>%
print(perc)
perc_both_parents_biling<- prop_strategy %>%
filter(strategy=="both_parents-bilingual")
perc_both_parents_biling<- prop_strategy %>%
filter(strategy=="both-parents-bilingual")
perc_both_parents_biling<- prop_strategy %>%
filter(strategy=="both-parents-bilingual") %>%
print(perc)
View(perc_both_parents_biling)
perc_both_parents_biling<- prop_strategy %>%
filter(strategy=="both-parents-bilingual") %>%
select(perc)
