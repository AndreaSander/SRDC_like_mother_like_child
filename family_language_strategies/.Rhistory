select(anon_baby_id, unique_id, l1, l2, care2_l1, care2_l2, visit, strategy) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
mutate(individual_strategy_father = case_when( caregiver_2_french_use %in% c("regularly", "sometimes") & caregiver_2_english_use %in% c("regularly", "sometimes") ~ "father_bilingual" ,
TRUE ~ "father_monolingual"
))
FE_mother_father_long <- inner_join(FE_mother_long_analyses, FE_father_long_analyses)
FE_mother_father_long <- FE_mother_father_long %>%
select(anon_baby_id, visit, individual_strategy_mother, individual_strategy_father, strategy) %>%
filter(visit == c(1,2)) %>%
mutate(visit = as.character(as.numeric(visit)))%>%
mutate(visit_a = visit) %>%#need two visit columns to give the df the appropriate shape for the sankey graph
mutate(visit_b= visit) %>%
pivot_wider(names_from = visit, values_from = strategy) %>%
rename("Visit_1_FLS" = "1") %>%
rename("Visit_2_FLS" = "2")
FE_mother_father_long <- FE_mother_father_long %>%
pivot_wider(names_from = visit_a, values_from = individual_strategy_mother) %>%
rename("Visit_1_Mom" = "1") %>%
rename("Visit_2_Mom" = "2")
FE_mother_father_long <- FE_mother_father_long %>%
pivot_wider(names_from = visit_b, values_from = individual_strategy_father) %>%
rename("Visit_1_Dad" = "1") %>%
rename("Visit_2_Dad" = "2")
View(FE_for_long_glmer)
FE_mother_father_long <- FE_mother_father_long %>%
pivot_wider(names_from = visit_b, values_from = individual_strategy_father) %>%
rename("Visit_1_Dad" = "1") %>%
rename("Visit_2_Dad" = "2") %>%
group_by(anon_baby_id)
FE_mother_father_long <- FE_mother_father_long %>%
group_by(anon_baby_id)
FE_mother_father_long <- FE_mother_father_long %>%
distinct(anon_baby_id)
FE_mother_father_long <- FE_mother_father_long %>%
group_by(anon_baby_id) %>%
distinct(anon_baby_id)
library(lubridate)
library(sparkline)
library(webshot)
library(htmlwidgets)
library(formattable)
library(here)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
library(waffle)
library(ggsankey)
library(dplyr)
library(tidyverse)
library(patchwork)
library(ggpubr)
library(broom)
library(janitor)
library(glmmTMB)
library(DHARMa)
library(betareg)
library(emmeans)
library(ggiraphExtra)
library(ggeffects)
library(mvtnorm)
library(boot)
library(bbmle)
library(performance)
library(see)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
load(here("anonymized_data/longitudinal_data.Rda"))
#Saving my palette to use in visualizations
my_yellow<-"#FFC107"
my_orange<- "#D95F02"
my_blue<- "#1F78B4"
my_green<- "#33a02c"
my_purple<- "#683f6d"
#### CONSTRUCTING AND DESCRIBING ALL RELEVANT DATA SETS ####
#Trilingul exclusions count
total_excluded_triling<- final_data_no_exc %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp<=90) %>%
distinct(unique_id)%>%
tally()
#Monolingual exclusions
total_monoling_excluded<- final_data %>%
filter(exp_l1 >95) %>%
filter(exp_l2 <5) %>%
distinct(unique_id) %>%
tally()
#after third language exclusions exclusions
n <- final_data %>%
distinct(unique_id) %>%
tally()
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1) #439 data from first visit only
#n when only taking first visit
n_keep_first_visit<-first_visit_only %>%
distinct(unique_id)%>%
tally()
age_min <- round(min(first_visit_only$age, na.rm = T), 2)
age_max<- round(max(first_visit_only$age, na.rm = T), 2)
age_mean<- round(mean(first_visit_only$age, na.rm = T), 2)
age_sd<- round(sd(first_visit_only$age, na.rm = T), 2)
female<- first_visit_only %>%
filter(gender=="female")%>%
distinct(unique_id)%>%
tally()
twice_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn==2)%>%
distinct(unique_id)%>%
tally()
three_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn==3)%>%
distinct(unique_id)%>%
tally()
four_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn>3)%>%
distinct(unique_id)%>%
tally()
#French-English-Heritage bilingual percentages
FEH <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
FEH_perc<- FEH %>%
group_by(bilingual_type) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#By bilingual type percentages
fre_eng_perc <- FEH %>%
filter(bilingual_type== "fre-eng")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_her_perc <- FEH %>%
filter(bilingual_type=="fre-her")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_eng_perc <- FEH %>%
filter(bilingual_type=="eng-her") %>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#l1 amount of exposure range
min_exp_range <- final_data %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data %>%
select(exp_l1) %>%
max()
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id, leq_date)
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(nn==2) %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
select(anon_baby_id, first_visit_date, second_visit_date) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
distinct() %>%
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) ##Filter visits that were very close together.
##!! There is a mistake in one date which results in a negative date. Fix.
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
## LONGITUDINAL DATA ANALYSES ##
FE_long_analyses<- longitudinal_data_analyses %>%
filter(bilingual_type=="fre-eng")
########### Count proportions ##########
v1_strat_prop <- FE_long_analyses %>%
select(visit, strategy) %>%
filter(visit==1) %>%
filter(!strategy == "single-parent") %>%
group_by(strategy) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
v2_strat_prop <- FE_long_analyses %>%
select(visit, strategy) %>%
filter(visit==2) %>%
filter(!strategy == "single-parent") %>%
group_by(strategy) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
FE_percentages_visits <- merge(v1_strat_prop, v2_strat_prop, by="strategy")
FE_percentages_visits <- FE_percentages_visits %>%
select(strategy, n.x, n.y, perc.x, perc.y) %>%
rename(n_first_visit = n.x) %>%
rename(n_second_visit = n.y) %>%
rename(percentage_first_visit = perc.x) %>%
rename(percentage_second_visit = perc.y)
###########################
###################### GLMER MODEL To learn weather changing strategy was related to the time between visits ########
FE_for_long_glmer<- FE_long_analyses %>%
select(visit, strategy, length_between_visits, anon_baby_id) %>%
filter(visit == c(1,2)) %>%
filter(!strategy == "single-parent") %>%
pivot_wider(names_from = visit, values_from = strategy) %>%
rename(visit_1 = "1") %>%
rename(visit_2 = "2") %>%
mutate(change_strat = case_when(visit_1 == visit_2 ~"no_change",
TRUE~ "change"))
FE_for_long_glmer<- FE_for_long_glmer %>%
drop_na("visit_1") #One NA because family used french and Heritage in the first visit and french and english in the second.
FE_count_change <- FE_for_long_glmer %>%
group_by(change_strat) %>%
tally() %>%
mutate(perc = (n/sum(n)*100))
FE_strategy_change <- FE_for_long_glmer %>%
filter(change_strat=="change") %>%
group_by(visit_2) %>%
tally() %>%
mutate(perc = (n/sum(n)*100))
long_model<- glmer(as.factor(change_strat) ~ scale(length_between_visits) +(1|anon_baby_id), data = FE_for_long_glmer, family="binomial")
summary(long_model)
############ make sankey graph ########
FE_for_sankey <- FE_for_long_glmer %>%
select(-change_strat) %>%
make_long("visit_1", "visit_2")
FE_for_sankey <- FE_for_sankey %>%
mutate(node= fct_relevel (node, "both-parents-bilingual", "one-parent-bilingual", "one-language-at-home", "one-parent-one-language"))
FE_p1<- ggplot(FE_for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node )) +
geom_sankey()
FE_p2<- FE_p1+
scale_fill_manual(name= "x", values = c(my_orange, my_yellow, my_green, my_blue))
FE_p2<- FE_p2 +
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20), legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank())+
labs(title="Stability of Family Strategies Across Visits", x="")
## AGE BY STRATEGY GRAPHS
figure_3_a <-ggplot(FE_for_anova_graphs, aes( x=age , y=fre_exp, color=strategy)) +
geom_smooth(alpha=0.2)+
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
ylim(0, 100)+
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20), legend.position = "none")+
labs(title= "A. French exposure changes by age/strategy")
FE_mother_long_analyses <- FE_long_analyses %>%
filter(!strategy=="single-parent") %>%
select(anon_baby_id, unique_id, l1, l2, care1_l1, care1_l2, visit, strategy) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(individual_strategy_mother = case_when( caregiver_1_french_use %in% c("regularly", "sometimes") & caregiver_1_english_use %in% c("regularly", "sometimes") ~ "mother_bilingual" ,
TRUE ~ "mother_monolingual"
))
FE_father_long_analyses <- FE_long_analyses %>%
filter(!strategy=="single-parent") %>%
select(anon_baby_id, unique_id, l1, l2, care2_l1, care2_l2, visit, strategy) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
mutate(individual_strategy_father = case_when( caregiver_2_french_use %in% c("regularly", "sometimes") & caregiver_2_english_use %in% c("regularly", "sometimes") ~ "father_bilingual" ,
TRUE ~ "father_monolingual"
))
FE_mother_father_long <- inner_join(FE_mother_long_analyses, FE_father_long_analyses)
FE_mother_father_long <- FE_mother_father_long %>%
select(anon_baby_id, visit, individual_strategy_mother, individual_strategy_father, strategy) %>%
filter(visit == c(1,2)) %>%
mutate(visit = as.character(as.numeric(visit)))%>%
mutate(visit_a = visit) %>%#need two visit columns to give the df the appropriate shape for the sankey graph
mutate(visit_b= visit) %>%
pivot_wider(names_from = visit, values_from = strategy) %>%
rename("Visit_1_FLS" = "1") %>%
rename("Visit_2_FLS" = "2")
FE_mother_father_long <- FE_mother_father_long %>%
pivot_wider(names_from = visit_a, values_from = individual_strategy_mother) %>%
rename("Visit_1_Mom" = "1") %>%
rename("Visit_2_Mom" = "2")
FE_mother_father_long <- FE_mother_father_long %>%
pivot_wider(names_from = visit_b, values_from = individual_strategy_father) %>%
rename("Visit_1_Dad" = "1") %>%
rename("Visit_2_Dad" = "2") %>%
distinct()
FE_mother_father_long <- FE_mother_father_long %>%
group_by(anon_baby_id)%>%
distinct()
FE_mother_father_long <- FE_mother_father_long %>%
group_by(anon_baby_id)%>%
summarise_all(na.omit)
FE_indi_for_sankey <- FE_mother_father_long %>%
make_long("Visit_1_Mom","Visit_2_Mom", "Visit_1_Dad", "Visit_2_Dad")
FE_indi_p1<- ggplot(FE_indi_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
print(FE_indi_p1)
FE_mother_father_long <- FE_mother_father_long %>%
group_by(anon_baby_id)%>%
summarise_all(na.omit) %>%#Collapsing IDs so that there is one row per baby
ungroup()
FE_indi_for_sankey <- FE_mother_father_long %>%
make_long("Visit_1_Mom","Visit_2_Mom", "Visit_1_Dad", "Visit_2_Dad")
FE_indi_p1<- ggplot(FE_indi_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
print(FE_indi_p1)
FE_indi_for_sankey <- FE_mother_father_long %>%
make_long("Visit_1_Mom","Visit_1_Dad", "Visit_1_FLS", "Visit_2_Mom", "Visit_2_Dad", "Visit_2_FLS")
FE_indi_p1<- ggplot(FE_indi_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
print(FE_indi_p1)
FE_indi_for_sankey <- FE_mother_father_long %>%
make_long("Visit_1_FLS","Visit_1_Mom","Visit_1_Dad", "Visit_2_Mom", "Visit_2_Dad", "Visit_2_FLS")
FE_indi_p1<- ggplot(FE_indi_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
print(FE_indi_p1)
FE_indi_for_sankey <- FE_mother_father_long %>%
make_long("Visit_1_FLS","Visit_1_Mom", "Visit_2_Mom", "Visit_2_FLS")
FE_indi_p1<- ggplot(FE_indi_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
print(FE_indi_p1)
?geom_sankey
FE_indi_for_sankey <- FE_mother_father_long %>%
make_long("Visit_1_FLS","Visit_1_Mom", "Visit_2_Mom", "Visit_2_FLS")
FE_indi_p1<- ggplot(FE_indi_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black")
print(FE_indi_p1)
FE_mom_for_sankey <- FE_mother_father_long %>%
make_long("Visit_1_FLS","Visit_1_Mom", "Visit_2_Mom", "Visit_2_FLS")
FE_indi_mom_p1<- ggplot(FE_mom_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(name= "x", values = c("#883c77","#8b2e57", my_orange, my_yellow, my_green, my_blue)) +
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()
print(FE_indi_mom_p1)
FE_indi_mom_p1<- ggplot(FE_mom_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(name= "x", values = c("#883c77",my_orange,"#8b2e57", my_yellow, my_green, my_blue)) +
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()
print(FE_indi_mom_p1)
FE_indi_mom_p1<- ggplot(FE_mom_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(name= "x", values = c("#883c77","#8b2e57", my_yellow, my_green, my_blue, my_orange,)) +
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()
FE_indi_mom_p1<- ggplot(FE_mom_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(name= "x", values = c("#883c77","#8b2e57", my_yellow, my_green, my_blue, my_orange)) +
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()
print(FE_indi_mom_p1)
FE_indi_mom_p1<- ggplot(FE_mom_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(name= "x", values = c(my_yellow,"#883c77","#8b2e57",my_green, my_blue, my_orange)) +
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()
print(FE_indi_p1)
print(FE_indi_mom_p1)
FE_indi_mom_p1<- ggplot(FE_mom_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(name= "x", values = c(my_yellow,"#D44292","#8b2e57",my_green, my_blue, my_orange)) +
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()
print(FE_indi_mom_p1)
FE_indi_mom_p1<- ggplot(FE_mom_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(name= "x", values = c(my_yellow,"#F66D7A","#8b2e57",my_green, my_blue, my_orange)) +
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()
print(FE_indi_mom_p1)
FE_indi_dad_p1<- ggplot(FE_dad_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(name= "x", values = c(my_yellow,"#F66D7A","#8b2e57",my_green, my_blue, my_orange)) +
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()
FE_dad_for_sankey <- FE_mother_father_long %>%
make_long("Visit_1_FLS","Visit_1_Dad", "Visit_2_Dad", "Visit_2_FLS")
FE_indi_dad_p1<- ggplot(FE_dad_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(name= "x", values = c(my_yellow,"#F66D7A","#8b2e57",my_green, my_blue, my_orange)) +
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()
print(FE_indi_dad_p1)
figure_x<- FE_indi_mom_p1 + FE_indi_dad_p1
print(figure_x)
FE_indi_mom_p1<- ggplot(FE_mom_for_sankey , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(name= "x", values = c(my_yellow,"#F66D7A","#8b2e57",my_green, my_blue, my_orange)) +
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none")
figure_x<- FE_indi_mom_p1 + FE_indi_dad_p1
print(figure_x)
