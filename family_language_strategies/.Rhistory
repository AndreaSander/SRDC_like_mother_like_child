select(Visit_1_Fre, Visit_1_Eng) %>%
group_by(Visit_1_Fre, Visit_1_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
View(v1_mother_prop)
v1_mother_prop_fre <- mom_long %>%
select(Visit_1_Fre, Visit_1_Eng) %>%
group_by(Visit_1_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
View(v1_mother_prop_fre)
v2_mother_prop_fre <- mom_long %>%
select(Visit_2_Fre, Visit_2_Eng) %>%
group_by(Visit_2_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
View(v2_mother_prop_fre)
v1_mother_prop_eng <- mom_long %>%
select(Visit_1_Fre, Visit_1_Eng) %>%
group_by(Visit_1_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
v2_mother_prop_eng <- mom_long %>%
select(Visit_2_Fre, Visit_2_Eng) %>%
group_by(Visit_2_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
View(v1_mother_prop_eng)
View(v2_mother_prop_eng)
v1_dad_prop_fre <- dad_long %>%
select(Visit_1_Fre, Visit_1_Eng) %>%
group_by(Visit_1_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
View(v1_dad_prop_fre)
v2_dad_prop_fre <- dad_long %>%
select(Visit_2_Fre, Visit_2_Eng) %>%
group_by(Visit_2_Fre) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
View(v2_dad_prop_fre)
v1_dad_prop_eng <- dad_long %>%
select(Visit_1_Fre, Visit_1_Eng) %>%
group_by(Visit_1_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
View(v1_dad_prop_eng)
v2_dad_prop_eng <- dad_long %>%
select(Visit_2_Fre, Visit_2_Eng) %>%
group_by(Visit_2_Eng) %>%
tally(name = "n_first_visit")%>%
mutate(proportion_first_visit = n_first_visit/sum(n_first_visit)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
View(v2_dad_prop_eng)
for_mother_glmer <- mom_long  %>%
mutate(French_change = case_when(Visit_1_Fre == Visit_2_Fre ~ "No change",
TRUE~ "change")) %>%
mutate(English_change = case_when(Visit_1_Eng == Visit_2_Eng ~ "No change",
TRUE~ "change"))
for_father_glmer <- dad_long  %>%
mutate(French_change = case_when(Visit_1_Fre == Visit_2_Fre ~ "No change",
TRUE~ "change")) %>%
mutate(English_change = case_when(Visit_1_Eng == Visit_2_Eng ~ "No change",
TRUE~ "change"))
mother_long_prop<- for_mother_glmer %>%
group_by(French_change, English_change) %>%
tally()
View(mother_long_prop)
mother_long_prop<- for_mother_glmer %>%
group_by(French_change, English_change) %>%
tally() %>%
mutate(proportion_first_visit = n/sum(n)) %>%
mutate(percentage_first_visit= proportion_first_visit*100)
View(mother_long_prop)
26+3+6+1
2600/36
father_long_prop<- for_father_glmer %>%
group_by(French_change, English_change) %>%
tally()
100-72
99-72
100/36
View(father_long_prop)
25+6+3+2
2500/36
900/36
View(dad_long_french)
dad_long_french %>%
group_by(Visit_1_Fre, Visit_2_Fre) %>%
tally()
mom_long_french %>%
ungroup() %>%
group_by(Visit_1_Fre, Visit_2_Fre) %>%
tally()
300/36
3+1+3
300/7
mother_french_change_model<- glmer(as.factor(French_change) ~ scale(length_between_visits) +(1|anon_baby_id), data = for_mother_glmer, family="binomial")
summary(mother_french_change_model)
mother_english_change_model<- glmer(as.factor(English_change) ~ scale(length_between_visits) +(1|anon_baby_id), data = for_mother_glmer, family="binomial")
summary(mother_english_change_model)
father_french_change_model<- glmer(as.factor(French_change) ~ scale(length_between_visits) +(1|anon_baby_id), data = for_father_glmer, family="binomial")
summary(father_french_change_model)
father_english_change_model<- glmer(as.factor(English_change) ~ scale(length_between_visits) +(1|anon_baby_id), data = for_father_glmer, family="binomial")
father_english_change_model<- glmer(as.factor(English_change) ~ scale(length_between_visits) +(1|anon_baby_id), data = for_father_glmer, family="binomial")
summary(father_english_change_model)
###### FOR THE FRENCH- HERITAGE SAMPLE ###########
#Calculating how many families use each strategy and its corresponding %
her_prop_strategy<- FEH %>%
filter(!bilingual_type == "fre-eng")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Reordering levels so legend in the graph is in order.
her_prop_strategy$strategy<- factor(her_prop_strategy$strategy, levels= c("one-parent-bilingual","both-parents-bilingual", "one-parent-one-lang", "single-parent", "one-language-at-home"))
her_prop_strategy<- her_prop_strategy %>%
arrange(desc(prop))
#Waffle plot
her_V1<- setNames(her_prop_strategy$n, c( "one-parent-bilingual","both-parents-bilingual","one-parent-one-lanaguage",  "single-parent", "one-language-at-home"))
figure_9 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_purple, my_green), keep = T, title = "% Family Strategies for the French/English-heritage sample", size=0.6)
print(figure_9)
figure_5 <- waffle(parts = her_V1, rows=6, colors = c(my_yellow, my_orange, my_blue, my_purple, my_green), keep = T, size=0.6)
print(figure_5)
print(figure_5)
View(her_prop_strategy)
24+18+12+4+2
###### Careviver models
her_parents_for_lms <- her_for_lms %>%
filter(type_of_family == "mother-father family") %>%
#MOTHER MODELS
her_lm_mom_eng<- lm(eng_exp ~ caregiver_1_english_use, data=her_for_lms)
her_for_lms <- FEH %>%
select(gender, anon_baby_id, age, exp_l2, min_exp,fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100)
###### Careviver models
her_parents_for_lms <- her_for_lms %>%
filter(type_of_family == "mother-father family") %>%
#MOTHER MODELS
her_lm_mom_eng<- lm(eng_exp ~ caregiver_1_english_use, data=her_for_lms)
her_for_lms <- FEH %>%
select(gender, anon_baby_id, age, exp_l2, min_exp,fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100)
###### Careviver models
her_parents_for_lms <- her_for_lms %>%
filter(type_of_family == "mother-father family") %>%
#MOTHER MODELS
her_lm_mom_eng<- lm(eng_exp ~ caregiver_1_english_use, data=her_for_lms)
###### Careviver models
her_parents_for_lms <- her_for_lms %>%
filter(type_of_family == "mother-father family")
her_for_lms <- FEH %>%
select(gender, anon_baby_id, age, exp_l2, min_exp,fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
filter(!bilingual_type == "fre-eng")%>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100)
her_for_lms <- FEH %>%
filter(!bilingual_type == "fre-eng")%>%
select(gender, anon_baby_id, age, exp_l2, min_exp,fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100)
###### Careviver models
her_parents_for_lms <- her_for_lms %>%
filter(type_of_family == "mother-father family")
### Looking at the individual parent strategies in each family language strategy
##Both parents bilingual
her_both_parent_b<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(!bilingual_type == "fre-eng")%>%
filter(strategy=="both-parents-bilingual") %>%
mutate(caregiver1_French =  case_when (l1== "French"~care1_l1,
l2== "French"~care1_l2)) %>%
mutate(caregiver1_English =  case_when (l1== "English"~care1_l1,
l2== "English"~care1_l2)) %>%
mutate(caregiver1_heritage =  case_when (l1== "Heritage"~care1_l1,
l2== "Heritage"~care1_l2)) %>%
mutate(caregiver2_French =  case_when (l1== "French"~care2_l1,
l2== "French"~care2_l2)) %>%
mutate(caregiver2_English =  case_when (l1== "English"~care2_l1,
l2== "English"~care2_l2)) %>%
mutate(caregiver2_heritage =  case_when (l1== "Heritage"~care2_l1,
l2== "Heritage"~care2_l2)) %>%
mutate(mom_use_strategy = case_when( caregiver1_heritage == "regularly" & caregiver1_heritage == "regularly" ~ "both regularly",
caregiver1_French == "regularly" & caregiver1_heritage == "regularly" ~ "both regularly",
caregiver1_English == "regularly" & caregiver1_heritage == "regularly" ~ "both regularly",
caregiver1_French == "regularly" & caregiver1_heritage == "sometimes" ~ "french-reg-heritage-some",
caregiver1_French == "sometimes" & caregiver1_heritage == "regularly" ~ "french-some-heritage-reg",
caregiver1_English == "regularly" & caregiver1_heritage == "sometimes" ~ "english-reg-heritage-some",
caregiver1_English == "sometimes" & caregiver1_heritage == "regularly" ~ "english-some-heritage-reg",
))%>%
mutate(dad_use_strategy = case_when( caregiver2_heritage == "regularly" & caregiver2_heritage == "regularly" ~ "both regularly",
caregiver2_French == "regularly" & caregiver2_heritage == "regularly" ~ "both regularly",
caregiver2_English == "regularly" & caregiver2_heritage == "regularly" ~ "both regularly",
caregiver2_French == "regularly" & caregiver2_heritage == "sometimes" ~ "french-reg-heritage-some",
caregiver2_French == "sometimes" & caregiver2_heritage == "regularly" ~ "french-some-heritage-reg",
caregiver2_English == "regularly" & caregiver2_heritage == "sometimes" ~ "english-reg-heritage-some",
caregiver2_English == "sometimes" & caregiver2_heritage == "regularly" ~ "english-some-heritage-reg",
TRUE~"both-sometimes"))
# what are the percentages ?
her_mom_biling_strat<- her_both_parent_b %>%
group_by(mom_use_strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_dad_biling_strat<- her_both_parent_b %>%
group_by(dad_use_strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
## One-parent-bilingual
#Which parent is the bilingual parent?
her_one_parent_b<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(!bilingual_type == "fre-eng") %>%
filter(strategy=="one-parent-bilingual") %>%
mutate(caregiver_biling = case_when(care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("regularly", "sometimes") ~ "caregiver1",
TRUE ~ "caregiver2"))
#What are the percentages
her_caregiver_bi_prop <- her_one_parent_b %>%
group_by(caregiver_biling) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 67% mothers are the bilingual caregiver
#Which languages are spoken by the monolingual parent?
her_monoling_careg_lang<- her_one_parent_b %>%
mutate(monolingual_care_lang = case_when(caregiver_biling == "caregiver1" & care2_l1 %in% c("regularly", "sometimes") ~ l1,
caregiver_biling == "caregiver1" & care2_l2 %in% c("regularly", "sometimes") ~ l2,
caregiver_biling == "caregiver2" & care1_l1 %in% c("regularly", "sometimes") ~l1,
caregiver_biling == "caregiver2" & care1_l2 %in% c("regularly", "sometimes") ~l2)) %>%
group_by(monolingual_care_lang) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 69% on the parents who are monolingual speak English
##Also looking at OPOL strategy
her_opol<- FEH %>%
filter(type_of_family == "mother-father family") %>%
filter(!bilingual_type == "fre-eng") %>%
filter(strategy=="one-parent-one-lang") %>%
mutate(parents_flexible_use = case_when( care1_l1 == "sometimes"| care1_l2 == "sometimes"|care2_l1 == "sometimes"|care2_l2 == "sometimes" ~ "flex_use",
TRUE ~ "strict_use"
))
her_flex_opol_count<- her_opol %>%
group_by(parents_flexible_use) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_opol_flex<- her_opol %>%
filter(parents_flexible_use == "flex_use") %>%
mutate(flex_parent = case_when(care1_l1 == "sometimes" | care1_l2  == "sometimes" ~ "mom",
TRUE~ "dad"))
her_opol_strict<- her_opol %>%
filter(!parents_flexible_use == "flex_use")
View(her_one_parent_b)
View(her_monoling_careg_lang)
#What are the percentages
her_caregiver_bi_prop <- her_one_parent_b %>%
group_by(caregiver_biling) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 67% mothers are the bilingual caregiver
print(her_caregiver_bi_prop)
View(her_flex_opol_count)
opol_count<- her_opol %>%
group_by(parents_lang_use) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
opol_count<- her_opol %>%
group_by(parents_flexible_use) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
View(opol_count)
her_opol_flex<- her_opol %>%
filter(parents_flexible_use == "flex_use") %>%
mutate(flex_parent = case_when(care1_l1 == "sometimes" | care1_l2  == "sometimes" ~ "mom",
TRUE~ "dad"))
her_opol_count<- her_opol %>%
group_by(flex_parent) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
View(her_opol_flex)
her_opol_parent_count<- her_opol_flex %>%
group_by(flex_parent) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
View(her_opol_parent_count)
View(her_mom_biling_strat)
View(her_dad_biling_strat)
her_for_lms <- FEH %>%
filter(!bilingual_type == "fre-eng")%>%
select(gender, anon_baby_id, age, exp_l2, min_exp,fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100)
#STRATEGY LINEAR MODELS
her_lm_strat_eng<- lm(eng_exp ~ strategy, data=her_for_lms)
her_lm_strat_fre <- lm(fre_exp ~ strategy, data=her_for_lms)
her_lm_strat_her <- lm(min_exp ~ strategy, data=her_for_lms)
#Summary of STRATEGY LINEAR models
summary(lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
#Summary of STRATEGY LINEAR models
summary(her_lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
View(FEH)
her_for_lms <- FEH %>%
filter(!bilingual_type == "fre-eng")%>%
select(gender, anon_baby_id, age, exp_l2, min_exp,fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy %in% c("OneLanguageAtHome", "single-parent")) %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100)
her_lm_strat_eng<- lm(eng_exp ~ strategy, data=her_for_lms)
her_lm_strat_fre <- lm(fre_exp ~ strategy, data=her_for_lms)
her_lm_strat_her <- lm(min_exp ~ strategy, data=her_for_lms)
#Summary of STRATEGY LINEAR models
summary(her_lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
her_lm_strat_fre <- lm(fre_exp ~ strategy, data=her_for_lms)
summary(her_lm_strat_fre) #Same as above, one parent bilingual is significant and not for beta.
her_for_lms <- FEH %>%
filter(!bilingual_type == "fre-eng")%>%
select(gender, anon_baby_id, age, exp_l2, min_exp,fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy %in% c("one-language-at-home", "single-parent")) %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100)
#STRATEGY LINEAR MODELS
her_lm_strat_eng<- lm(eng_exp ~ strategy, data=her_for_lms)
her_lm_strat_fre <- lm(fre_exp ~ strategy, data=her_for_lms)
her_lm_strat_her <- lm(min_exp ~ strategy, data=her_for_lms)
summary(her_lm_strat_fre) #Same as above, one parent bilingual is significant and not for beta.
her_lm_strat_her <- lm(min_exp ~ strategy, data=her_for_lms)
summary(her_lm_strat_her)
her_for_lms <- FEH %>%
filter(!bilingual_type == "fre-eng")%>%
select(gender, anon_baby_id, age, exp_l2, min_exp,fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2, type_of_family) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2))  %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_heritage_use = case_when(l1=="Heritage"~care1_l1,
l2=="Heritage"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_heritage_use = case_when(l1=="Heritage"~ care2_l1,
l2=="Heritage"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy %in% c("one-language-at-home", "single-parent")) %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, min_exp = min_exp/100)
her_lm_strat_her <- lm(min_exp ~ strategy, data=her_for_lms)
summary(her_lm_strat_her)
###### Careviver models
her_parents_for_lms <- her_for_lms %>%
filter(type_of_family == "mother-father family")
her_lm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=her_for_lms)
her_lm_parents_aditive_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use, data=her_for_lms)
her_lm_parents_aditive_her<- lm(min_exp ~ caregiver_2_heritage_use + caregiver_1_heritage_use, data=her_for_lms
#Summary of Mother and Father models
summary(her_lm_parents_aditive_eng)
#Summary of Mother and Father models
summary(her_lm_parents_aditive_eng)
summary(her_lm_parents_aditive_fre)
summary(her_lm_parents_aditive_her)
her_lm_parents_aditive_her<- lm(min_exp ~ caregiver_2_heritage_use + caregiver_1_heritage_use, data=her_for_lms)
summary(her_lm_parents_aditive_her)
