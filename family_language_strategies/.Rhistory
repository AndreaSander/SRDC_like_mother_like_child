caregiver_1_english_use == "sometimes"~ 2,
caregiver_1_english_use == "never"~1))
for_beta <- FE_for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, strategy, care1_l1, care1_l2, l1, l2) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2))%>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use == "regularly" ~3,
caregiver_1_french_use == "sometimes"~ 2,
caregiver_1_french_use == "never"~1))%>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use == "regularly" ~3,
caregiver_1_english_use == "sometimes"~ 2,
caregiver_1_english_use == "never"~1)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2))
# Create the dataframes to run the models for each language. Monolinguals are excluded, as are the rows
# where exposure for a given language equals 100. Since exposure is on a 0-100 scale and the beta distributions
# works with values ranging from 0-1, exposure is divided by 100.
for_beta <- FE_for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2))%>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use == "regularly" ~3,
caregiver_1_french_use == "sometimes"~ 2,
caregiver_1_french_use == "never"~1))%>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use == "regularly" ~3,
caregiver_1_english_use == "sometimes"~ 2,
caregiver_1_english_use == "never"~1)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_french_use = case_when(caregiver_2_french_use == "regularly" ~3,
caregiver_2_french_use == "sometimes"~ 2,
caregiver_2_french_use == "never"~1))%>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(caregiver_2_english_use == "regularly" ~3,
caregiver_2_english_use == "sometimes"~ 2,
caregiver_2_english_use == "never"~1))%>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome")
for_beta_blc <- FE_for_blc_anova %>%
select(gender, anon_baby_id, age, exp_l2, strategy, care1_l1, care2_l1, care1_l2, care2_l2) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome")
# Dataframe for english exposure
for_beta_eng <- for_beta %>%
select(age, eng_exp, strategy, anon_baby_id, caregiver_1_french_use, caregiver_1_english_use) %>%
filter(eng_exp != "NA") %>%
mutate(eng_exp = eng_exp/100,
strategy = as.factor(strategy))
# Dataframe for french exposure
for_beta_fre <- for_beta %>%
select(age, fre_exp, strategy, anon_baby_id, caregiver_1_french_use, caregiver_1_english_use) %>%
filter(fre_exp != "NA") %>%
mutate(fre_exp = fre_exp/100,
strategy = as.factor(strategy))
#Dataframe for balance
for_balance<- for_beta_blc%>%
select(age, exp_l2, strategy, anon_baby_id) %>%
filter(exp_l2 != "NA") %>%
mutate(exp_l2 = exp_l2/100,
strategy = as.factor(strategy))
#Constructing the different beta models
#AGE MODELS
beta_eng<- glmmTMB(eng_exp ~ strategy * age, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * age)
beta_fre<- glmmTMB(fre_exp ~ strategy * age, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * age)
beta_blc<- glmmTMB(exp_l2 ~ strategy * age, data=for_balance, family= beta_family(link="logit"), dispformula = ~ strategy * age)
#Summary of AGE models
summary(beta_eng)
summary(beta_fre)
summary(beta_blc)
#MOTHER MODELS
mom_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_1_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_1_english_use)
mom_beta_fre<- glmmTMB(fre_exp ~ strategy * caregiver_1_french_use, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_1_french_use)
#Summary of MOTHER models
summary(mom_beta_eng)
summary(mom_beta_fre)
#FATHER MODELS
dad_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_2_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_english_use)
# Dataframe for english exposure
for_beta_eng <- for_beta %>%
select(age, eng_exp, strategy, anon_baby_id, caregiver_1_french_use, caregiver_1_english_use, caregiver_2_french_use,caregiver_2_english_use) %>%
filter(eng_exp != "NA") %>%
mutate(eng_exp = eng_exp/100,
strategy = as.factor(strategy))
# Dataframe for french exposure
for_beta_fre <- for_beta %>%
select(age, fre_exp, strategy, anon_baby_id, caregiver_1_french_use, caregiver_1_english_use, caregiver_2_french_use, caregiver_2_english_use) %>%
filter(fre_exp != "NA") %>%
mutate(fre_exp = fre_exp/100,
strategy = as.factor(strategy))
#FATHER MODELS
dad_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_2_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_english_use)
dad_beta_fre<- glmmTMB(fre_exp ~ strategy * caregiver_2_french_use, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_french_use)
#Summary of MOTHER models
summary(dad_beta_eng)
summary(dad_beta_fre)
#MOTHER AND FATHER MODELS
parents_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_2_english_use, strategy* caregiver_1_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_english_use, strategy * caregiver_1_english_use)
#MOTHER AND FATHER MODELS
parents_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_2_english_use, strategy * caregiver_1_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_english_use, strategy * caregiver_1_english_use)
#MOTHER AND FATHER MODELS
parents_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_2_english_use + strategy * caregiver_1_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_english_use + strategy * caregiver_1_english_use)
parents_beta_fre<- glmmTMB(fre_exp ~ strategy * caregiver_2_french_use + strategy*caregiver_1_french_use, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_french_use + strategy*caregiver_1_french_use)
#Summary of MOTHER models
summary(parents_beta_eng)
summary(parents_beta_fre)
figure_mother_french <-ggplot(for_beta, aes( x=caregiver_1_french_use , y=fre_exp, color=strategy)) +
geom_boxplot()
print(figure_mother_french)
figure_mother_french <-ggplot(for_beta, aes( x=caregiver_1_french_use , y=fre_exp, color=strategy)) +
geom_smooth()
print(figure_mother_french)
figure_mother_french <-ggplot(for_beta, aes( x= as.factor(caregiver_1_french_use) , y=fre_exp, fill=strategy)) +
geom_boxplot()
print(figure_mother_french)
figure_mother_french <-ggplot(for_beta, aes( x= as.factor(caregiver_1_french_use) , y=fre_exp, fill=strategy)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of French by strategy in amount of french exposure")
print(figure_mother_french)
figure_mother_french <-ggplot(for_beta, aes( x= as.factor(caregiver_1_french_use) , y=fre_exp, fill=strategy)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of French by strategy in amount of French exposure")
figure_mother_english <-ggplot(for_beta, aes( x= as.factor(caregiver_1_english_use) , y=eng_exp, fill=strategy)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of English by strategy in amount of English exposure")
print(figure_mother_english)
figure_mother_english <-ggplot(for_beta, aes( x= as.factor(caregiver_1_english_use) , y=eng_exp, fill=strategy, na.rm=T)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of English by strategy in amount of English exposure")
print(figure_mother_english)
figure_mother_english <-ggplot(for_beta, aes( x= as.factor(caregiver_1_english_use) , y=eng_exp, fill=strategy), na.rm=T) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of English by strategy in amount of English exposure")
print(figure_mother_english)
figure_mother_english <-ggplot(for_beta, aes( x= as.factor(caregiver_1_english_use) , y=eng_exp, fill=strategy)) +
geom_boxplot(na.rm=T) +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of English by strategy in amount of English exposure")
print(figure_mother_english)
print(figure_mother_english)
print(figure_mother_french)
figure_father_french <-ggplot(for_beta, aes( x= as.factor(caregiver_2_french_use) , y=fre_exp, fill=strategy)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of fathers' use of French by strategy in amount of French exposure")
print(figure_father_french)
print(figure_father_french)
figure_father_english <-ggplot(for_beta, aes( x= as.factor(caregiver_2_english_use) , y=eng_exp, fill=strategy)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of fathers' use of English by strategy in amount of English exposure")
print(figure_father_english)
#Summary of MOTHER models
summary(parents_beta_eng)
summary(parents_beta_eng)
summary(parents_beta_fre)
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 100, digits = 4)
library(lubridate)
library(sparkline)
library(webshot)
library(htmlwidgets)
library(formattable)
library(here)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
library(waffle)
library(ggsankey)
library(dplyr)
library(tidyverse)
library(patchwork)
library(ggpubr)
library(broom)
library(janitor)
library(glmmTMB)
library(DHARMa)
library(betareg)
library(emmeans)
library(ggeffects)
library(mvtnorm)
library(boot)
library(bbmle)
library(performance)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
load(here("anonymized_data/longitudinal_data.Rda"))
#Saving my palette to use in visualizations
my_yellow<-"#FFC107"
my_orange<- "#D95F02"
my_blue<- "#1F78B4"
my_green<- "#33a02c"
my_purple<- "#683f6d"
#### CONSTRUCTING AND DESCRIBING ALL RELEVANT DATA SETS ####
#Trilingul exclusions count
total_excluded_triling<- final_data_no_exc %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp<=90) %>%
distinct(unique_id)%>%
tally()
#Monolingual exclusions
total_monoling_excluded<- final_data %>%
filter(exp_l1 >95) %>%
filter(exp_l2 <5) %>%
distinct(unique_id) %>%
tally()
#after third language exclusions exclusions
n <- final_data %>%
distinct(unique_id) %>%
tally()
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1) #439 data from first visit only
#n when only taking first visit
n_keep_first_visit<-first_visit_only %>%
distinct(unique_id)%>%
tally()
age_min <- round(min(first_visit_only$age, na.rm = T), 2)
age_max<- round(max(first_visit_only$age, na.rm = T), 2)
age_mean<- round(mean(first_visit_only$age, na.rm = T), 2)
age_sd<- round(sd(first_visit_only$age, na.rm = T), 2)
female<- first_visit_only %>%
filter(gender=="female")%>%
distinct(unique_id)%>%
tally()
twice_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn==2)%>%
distinct(unique_id)%>%
tally()
three_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn==3)%>%
distinct(unique_id)%>%
tally()
four_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn>3)%>%
distinct(unique_id)%>%
tally()
#French-English-Heritage bilingual percentages
FEH <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
FEH_perc<- FEH %>%
group_by(bilingual_type) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#By bilingual type percentages
fre_eng_perc <- FEH %>%
filter(bilingual_type== "fre-eng")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_her_perc <- FEH %>%
filter(bilingual_type=="fre-her")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_eng_perc <- FEH %>%
filter(bilingual_type=="eng-her") %>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#l1 amount of exposure range
min_exp_range <- final_data %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data %>%
select(exp_l1) %>%
max()
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id, leq_date)
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15)
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(nn==2) %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
select(anon_baby_id, first_visit_date, second_visit_date) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
distinct() %>%
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) ##Filter visits that were very close together.
##!! There is a mistake in one date which results in a negative date. Fix.
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
View(FEH)
FE_mothers <- FEH %>%
select(c(unique_id, l1, exp_l1, l2, exp_l2, care1_l1, care1_l2, bilingual_type))
View(FE_mothers)
FE_mothers <- FEH %>%
select(c(unique_id, l1, exp_l1, l2, exp_l2, care1_l1, care1_l2, bilingual_type)) %>%
filter(bilingual_type == "fre-eng")
View(FEH)
FE_mothers <- FEH %>%
select(c(unique_id, l1, exp_l1, l2, exp_l2, care1_l1, care1_l2, bilingual_type, strategy)) %>%
filter(bilingual_type == "fre-eng")
#When French is L1
F_l1 <- FEH %>%
select(c(unique_id, l1, exp_l1, l2, exp_l2, care1_l1, care1_l2, care2_l1, care2_l2, strategy)) %>%
filter(l1=="French")
#Plotting mothers distribution of French use
ggplot(data = F_l1, aes(x=care1_l1)) +
geom_histogram()
View(F_l1)
#Plotting mothers distribution of French use
ggplot(data = F_l1, aes(x=care1_l1)) +
geom_bar()
#Plotting mothers distribution of French use as L1
ggplot(data = F_l1, aes(x=care1_l1, fill= care1_l1)) +
geom_bar()
#Plotting mothers distribution of French use as L1
ggplot(data = F_l1, aes(x=care1_l1, fill= care1_l1)) +
geom_bar() +
facet_grid(cols = strategy)
#Plotting mothers distribution of French use as L1
ggplot(data = F_l1, aes(x=care1_l1, fill= care1_l1)) +
geom_bar() +
facet_grid(cols = "strategy")
#Plotting mothers distribution of French use as L1
ggplot(data = F_l1, aes(x=care1_l1, fill= care1_l1)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L1
ggplot(data = F_l1, aes(x=care1_l1, fill= care1_l1)) +
geom_bar() +
facet_grid(rows = vars(strategy))
#Plotting mothers distribution of French use as L1
ggplot(data = F_l1, aes(x=care1_l1, fill= care1_l1)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#When French is L1
F_l1 <- FEH %>%
select(c(unique_id, l1, exp_l1, l2, exp_l2, care1_l1, care1_l2, care2_l1, care2_l2, strategy)) %>%
filter(l1=="French") %>%
filter(!strategy %in% c("single-parent", "one-language-at-home"))
#Plotting mothers distribution of French use as L1
ggplot(data = F_l1, aes(x=care1_l1, fill= care1_l1)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
ggplot(data = F_l1, aes(x=care1_l2, fill= care1_l1)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
ggplot(data = F_l1, aes(x=care1_l2, fill= care1_l2)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
ggplot(data = F_l1, aes(x=care1_l2, fill= care1_l2), na.rm=T) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
ggplot(data = F_l1, aes(x=care1_l2, fill= care1_l2, na.rm=T)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
ggplot(data = F_l1, aes(x=care1_l2, fill= care1_l2)) +
geom_bar(na.rm = T) +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
ggplot(data = F_l1, aes(x=!is.na(care1_l2), fill= care1_l2)) +
geom_bar(na.rm = T) +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
ggplot(data = F_l1, !is.na(care1_l2), aes(x=care1_l2, fill= care1_l2)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
ggplot(data = subset(F_l1, !is.na(care1_l2)), aes(x=care1_l2, fill= care1_l2)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
ggplot(data = subset(F_l1, !is.na(care1_l2)), aes(x=care1_l2, fill= care1_l2)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
F_l1 %>%
filter(!care1_l2 == "NA")%>%
ggplot(aes(x=care1_l2, fill= care1_l2)) +
geom_bar() +
facet_grid(cols = vars(strategy))
ggplot(data = F_l1, aes(x=care1_l1, fill= care1_l1)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
F_l1 %>%
filter(!care1_l2 == "NA")%>%
ggplot(aes(x=care1_l2, fill= care1_l2)) +
geom_bar() +
facet_grid(cols = vars(strategy))
ggplot(data = F_l1, aes(x=care2_l1, fill= care2_l1)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
F_l1 %>%
filter(!care2_l2 == "NA")%>%
ggplot(aes(x=care2_l2, fill= care2_l2)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#FRENCH DATA
F_l1 <- FEH %>%
select(c(unique_id, l1, exp_l1, l2, exp_l2, care1_l1, care1_l2, care2_l1, care2_l2, strategy)) %>%
filter(l1|l2 == "French") %>%
filter(!strategy %in% c("single-parent", "one-language-at-home"))
View(FEH)
#FRENCH DATA
French <- FEH %>%
select(c(unique_id, l1, exp_l1, l2, exp_l2, care1_l1, care1_l2, care2_l1, care2_l2, strategy)) %>%
filter(l1== "French"| l2=="French") %>%
filter(!strategy %in% c("single-parent", "one-language-at-home"))
View(French)
#Plotting mothers distribution of French use as L1
ggplot(data = F_l1, aes(x=care1_l1, fill= care1_l1)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
F_l2 %>%
filter(!care1_l2 == "NA")%>%
ggplot(aes(x=care1_l2, fill= care1_l2)) +
geom_bar() +
facet_grid(cols = vars(strategy))
F_l2 <- FEH %>%
select(c(unique_id, l1, exp_l1, l2, exp_l2, care1_l1, care1_l2, care2_l1, care2_l2, strategy)) %>%
filter(l2=="French") %>%
filter(!strategy %in% c("single-parent", "one-language-at-home"))
#Plotting mothers distribution of French use as L1
ggplot(data = F_l1, aes(x=care1_l1, fill= care1_l1)) +
geom_bar() +
facet_grid(cols = vars(strategy))
#Plotting mothers distribution of French use as L2
F_l2 %>%
filter(!care1_l2 == "NA")%>%
ggplot(aes(x=care1_l2, fill= care1_l2)) +
geom_bar() +
facet_grid(cols = vars(strategy))
########################## HERITAGE DATA ##################
H_l1 <- FEH %>%
select(c(unique_id, l1, exp_l1, l2, exp_l2, care1_l1, care1_l2, care2_l1, care2_l2, strategy, bilingual_type)) %>%
filter(!bilingual_type == "fre-eng") %>%
filter(!l1 %in% c("French", "English"))
View(H_l1)
