select(-care1_l1, -care1_l2, -l1, -l2) %>%
pivot_wider(names_from = visit, values_from = c(Fre, Eng)) %>%
rename_at(vars(starts_with("Fre")), ~ paste0(str_remove(., "Fre_"), "_Fre")) %>%
rename_at(vars(starts_with("Eng")), ~  paste0(str_remove(., "Eng_"), "_Eng")) %>%
drop_na()
mom_long_french<- mom_long %>%
select(anon_baby_id, length_between_visits, Visit_1_Fre, Visit_2_Fre)
mom_long_english<- mom_long %>%
select(anon_baby_id, length_between_visits, Visit_1_Eng, Visit_2_Eng)
mom_long_fre_s <- mom_long_french %>%
make_long("Visit_1_Fre","Visit_2_Fre")
#Changeing the levels so that the graph is in order
mom_long_fre_s$node <- factor(mom_long_fre_s$node, levels= c("never","sometimes", "regularly"))
mom_long_fre_s$next_node <- factor(mom_long_fre_s$next_node, levels= c("never","sometimes","regularly"))
mom_long_eng_s <- mom_long_english %>%
make_long("Visit_1_Eng", "Visit_2_Eng")
mom_long_eng_s$node <- factor(mom_long_eng_s$node, levels= c("never","sometimes", "regularly"))
mom_long_eng_s$next_node <- factor(mom_long_eng_s$next_node, levels= c("never","sometimes","regularly"))
figure_3_a <- ggplot(mom_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
geom_sankey_label(size=5, color="black", fill="white")+
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw()+
theme(legend.position = "none") +
labs(title= "A. Mothers' change of language use French")
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none")+
labs(title= "B. Mothers' change of language use English")
figure_3_a <- ggplot(mom_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
geom_sankey_label(size=5, color="black", fill="white")+
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw()+
theme(legend.position = "none") +
labs(title= "A. Mothers' change of language use French")
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=5, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none")+
labs(title= "B. Mothers' change of language use English")
figure_3<- figure_3_a + figure_3_b
print(figure_3)
ggsave(file="Figure_3.png", width=25, height=7, dpi=300)
figure_3_a <- ggplot(mom_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
geom_sankey_label(size=10, color="black", fill="white")+
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw()+
theme(axis.text.x = element_text(size=35),legend.position = "none") +
labs(title= "A. Mothers' change of language use French")
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=35), legend.position = "none")+
labs(title= "B. Mothers' change of language use English")
figure_3<- figure_3_a + figure_3_b
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
figure_3_a <- ggplot(mom_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
geom_sankey_label(size=10, color="black", fill="white")+
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw()+
theme(axis.text.x = element_text(size=35),legend.position = "none", axis.title = element_text(size=20)) +
labs(title= "A. Mothers' change of language use French")
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=35), legend.position = "none", axis.title = element_text(size=20))+
labs(title= "B. Mothers' change of language use English")
figure_3<- figure_3_a + figure_3_b
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
figure_3_a <- ggplot(mom_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
geom_sankey_label(size=10, color="black", fill="white")+
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw()+
theme(axis.text.x = element_text(size=35),legend.position = "none", plot.title = element_text(size=20)) +
labs(title= "A. Mothers' change of language use French")
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=35), legend.position = "none", plot.title = element_text(size=20))+
labs(title= "B. Mothers' change of language use English")
figure_3<- figure_3_a + figure_3_b
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
figure_3_a <- ggplot(mom_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
geom_sankey_label(size=10, color="black", fill="white")+
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
theme_bw()+
theme(axis.text.x = element_text(size=30),legend.position = "none", plot.title = element_text(size=35)) +
labs(title= "A. Mothers' change of language use French")
figure_3_b <- ggplot(mom_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=30), legend.position = "none", plot.title = element_text(size=35))+
labs(title= "B. Mothers' change of language use English")
figure_3<- figure_3_a + figure_3_b
ggsave(file="Figure_3.png", width=25, height=12, dpi=300)
dad_long<- FE_long_analyses %>% #this results in a dataframe that has one row per kid who had 2 FR-EN visits.
filter(!strategy=="single-parent") %>%
filter(visit %in% c(1,2)) %>%
select(anon_baby_id, l1, l2, care2_l1, care2_l2, visit, length_between_visits) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~care2_l1,
l2=="French"~care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2),
visit = paste0("Visit_", visit)) %>%
rename("Fre" = caregiver_2_french_use,
"Eng" = caregiver_2_english_use) %>%
select(-care2_l1, -care2_l2, -l1, -l2) %>%
pivot_wider(names_from = visit, values_from = c(Fre, Eng)) %>%
rename_at(vars(starts_with("Fre")), ~ paste0(str_remove(., "Fre_"), "_Fre")) %>%
rename_at(vars(starts_with("Eng")), ~  paste0(str_remove(., "Eng_"), "_Eng")) %>%
drop_na()
dad_long_french<- dad_long %>%
select(anon_baby_id, length_between_visits, Visit_1_Fre, Visit_2_Fre) %>%
mutate(Visit_1_Fre = case_when(Visit_1_Fre == "NA"~"never",
TRUE~ Visit_1_Fre))
dad_long_english<- dad_long %>%
select(anon_baby_id, length_between_visits, Visit_1_Eng, Visit_2_Eng)
dad_long_fre_s <- dad_long_french %>%
make_long("Visit_1_Fre","Visit_2_Fre")
dad_long_fre_s$node <- factor(dad_long_fre_s$node, levels= c("never","sometimes", "regularly"))
dad_long_fre_s$next_node <- factor(dad_long_fre_s$next_node, levels= c("never","sometimes","regularly"))
dad_long_eng_s <- dad_long_english %>%
make_long("Visit_1_Eng", "Visit_2_Eng")
dad_long_eng_s$node <- factor(dad_long_eng_s$node, levels= c("never","sometimes", "regularly"))
dad_long_eng_s$next_node <- factor(dad_long_eng_s$next_node, levels= c("never","sometimes","regularly"))
figure_6_a <- ggplot(dad_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none")+
labs(title= "A. Fathers' change of language use French")
figure_4_a <- ggplot(dad_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=30), legend.position = "none", plot.title = element_text(size=35))+
labs(title= "A. Fathers' change of language use French")
figure_4_a <- ggplot(dad_long_fre_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values = c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=30), legend.position = "none", plot.title = element_text(size=35))+
labs(title= "A. Fathers' change of language use French")
figure_4_b <- ggplot(dad_long_eng_s , aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey(flow.color = "black") +
scale_fill_manual(values =c("#dac291","#41ae76", "#75638b"))+
geom_sankey_label(size=10, color="black", fill="white")+
theme_bw()+
theme(axis.text.x = element_text(size=30), legend.position = "none", plot.title = element_text(size=35))+
labs(title= "B. Fathers' change of language use English")
figure_4<- figure_4_a + figure_4_b
ggsave(file="Figure_4.png", width=25, height=12, dpi=300)
for_lms <- FE_for_blc_anova %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100) %>%
drop_na()
FE_for_lms<- FEH %>%
filter(bilingual_type == "fre-eng") %>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
for_lms <- FE_for_lms %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100) %>%
drop_na()
for_lms$caregiver_1_french_use <- factor(for_lms$caregiver_1_french_use, levels= c("regularly","sometimes", "never"))
for_lms$caregiver_1_english_use <- factor(for_lms$caregiver_1_english_use, levels= c("regularly","sometimes", "never"))
for_lms$caregiver_2_french_use <- factor(for_lms$caregiver_2_french_use, levels= c("regularly","sometimes", "never"))
for_lms$caregiver_2_english_use <- factor(for_lms$caregiver_2_english_use, levels= c("regularly","sometimes", "never"))
#STRATEGY LINEAR MODELS
lm_strat_eng<- lm(eng_exp ~ strategy, data=for_lms)
#Summary of STRATEGY LINEAR models
summary(lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
#MOTHER AND FATHER MODELS
lm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=for_lms)
#Summary of Mother and Father models
summary(lm_parents_aditive_eng) #same pattern of results
#STRATEGY LINEAR MODELS
lm_strat_eng<- lm(eng_exp ~ strategy, data=for_lms)
#Summary of STRATEGY LINEAR models
summary(lm_strat_eng) #Slightly different, one parent bilingual is just a tad significant here and not for beta.
summary(lm_strat_fre) #Same as above, one parent bilingual is significant and not for beta.
lm_strat_fre <- lm(fre_exp ~ strategy, data=for_lms)
summary(lm_strat_fre) #Same as above, one parent bilingual is significant and not for beta.
#Summary of Mother and Father models
summary(lm_parents_aditive_eng) #same pattern of results
library(lubridate)
library(sparkline)
library(webshot)
library(htmlwidgets)
library(formattable)
library(here)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
library(waffle)
library(ggsankey)
library(dplyr)
library(tidyverse)
library(patchwork)
library(ggpubr)
library(broom)
library(janitor)
library(glmmTMB)
library(DHARMa)
library(betareg)
library(emmeans)
library(ggiraphExtra)
library(ggeffects)
library(mvtnorm)
library(boot)
library(bbmle)
library(performance)
library(see)
library(writexl)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
load(here("anonymized_data/longitudinal_data.Rda"))
#Saving my palette to use in visualizations
my_yellow<-"#FFC107"
my_orange<- "#D95F02"
my_blue<- "#1F78B4"
my_green<- "#33a02c"
my_purple<- "#683f6d"
FE_for_lms<- FEH %>%
filter(bilingual_type == "fre-eng") %>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
#### CONSTRUCTING AND DESCRIBING ALL RELEVANT DATA SETS ####
#Trilingul exclusions count
total_excluded_triling<- final_data_no_exc %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp<=90) %>%
distinct(unique_id)%>%
tally()
#Monolingual exclusions
total_monoling_excluded<- final_data_no_exc %>%
filter(exp_l1 >95) %>%
filter(exp_l2 <5) %>%
distinct(unique_id) %>%
tally()
#after third language exclusions exclusions
n <- final_data_strat %>%
distinct(unique_id) %>%
tally()
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1)
#n when only taking first visit
n_keep_first_visit<-first_visit_only %>%
distinct(anon_baby_id)%>%
tally()
age_min <- round(min(first_visit_only$age, na.rm = T), 2)
age_max<- round(max(first_visit_only$age, na.rm = T), 2)
age_mean<- round(mean(first_visit_only$age, na.rm = T), 2)
age_sd<- round(sd(first_visit_only$age, na.rm = T), 2)
female<- first_visit_only %>%
filter(gender=="female")%>%
distinct(anon_baby_id)%>% #using anon_baby_id since it uniquely identifies individual babies, instead of identifying by study
tally()
num_visits <- final_data_strat %>%
count(anon_baby_id, name = "n_visits") %>%
count(n_visits, name = "n_families")  %>%
mutate(n_data_points = n_families* n_visits)
#French-English-Heritage bilingual percentages
FEH <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Exporting the final data set that we used in all analyses and visualizations
#write_xlsx(FEH,"anonymized_data\\fam_Str_cross_sectional.xlsx")
FEH_perc<- FEH %>%
group_by(bilingual_type) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#By bilingual type percentages
fre_eng_perc <- FEH %>%
filter(bilingual_type== "fre-eng")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_her_perc <- FEH %>%
filter(bilingual_type=="fre-her")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_eng_perc <- FEH %>%
filter(bilingual_type=="eng-her") %>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#l1 amount of exposure range
min_exp_range <- final_data_strat %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data_strat %>%
select(exp_l1) %>%
max()
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length <- longitudinal_data_analyses %>%
filter(visit <= 2)
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
FE_for_lms<- FEH %>%
filter(bilingual_type == "fre-eng") %>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
for_lms <- FE_for_lms %>%
select(gender, anon_baby_id, age, exp_l2, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2) %>%
mutate(care1_l2 = case_when(care1_l2 =="NA" ~ "never",
TRUE ~ care1_l2)) %>%  #2023-07 going to need to fix this NAs in the cleaning script
mutate(care2_l1 = case_when(care2_l1 =="NA" ~ "never",
TRUE ~ care2_l1)) %>%
mutate(care2_l2 = case_when(care2_l2 =="NA" ~ "never",
TRUE ~ care2_l2)) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome") %>%
mutate(fre_exp = fre_exp/100, eng_exp = eng_exp/100, exp_l2 = exp_l2/100) %>%
drop_na()
#MOTHER AND FATHER MODELS
lm_parents_aditive_eng<- lm(eng_exp ~ caregiver_2_english_use + caregiver_1_english_use, data=for_lms)
lm_parents_aditive_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use, data=for_lms)
#Summary of Mother and Father models
summary(lm_parents_aditive_eng) #same pattern of results
lm_parents_aditive_fre<- lm(fre_exp ~ caregiver_2_french_use + caregiver_1_french_use, data=for_lms)
summary(lm_parents_aditive_fre) #same pattern of results
#STRATEGY LINEAR MODELS
lm_strat_eng<- lm(eng_exp ~ strategy, data=for_lms)
lm_strat_fre <- lm(fre_exp ~ strategy, data=for_lms)
##Comparison of strategy versus parents models
performance::compare_performance(lm_parents_aditive_fre, lm_strat_fre)
performance::compare_performance(lm_parents_aditive_eng, lm_strat_eng)
