scale_fill_manual ("#4d4d4d", "#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4") +
theme(axis.text.x= element_blank())+
theme_bw()
View(prop_strategy)
ggplot(prop_strategy, aes(x=strategy, y=prop, fill=strategy)) +
geom_bar(position = "stack")+
scale_fill_manual ("#4d4d4d", "#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4") +
theme(axis.text.x= element_blank())+
theme_bw()
ggplot(prop_strategy, aes(x=strategy, y=prop, fill=strategy)) +
geom_col(position = "stack")+
scale_fill_manual ("#4d4d4d", "#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4") +
theme(axis.text.x= element_blank())+
theme_bw()
ggplot(prop_strategy, aes(y=prop, fill=strategy)) +
geom_bar (position = "stack")+
scale_fill_manual ("#4d4d4d", "#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4") +
theme(axis.text.x= element_blank())+
theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual ("#4d4d4d", "#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4") +
theme(axis.text.x= element_blank())+
theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
#scale_fill_manual ("#4d4d4d", "#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4") +
theme(axis.text.x= element_blank())+
theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", "#4d4d4d", "#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4") +
theme(axis.text.x= element_blank())+
theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d", "#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4")) +
theme(axis.text.x= element_blank())+
theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4", "#4d4d4d")) +
theme(axis.text.x= element_blank())+
theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
fct_reorder(strategy, prop, desc=F) %>%
scale_fill_manual (name = "Family Strategy", values =c("#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4", "#4d4d4d")) +
theme(axis.text.x= element_blank())+
theme_bw()
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
fct_reorder(strategy, prop, desc=F)
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop, desc=F))
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop))
View(prop_strategy)
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop, desc=T))
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop, .desc=T))
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4", "#4d4d4d")) +
theme(axis.text.x= element_blank())+
theme_bw()
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop, .desc=F))
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4", "#4d4d4d")) +
theme(axis.text.x= element_blank())+
theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#bcbcc4", "#57bc53","#057c92", "#f6cb7f", "#f94f80")) +
theme(axis.text.x= element_blank())+
theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#bcbcc4", "#57bc53","#057c92", "#f6cb7f", "#f94f80")) +
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#bcbcc4", "#57bc53","#057c92", "#f6cb7f", "#f94f80")) +
labs(x="")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#057c92", "#bcbcc4", "#f6cb7f", "#f94f80")) +
labs(x="")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_bw()
final_data_strat <- final_data_strat %>%
mutate(dom_lang_exp = case_when( exp_l1 >= 45 & exp_l1 <= 60 ~"45-60",
exp_l1 >= 60.1 & exp_l1 <=75 ~"60-75",
exp_l1 >=75.1 & exp_l1 <= 90 ~"75-90",
exp_l1 >=90.1 & exp_l1 <=100 ~"90-100"))
View(final_data_strat)
ggplot(aes(final_data_strat, x= strategy, fill= dom_lang_exp)) +
geom_col()
View(final_data_strat)
ggplot(aes(final_data_strat, x= strategy, y= exp_l1, fill = strategy )) +
geom_col()
ggplot(final_data_strat,aes( x= strategy, y= exp_l1, fill = strategy )) +
geom_col()
prop_strategy_balance<-final_data_strat%>%
group_by(strategy, dom_lang_exp) %>%
tally() %>%
mutate(prop = n/sum(n)) #%>%
View(prop_strategy_balance)
ggplot(prop_strategy_balance,aes( x= strategy, y= prop, fill = dom_lang_exp )) +
geom_col()
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col()
prop_strategy_balance<-final_data_strat%>%
group_by(dom_lang_exp, strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) #%>%
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col()
View(prop_strategy_balance)
prop_strategy_balance<-final_data_strat%>%
group_by(dom_lang_exp, strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) #%>%
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col()
prop_strategy_balance<-final_data_strat%>%
group_by(dom_lang_exp, strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) #%>%
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col()
prop_strategy_balance<-final_data_strat%>%
group_by(dom_lang_exp, strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_reorder(prop_strategy_balance$strategy, prop_strategy_balance$n, .desc=F))
View(prop_strategy_balance)
prop_strategy_balance<-final_data_strat%>%
group_by(dom_lang_exp, strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col()
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy) %>%
filter(str_detect(strategy, "single-parent", negate=T))
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p2<- p1+
scale_fill_manual(name= "x", values = c("#f94f80", "#f6cb7f", "#057c92", "#57bc53", "#bcbcc4"))
p2<- p2 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title="Stability of Family Strategies Across Visit")
print(p2)
#Reorder the variables to make consistent with the descriptive plots
#Descriptive graphs: 1 proportion of use statistic.
load(here("anonymized_data/final_data_strat.Rda"))
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop, .desc=F))
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
prop_strategy<- prop_strategy %>%
mutate(strategy = fct_reorder(prop_strategy$strategy, prop_strategy$prop, .desc=F))
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#057c92", "#bcbcc4", "#f6cb7f", "#f94f80")) +
labs(x="")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_bw()
final_data_strat <- final_data_strat %>%
mutate(dom_lang_exp = case_when( exp_l1 >= 45 & exp_l1 <= 60 ~"45-60",
exp_l1 >= 60.1 & exp_l1 <=75 ~"60-75",
exp_l1 >=75.1 & exp_l1 <= 90 ~"75-90",
exp_l1 >=90.1 & exp_l1 <=100 ~"90-100"))
prop_strategy_balance<-final_data_strat%>%
group_by(dom_lang_exp, strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_relevel(strategy, "both-parents-bilingual", "one-parent-bilingual", "one-language-at-home", "one-parent-one-lang-flex", "one-parent-one-lang-strict", "single-parent"))
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col()
prop_strategy_balance<-final_data_strat%>%
group_by(dom_lang_exp, strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_relevel(strategy, "single-parent", "one-parent-one-lang-strict","one-parent-one-lang-flex","one-language-at-home","one-parent-bilingual", "both-parents-bilingual"))
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col()
#strategy by L2 exposure
final_data_strat <- final_data_strat %>%
mutate(dom_lang_exp = case_when( exp_l1 >= 45 & exp_l1 <= 60 ~"45-60",
exp_l1 >= 60.1 & exp_l1 <=75 ~"60-75",
exp_l1 >=75.1 & exp_l1 <= 90 ~"75-90",
exp_l1 >=90.1 & exp_l1 <=100 ~"90-100"))
prop_strategy_balance<-final_data_strat%>%
group_by(dom_lang_exp, strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(strategy = fct_relevel(strategy, "single-parent", "one-parent-one-lang-strict","one-parent-one-lang-flex","one-language-at-home","one-parent-bilingual", "both-parents-bilingual"))
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col() +
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#057c92", "#bcbcc4", "#f6cb7f", "#f94f80")) +
theme_bw()
r
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col() +
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#3DCAB5", "#4169e1", "#f6cb7f", "#f94f80")) +
theme_bw()
ggplot(prop_strategy_balance,aes( x=dom_lang_exp , y= prop, fill = strategy )) +
geom_col() +
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
theme_bw()
ggplot(prop_strategy, aes(x="", y=prop, fill=strategy)) +
geom_bar (stat= "identity")+
scale_fill_manual (name = "Family Strategy", values =c("#4d4d4d","#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80")) +
labs(x="")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
theme_bw()
View(for_sankey)
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy) %>%
filter(str_detect(strategy, "single-parent", negate=T))
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
for_sankey <- for_sankey %>%
mutate(node, fct_relevel (node, "one-parent-one-lang-strict","one-parent-one-lang-flex","one-language-at-home","one-parent-bilingual", "both-parents-bilingual"))
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p2<- p1+
scale_fill_manual(name= "x", values = c("#57bc53","#008c77", "#4169e1", "#f6cb7f", "#f94f80"))
p2<- p2 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title="Stability of Family Strategies Across Visit")
print(p2)
#Reorder the variables to make consistent with the descriptive plots
p2<- p1+
scale_fill_manual(name= "x", values = c("#f94f80", "#f6cb7f", "#4169e1", "#008c77", "#57bc53"))
p2<- p2 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title="Stability of Family Strategies Across Visit")
print(p2)
View(wider_longitudinal)
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy) %>%
filter(str_detect(strategy, "single-parent", negate=T))
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
for_sankey <- for_sankey %>%
mutate(node= fct_relevel (node, "one-parent-one-lang-strict","one-parent-one-lang-flex","one-language-at-home","one-parent-bilingual", "both-parents-bilingual"))
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p2<- p1+
scale_fill_manual(name= "x", values = c("#f94f80", "#f6cb7f", "#4169e1", "#008c77", "#57bc53"))
p2<- p2 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title="Stability of Family Strategies Across Visit")
print(p2)
s
library(here)
library(tidyverse)
library(ggplot2)
library(ggsankey)
load(here("anonymized_data/longitudinal_data.Rda"))
#select only relevant variables
longitudinal_data <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id)
longitudinal_data<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup()
wider_longitudinal <- longitudinal_data %>%
select(anon_baby_id, visit, strategy) %>%
filter(str_detect(strategy, "single-parent", negate=T))
wider_longitudinal <- pivot_wider(wider_longitudinal,
names_from = visit, values_from = strategy ) %>%
rename(visit_1 = "1", visit_2 = "2", visit_3 ="3", visit_4 ="4" )
for_sankey <- wider_longitudinal %>%
make_long(visit_1, visit_2)
for_sankey <- for_sankey %>%
mutate(node= fct_relevel (node, "both-parents-bilingual", "one-parent-bilingual", "one-language-at-home", "one-parent-one-lang-flex", "one-parent-one-lang-strict"))
p1<- ggplot(for_sankey, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node), label=node)) +
geom_sankey()
p2<- p1+
scale_fill_manual(name= "x", values = c("#f94f80", "#f6cb7f", "#4169e1", "#008c77", "#57bc53"))
p2<- p2 +
geom_sankey_label(size=3, color="black", fill="white")+
theme_bw()+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title="Stability of Family Strategies Across Visit")
print(p2)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(dplyr)
library(lme4)
library(lmerTest)
load(here("anonymized_data/final_merged_data.Rda"))
final_data_strat <- final_data %>%
mutate(strategy=case_when(
#one-parent-one-lang-strict: Each parent speaks only one language and both parents don't speak the same language
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-parent-one-lang-strict",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-strict",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#(The same language cannot be spoken regularly by both parents or that would be considered a one-parent-bilingual strategy)
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-flex",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang-flex",
#one-parent-bilingual: One parent speaks 2 languages, the other parent only speaks one language
#Starting point
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
#Some bilingual parents put both of their languages as sometimes rather than both as regularly
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#One parent bilingual (R&R or S&S) and another parent that speaks one of the language but not the other (R|S & N|NA)
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#Both parents speak the same language regularly, and one of them speak another language sometimes
#(not one-parent-one-lang-flex because both parents use the same language regularly in opposition to each parent having a different language that they use regularly)
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "one-parent-bilingual",
#both-parents-bilingual: Both parents speak both languages either regularly or sometimes
care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "both-parents-bilingual",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#The same language cannot be spoken regularly by both parents or it comes to be filled under the one-parent-bilingual strategy
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-flex",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang-flex",
#one-language-at-home: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-language-at-home",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "one-language-at-home",
#single-parent: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "single-parent",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "single-parent"
))
#Calculate the proportion for the different strategies
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
#save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
final_data_strat <- final_data_strat %>%
mutate(lang_status = case_when(
l2=="NA" ~ "monolingual",
exp_l2== 0 ~ "monolingual",
l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "maj",
TRUE ~ "min"
))
final_data_strat <- final_data_strat %>%
mutate(fre_exp = case_when(l1 == "French" ~ exp_l1,
l2 == "French"~ exp_l2,
TRUE ~ 0)) # if it is not l1 or 2 the exposure is less than 10, I can't get it somehow. Will try to figure out.
m1 <- lmer(exp_l1 ~ strategy + (1|anon_baby_id), data=final_data_strat) #can't with unique id, just anon. To check?
summary(m1)
#some significant effects by strategy.
#quite a bit of variance from the by-subject random intercept = balacedeness has to do also with individual variability than langauge strategy.
m1.1 <- lmer(exp_l1 ~ strategy + lang_status + (1|anon_baby_id), data=final_data_strat)
summary(m1.1)
m1.2 <- lmer(exp_l1 ~ strategy * lang_status + (1|anon_baby_id), data=final_data_strat)
summary(m1.2)
anova(m1, m1.1) #significantly different so langauge status matters but is it due to the monolinguals?
test<- lmer(exp_l1 ~ lang_status + (1|anon_baby_id), data=final_data_strat)
summary(test) #maybe monolinguals are driving the effect. Which makes sense because ofc monolinguals are unbalanced.
#prediction of French exposure
m2 <- lmer(fre_exp ~ strategy + (1|anon_baby_id), data=final_data_strat)
summary(m2)
#Both parents bilingual and opol-strict marginally
summary(m1)
summary(m1.1)
summary(m1.2)
summary(m2)
m1 <- lmer(exp_l1 ~ strategy + (1|anon_baby_id), data=final_data_strat) #can't with unique id, just anon. To check?
summary(m1)
#some significant effects by strategy.
#quite a bit of variance from the by-subject random intercept = balacedeness has to do also with individual variability than langauge strategy.
#take out the single parent language
#Maybe collapse the OPOL groups?
m1.1 <- lmer(exp_l1 ~ strategy + lang_status + (1|anon_baby_id), data=final_data_strat)
summary(m1.1)
#L1 is many language code everything relative to French as the official language.
m1.2 <- lmer(exp_l1 ~ strategy * lang_status + (1|anon_baby_id), data=final_data_strat)
summary(m1.2)
anova(m1, m1.1) #significantly different so langauge status matters but is it due to the monolinguals?
test<- lmer(exp_l1 ~ lang_status + (1|anon_baby_id), data=final_data_strat)
summary(test) #maybe monolinguals are driving the effect. Which makes sense because ofc monolinguals are unbalanced.
#prediction of French exposure
m2 <- lmer(fre_exp ~ strategy + (1|anon_baby_id), data=final_data_strat)
m2.2<- lmer(fre_exp ~ strategy * lang_status + (1|anon_baby_id), data=final_data_strat)
summary(m2.2)
summary(m2)
#Both parents bilingual and opol-strict marginally
summary(m2.2)
summary(m1.2)
