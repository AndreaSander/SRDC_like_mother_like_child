LEQ_data <-
LEQ_data %>%
mutate(study = tolower(study)) %>%
mutate(unique_id = paste(anon_baby_id, study, sep="_"))
final_data <-
right_join(demographic_data, LEQ_data ,  by= c("unique_id", "study", "anon_baby_id"))
#clean date of birth error in one participant
final_data <- final_data %>%
mutate(leq_date = as.character(leq_date))
final_data$leq_date[final_data$leq_date== "2016-08-07"] <- "2017-03-28"
#This chunk was used to calculate age, but it won't run anymore as the DoB column has been removed for anonymization purposes.
final_data$do_birth<-as.Date(as.character(final_data$do_birth))
final_data$leq_date<-as.Date(as.character(final_data$leq_date))
final_data <- final_data %>%
mutate(age= interval(start= do_birth, end=leq_date)/
duration(n=1, unit="months"))
#Create a type of family column. NOTE this column was created after thoroughly reviewing parents' answers and it reflects the places where it was explicitly noted that a child had two same-gender caregivers, or where it is obvious by the parents answers that the child has a single caregiver. Otherwise it was assumed that the child had a mother and a father, and that mothers' answers were entered in the caregiver 1 slot, as it is explicitly instructed in the questionnaire.
final_data <- final_data %>%
mutate (type_of_family= case_when(anon_baby_id == 5815080 ~ "same_sex_parents",
anon_baby_id == 5373360 ~ "same_sex_parents",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "single-parent",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "single-parent",
TRUE ~ "mother-father family"))
#save data before exclusions
final_data_no_exc<- final_data
# save(final_data_no_exc, file=here("anonymized_data/final_data_no_exc.Rda"))
View(final_data_no_exc)
final_data_no_exc <- final_data_no_exc %>%
select(-c(do_birth, leq_date, part_id))
save(final_data_no_exc, file=here("anonymized_data/final_data_no_exc.Rda"))
final_data <- final_data %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp>=90) #59 exclusions for more than 10% exposure to a third language
final_data <- final_data %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp>=90) %>% #59 exclusions for more than 10% exposure to a third language
select(-c(do_birth, leq_date, part_id))
#DO NOT SAVE THIS DATAFRAME AGAIN OR YOU WILL LOOSE THE AGE COLUMN
save(final_data, file=here("anonymized_data/final_merged_data.Rda"))
##NOTE: Originally I had also added exposure on language 3 and 4. Language 3 and 4 always amount to less than 10% because we excluded trilinguals. However,
#in parental interviews caregivers frequently give a third language and the final calculation is so low it amounts to 0
#this was 0 inflating our english and french exposures, and because we are interested in how bilingual strategies relate to bilingual exposure, I decided to get rid of l3 and 4 exposure when making the french, english, and heritage language exposure variables.
vars<-c("exp_l3", "exp_l4")
final_data <-
final_data %>%
mutate_at(vars, as.numeric) %>%
mutate(l3 = replace(l3, l3=="NA", "no lang")) %>%
mutate(l4 = replace(l4, l4=="NA", "no lang")) %>%
mutate(fre_exp = case_when(l1=="French"~ exp_l1,
l2=="French"~ exp_l2,
#l3=="French" & exp_l3 >=1 ~ exp_l3,
#l4=="French"  & exp_l4 >=1 ~ exp_l4
))%>%
mutate(eng_exp = case_when(l1=="English"~ exp_l1,
l2=="English"~ exp_l2,
#l3=="English"~ exp_l3,
#l4=="English"~ exp_l4
)) %>%
mutate(min_exp = case_when (!(l1 %in% c("French", "English"))& l2 %in% c("French", "English") ~ exp_l1,
!(l2 %in% c("French", "English")) & l1 %in% c("French", "English") ~ exp_l2
))
final_data_strat <- final_data %>%
mutate(strategy=case_when(
#one-parent-one-lang-strict: Each parent speaks only one language and both parents don't speak the same language
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA")~ "one-parent-one-lang",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#(The same language cannot be spoken regularly by both parents or that would be considered a one-parent-bilingual strategy)
#**NOTE: we ended up having a single category for OPOL instead of divinding it into strict and flex.
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang",
#one-parent-bilingual: One parent speaks 2 languages, the other parent only speaks one language
#Starting point
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
#Some bilingual parents put both of their languages as sometimes rather than both as regularly
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#One parent bilingual (R&R or S&S) and another parent that speaks one of the language but not the other (R|S & N|NA)
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#Both parents speak the same language regularly, and one of them speak another language sometimes
#(not one-parent-one-lang-flex because both parents use the same language regularly in opposition to each parent having a different language that they use regularly)
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "one-parent-bilingual",
#both-parents-bilingual: Both parents speak both languages either regularly or sometimes
care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "both-parents-bilingual",
#one-language-at-home: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-language-at-home",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "one-language-at-home",
#single-parent: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "single-parent",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "single-parent"
))
View(final_data_strat)
# I decided to exclude "true" monolinguals characterized here to the best of our abilities as children whose families use one language at home strategy, and the childcare language is the same as the one language at home strategy = they are being exposed to a single language = most likely not a bilingual strategy.
final_data_strat <-
final_data_strat %>%
mutate(bilinugal_strategy= case_when(strategy=="one-language-at-home" & childcare_l1 == l1 & childcare_l2 %in% c(NA, "NA")  ~ "no",
strategy=="one-language-at-home" & childcare_l2 == l1 & childcare_l1 %in% c(NA, "NA") ~"no",
strategy=="one-language-at-home" & childcare_l1 %in% c(NA, "NA") & childcare_l2 %in% c(NA, "NA") ~"no",
TRUE~"yes")) %>%
filter(bilinugal_strategy=="yes")
#In the end, after discussion we decided to filter all the strictly monolinguals because we are truly interested in bilinguals mainly.
final_data_strat <-
final_data_strat %>%
filter(exp_l1 <95) %>%
filter(exp_l2 >5)
save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
#keeps only data where the baby participated more than once
longitudinal_data<- final_data_strat %>%
add_count(anon_baby_id, name = "num_visits") %>%
filter(num_visits>1)
save(longitudinal_data, file=here("anonymized_data/longitudinal_data.Rda"))
load(here("anonymized_data/LEQ_data.Rda"))
final_fam_str<- final_fam_str %>%
View(final_fam_str)
load(here("anonymized_data/LEQ_data.Rda"))
View(final_fam_str)
final_fam_str <- final_fam_str %>%
select(-c("leq_date", "part_id"))
save(final_fam_str, file=here("anonymized_data/LEQ_data.Rda"))
load(here("anonymized_data/demographic_data.Rda"))
View(demog_anonym)
demog_anonym<- demog_anonym %>%
select(-"do_birth")
save(demog_anonym, file=here("anonymized_data/demographic_data.Rda"))
load(here("anonymized_data/LEQ_data.Rda"))
load(here("anonymized_data/demographic_data.Rda"))
#rename
LEQ_data <- final_fam_str
demographic_data <- demog_anonym
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 100, digits = 4)
library(lubridate)
library(sparkline)
library(webshot)
library(htmlwidgets)
library(formattable)
library(here)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
library(waffle)
library(ggsankey)
library(dplyr)
library(tidyverse)
library(patchwork)
library(ggpubr)
library(broom)
library(janitor)
library(glmmTMB)
library(DHARMa)
library(betareg)
library(emmeans)
library(ggiraphExtra)
library(ggeffects)
library(mvtnorm)
library(boot)
library(bbmle)
library(performance)
library(see)
library(writexl)
library(ggtext)
library(kableExtra)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
load(here("anonymized_data/longitudinal_data.Rda"))
SES_info<- readxl::read_xlsx("anonymized_data/SES_and_ethicity_info.xlsx")
SES_info<-clean_names(SES_info)
#Saving my palette to use in visualizations
my_yellow<-"#FFC107"
my_orange<- "#D95F02"
my_blue<- "#1F78B4"
my_green<- "#33a02c"
my_purple<- "#683f6d"
View(final_data)
View(SES_info)
#### CONSTRUCTING AND DESCRIBING ALL RELEVANT DATA SETS ####
#Trilingul exclusions count
total_excluded_triling<- final_data_no_exc %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp<=90) %>%
distinct(unique_id)%>%
tally()
#Monolingual exclusions
total_monoling_excluded<- final_data_no_exc %>%
filter(exp_l1 >95) %>%
filter(exp_l2 <5) %>%
distinct(unique_id) %>%
tally()
#after third language exclusions exclusions
n <- final_data_strat %>%
distinct(unique_id) %>%
tally()
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1)
#n when only taking first visit
n_keep_first_visit<-first_visit_only %>%
distinct(anon_baby_id)%>%
tally()
age_min <- round(min(first_visit_only$age, na.rm = T), 2)
age_max<- round(max(first_visit_only$age, na.rm = T), 2)
age_mean<- round(mean(first_visit_only$age, na.rm = T), 2)
age_sd<- round(sd(first_visit_only$age, na.rm = T), 2)
female<- first_visit_only %>%
filter(gender=="female")%>%
distinct(anon_baby_id)%>% #using anon_baby_id since it uniquely identifies individual babies, instead of identifying by study
tally()
num_visits <- final_data_strat %>%
count(anon_baby_id, name = "n_visits") %>%
count(n_visits, name = "n_families")  %>%
mutate(n_data_points = n_families* n_visits)
#French-English-Heritage bilingual percentages
#### JOINING SES INFO TO CLEAN DATA
## Make sure 5718960_cogmisp24 6517080_segment8 have the right languages on the SES sheet
first_visit_only<- first_visit_only %>%
right_join(SES_info, first_visit_only, by=c("study","unique_id", "anon_baby_id", "l1", "l2"))
FEH <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
#Exporting the final data set that we used in all analyses and visualizations
#write_xlsx(FEH,"anonymized_data\\fam_Str_cross_sectional.xlsx")
FEH_prof<- FEH %>%
mutate(mother_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_mother,
l1 %in% c("English","Heritage")~ age_l2_acquired_mother)) %>%
mutate(mother_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_mother,
l1%in% c("French","Heritage")~ age_l2_acquired_mother)) %>%
mutate(mother_heritage_aoa = case_when (l1 == "Heritage" ~ age_l1_acquired_mother,
l1%in% c("French","English")~ age_l2_acquired_mother)) %>%
mutate(father_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_father,
l1 %in% c("English","Heritage")~ age_l2_acquired_father)) %>%
mutate(father_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_father,
l1%in% c("French","Heritage")~ age_l2_acquired_father)) %>%
mutate(father_heritage_aoa = case_when (l1 == "Heritage" ~ age_l1_acquired_father,
l1%in% c("French","English")~ age_l2_acquired_father)) %>%
mutate(mother_french_aoa = case_when(mother_french_aoa <= 5 ~ "early_acquisition",
mother_french_aoa >5 ~ "older_than_5",
is.na(mother_french_aoa)~ NA)) %>%
mutate(mother_english_aoa = case_when(mother_english_aoa <= 5 ~ "early_acquisition",
mother_english_aoa >5 ~ "older_than_5",
is.na(mother_english_aoa) ~ NA)) %>%
mutate(mother_heritage_aoa = case_when(mother_heritage_aoa <= 5 ~ "early_acquisition",
mother_heritage_aoa >5 ~ "older_than_5",
is.na(mother_heritage_aoa)~ NA)) %>%
mutate(father_french_aoa = case_when(father_french_aoa <= 5 ~ "early_acquisition",
father_french_aoa >5 ~ "older_than_5",
is.na(father_french_aoa)~ NA)) %>%
mutate(father_english_aoa = case_when(father_english_aoa <= 5 ~ "early_acquisition",
father_english_aoa >5 ~ "older_than_5",
is.na(father_english_aoa)~ NA)) %>%
mutate(father_heritage_aoa = case_when(father_heritage_aoa <= 5 ~ "early_acquisition",
father_heritage_aoa >5 ~ "older_than_5",
is.na(father_english_aoa)~ NA))
## Mothers proficiency distribution
mothers_fre_prof <- FEH_prof%>%
group_by(mother_french_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
mothers_eng_prof <- FEH_prof%>%
group_by(mother_english_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
mothers_her_prof <- FEH_prof%>%
group_by(mother_heritage_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
#Fathers proficiency distribution
fathers_fre_prof <- FEH_prof%>%
group_by(father_french_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
fathers_eng_prof <- FEH_prof%>%
group_by(father_english_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
fathers_her_prof <- FEH_prof%>%
group_by(father_heritage_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
FEH_perc<- FEH %>%
group_by(bilingual_type) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#By bilingual type percentages
fre_eng_perc <- FEH %>%
filter(bilingual_type== "fre-eng")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_her_perc <- FEH %>%
filter(bilingual_type=="fre-her")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_eng_perc <- FEH %>%
filter(bilingual_type=="eng-her") %>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#l1 amount of exposure range
min_exp_range <- final_data_strat %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data_strat %>%
select(exp_l1) %>%
max()
## Calculate percentages of overall maternal education by strategy for supplementary materials
library(RColorBrewer)
FE_maternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
filter(!strategy == "single-parent")%>%
drop_na(strategy)%>%
group_by(strategy, maternal_education) %>%
drop_na(maternal_education)%>%
mutate(maternal_education = case_when(maternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
maternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
maternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
FE_maternal_education$maternal_education <- factor(FE_maternal_education$maternal_education, levels= c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_1<- ggplot(FE_maternal_education, aes(y=perc, x=strategy, fill=maternal_education)) +
geom_col(position = "fill") +
scale_fill_brewer(palette="Dark2")+
labs(title= "French-English sample maternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
HER_maternal_education <- FEH %>%
filter(bilingual_type %in% c("fre-her", "eng-her")) %>%
filter(!strategy == "single-parent")%>%
drop_na(strategy)%>%
group_by(strategy, maternal_education) %>%
drop_na(maternal_education) %>%
mutate(maternal_education = case_when(maternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
maternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
maternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
HER_maternal_education$maternal_education <- factor(HER_maternal_education$maternal_education, levels=c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_2<- ggplot(HER_maternal_education, aes(y=perc, x=strategy, fill=maternal_education)) +
geom_col(position = "fill") +
scale_fill_brewer(palette="Dark2") +
labs(title= "Heritage sample maternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
FE_paternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
filter(!strategy == "single-parent")%>%
drop_na(strategy)%>%
group_by(strategy, paternal_education) %>%
drop_na(paternal_education) %>%
mutate(paternal_education = case_when(paternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
paternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
paternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
FE_paternal_education$paternal_education <- factor(FE_paternal_education$paternal_education, levels=c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_3<- ggplot(FE_paternal_education, aes(y=perc, x=strategy, fill=paternal_education)) +
geom_col(position = "fill")  +
scale_fill_brewer(palette="Dark2") +
labs(title= "French-English sample paternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
HER_paternal_education <- FEH %>%
filter(bilingual_type %in% c("fre-her", "eng-her")) %>%
filter(!strategy == "single-parent")%>%
group_by(strategy, paternal_education) %>%
drop_na(paternal_education) %>%
mutate(paternal_education = case_when(paternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
paternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
paternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
HER_paternal_education$paternal_education <- factor(HER_paternal_education$paternal_education, levels=c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_4<- ggplot(HER_paternal_education, aes(y=perc, x=strategy, fill=paternal_education)) +
geom_col(position = "fill")+
scale_fill_brewer(palette="Dark2") +
labs(title= "Heritage sample paternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
#No graphs for this one as there are too many categories
FE_ethnicity <- FEH %>%
filter(bilingual_type=="fre-eng")%>%
group_by(strategy, child_ethnicity) %>%
drop_na(child_ethnicity) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
######## SES and ethnicity stats not by strategy
##MATERNAL EDUCATION French-English sample
FE_maternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(maternal_education) %>%
drop_na(maternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Paternal EDUCATION French-English sample
FE_paternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(paternal_education) %>%
drop_na(paternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Child ethnicity French-English sample
FE_child_ethicity <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
group_by(child_ethnicity) %>%
drop_na(child_ethnicity)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##MATERNAL EDUCATION heritage sample
her_maternal_education <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(maternal_education) %>%
drop_na(maternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Paternal EDUCATION heritage sample
her_paternal_education <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(paternal_education) %>%
drop_na(paternal_education) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
##Child ethnicity her sample
her_child_ethicity <- FEH %>%
filter(!bilingual_type=="fre-eng") %>%
group_by(child_ethnicity) %>%
drop_na(child_ethnicity) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
