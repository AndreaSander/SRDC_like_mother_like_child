fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15)
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(nn==2) %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
select(anon_baby_id, first_visit_date, second_visit_date) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
distinct() %>%
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) ##Filter visits that were very close together.
##!! There is a mistake in one date which results in a negative date. Fix.
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
#Family language strategy visualization
######## FOR THE WHOLE SAMPLE ############
#Calculating how many families use each strategy and its corresponding %
prop_strategy<- first_visit_only %>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Reordering levels so legend in the graph is in order.
prop_strategy$strategy<- factor(prop_strategy$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
prop_strategy<- prop_strategy %>%
arrange(desc(prop))
#Creating dataframes of each strategy to save their percentages and prnt them on the text
##Both parents bilingual
both_parents_biling<- prop_strategy %>%
filter(strategy=="both-parents-bilingual") %>%
select(perc)
perc_both_parents_biling<- round(both_parents_biling$perc, 1)
##One parent bilingual
one_parent_biling<- prop_strategy %>%
filter(strategy=="one-parent-bilingual") %>%
select(perc)
perc_one_parents_biling<- round(one_parent_biling$perc, 1)
##One parent one lang
one_parent_one_lang<- prop_strategy %>%
filter(strategy=="one-parent-one-lang") %>%
select(perc)
perc_one_parent_one_lang<- round(one_parent_biling$perc, 1)
##one language at home
one_language_at_home<- prop_strategy %>%
filter(strategy=="one-language-at-home") %>%
select(perc)
perc_one_language_at_home<- round(one_parent_biling$perc, 1)
#Waffle plot
V1<- setNames(prop_strategy$n, c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lanaguage", "one-language-at-home", "single-parent"))
figure_1<- waffle(parts = V1, rows=20, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, title = "Proportion of Use of Family Strategies", size=0.6)
#Making a figure of most used strategies divided by lang exposure
for_breakdown <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
group_by(strategy, l1) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
for_breakdown$strategy<- factor(for_breakdown$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
ggplot(for_breakdown, aes(x=l1, y=n, fill=strategy)) +
geom_bar(stat="identity", position="fill") +
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue, my_green, my_purple))
####### FOR THE FRENCH- ENGLISH SAMPLE ############
#Calculating how many families use each strategy and its corresponding %
prop_strategy_FE<- FEH %>%
filter(bilingual_type == "fre-eng")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Reordering levels so legend in the graph is in order.
prop_strategy_FE$strategy<- factor(prop_strategy_FE$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
prop_strategy_FE<- prop_strategy_FE %>%
arrange(desc(prop))
#Waffle plot
V1_FE<- setNames(prop_strategy_FE$n, c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lanaguage", "one-language-at-home", "single-parent"))
figure_1_FE<- waffle(parts = V1_FE, rows=15, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, title = "% Family Strategies for the French-English sample", size=0.6)
###### FOR THE FRENCH- HERITAGE SAMPLE ###########
#Calculating how many families use each strategy and its corresponding %
prop_strategy_FH<- FEH %>%
filter(bilingual_type == "fre-her")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Reordering levels so legend in the graph is in order.
prop_strategy_FH$strategy<- factor(prop_strategy_FH$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
prop_strategy_FH<- prop_strategy_FH %>%
arrange(desc(prop))
#Waffle plot
V1_FH<- setNames(prop_strategy_FH$n, c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lanaguage", "one-language-at-home", "single-parent"))
figure_1_FH<- waffle(parts = V1_FH, rows=5, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, title = "% Family Strategies for the French-heritage sample", size=0.6)
##### FOR THE ENGLISH- HERITAGE SAMPLE ###########
prop_strategy_EH<- FEH %>%
filter(bilingual_type == "eng-her")%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#Reordering levels so legend in the graph is in order.
prop_strategy_EH$strategy<- factor(prop_strategy_EH$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
prop_strategy_EH<- prop_strategy_EH %>%
arrange(desc(prop))
#Waffle plot
V1_EH<- setNames(prop_strategy_EH$n, c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lanaguage", "single-parent"))
figure_1_EH<- waffle(parts = V1_EH, rows=5, colors = c(my_orange, my_yellow, my_blue, my_green, my_purple), keep = T, title = "% Family Strategies for the English-heritage sample", size=0.6)
### Looking at the one parent bilingual data to see which parent tends to be bilingual
## In the French-English dataset ##
#Which parent is the bilingual parent?
FE_one_parent_b<- FEH %>%
filter(bilingual_type == "fre-eng") %>%
filter(strategy=="one-parent-bilingual") %>%
mutate(caregiver_biling = case_when(care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("regularly", "sometimes") ~ "caregiver1",
TRUE ~ "caregiver2"))
#What are the percentages
FE_caregiver_bi_prop <- FE_one_parent_b %>%
group_by(caregiver_biling) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 81% mothers are the bilingual caregiver
#Which languages are spoken by the monolingual parent
monoling_careg_lang<- FE_one_parent_b %>%
mutate(monolingual_care_lang = case_when(caregiver_biling == "caregiver1" & care2_l1 %in% c("regularly", "sometimes") ~ l1,
caregiver_biling == "caregiver1" & care2_l2 %in% c("regularly", "sometimes") ~ l2,
caregiver_biling == "caregiver2" & care1_l1 %in% c("regularly", "sometimes") ~l1,
caregiver_biling == "caregiver2" & care1_l2 %in% c("regularly", "sometimes") ~l2)) %>%
group_by(monolingual_care_lang) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) ## 69% on the parents who are monolingual speak English
##Also looking at OPOL to see who speaks French
opol_b <- first_visit_only %>%
filter(strategy=="one-parent-one-lang") %>%
mutate(who_speaks_fre = case_when(l1=="French" & care1_l1 %in% c("regularly", "sometimes") ~ "mother",
l1=="French" & care2_l1 %in% c("regularly", "sometimes")~"father",
l2=="French" & care1_l2 %in% c("regularly", "sometimes")~"mother",
l2=="French" & care2_l2 %in% c("regularly", "sometimes")~"father",
TRUE ~ "English-heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
opol_b_fre_count <- opol_b %>%
filter(bilingual_type=="fre-eng")%>%
group_by(who_speaks_fre)%>%
tally()%>%
mutate(prop = n/sum(n))
FE_for_anova_graphs<-FEH %>%
filter(bilingual_type == "fre-eng")
FE_for_anova_graphs$strategy<- factor(FE_for_anova_graphs$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
FE_for_anova_graphs <- FE_for_anova_graphs %>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home")
figure_2_a <-ggplot(FE_for_anova_graphs, aes( x=strategy , y=fre_exp, fill = strategy )) +
stat_summary(geom="bar")+
stat_summary() +
ylim(0,100) +
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20), legend.position = "none")+
labs(title= "A. Mean French exposure by strategy")
figure_2_b <-ggplot(FE_for_anova_graphs, aes( x=strategy , y=eng_exp, fill = strategy )) +
stat_summary(geom="bar")+
stat_summary() +
ylim(0,100) +
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20), legend.text= element_text(size=20), legend.title= element_text(size=20))+
labs(title= "B. Mean English exposure by strategy")
figure_2_c <-ggplot(FE_for_anova_graphs, aes( x=strategy , y=exp_l2, fill = strategy )) +
stat_summary(geom="bar")+
stat_summary() +
ylim(0,50) +
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20), legend.position = "none")+
labs(title= "C. Mean exposure balance by strategy")
figure_2<- figure_2_a + figure_2_b + figure_2_c
# Create the dataframes to run the models for each language. Monolinguals are excluded, as are the rows
# where exposure for a given language equals 100. Since exposure is on a 0-100 scale and the beta distributions
# works with values ranging from 0-1, exposure is divided by 100.
for_beta <- FE_for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, strategy, care1_l1, care1_l2, l1, l2) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2))%>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use == "regularly" ~3,
caregiver_1_french_use == "sometimes"~ 2,
caregiver_1_french_use == "never"~1))%>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use == "regularly" ~3,
caregiver_1_english_use == "sometimes"~ 2,
caregiver_1_english_use == "never"~1))%>%
mutate(caregiver_2_french_use = case_when(l1=="French"~care2_l1,
l2=="French"~care2_l2))%>%
mutate(caregiver_2_french_use = case_when(caregiver_2_french_use == "regularly" ~3,
caregiver_2_french_use == "sometimes"~ 2,
caregiver_2_french_use == "never"~1))%>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_english_use = case_when(caregiver_2_english_use == "regularly" ~3,
caregiver_2_english_use == "sometimes"~ 2,
caregiver_2_english_use == "never"~1))%>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome")
FE_for_anovas<- FEH %>%
filter(bilingual_type == "fre-eng") %>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
##French Anova objects
FE_anova_model_french <- aov(fre_exp ~ strategy, data= FE_for_anovas)
FE_aov_fre<- tidy(FE_anova_model_french)
FE_tukey_fre_s<- TukeyHSD (FE_anova_model_french)
FE_fre_F <- FE_aov_fre$statistic
FE_fre_p <- FE_aov_fre$p.value
##English ANOVA objects
FE_anova_model_english <- aov(eng_exp ~ strategy, data= FE_for_anovas)
FE_aov_eng<- tidy(FE_anova_model_english)
FE_tukey_eng_s<- TukeyHSD(FE_anova_model_english)
FE_eng_F <- FE_aov_eng$statistic
FE_eng_p <- FE_aov_eng$p.value
#model_performance(anova_model_english)
#check_model(anova_model_english)
## Exposure balance
FE_for_blc_anova <- FEH %>%
filter(bilingual_type == "fre-eng")%>%
filter(!strategy == "single-parent") %>%
filter(!strategy == "one-language-at-home") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
FE_blc_model <- aov(exp_l2 ~ strategy, data= FE_for_blc_anova)
FE_aov_blc<- tidy(FE_blc_model)
FE_tukey_blc_s<- TukeyHSD(FE_blc_model)
model_performance(anova_model_french)
# Create the dataframes to run the models for each language. Monolinguals are excluded, as are the rows
# where exposure for a given language equals 100. Since exposure is on a 0-100 scale and the beta distributions
# works with values ranging from 0-1, exposure is divided by 100.
for_beta <- FE_for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, strategy, care1_l1, care1_l2, l1, l2) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2))%>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use == "regularly" ~3,
caregiver_1_french_use == "sometimes"~ 2,
caregiver_1_french_use == "never"~1))%>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use == "regularly" ~3,
caregiver_1_english_use == "sometimes"~ 2,
caregiver_1_english_use == "never"~1))%>%
mutate(caregiver_2_french_use = case_when(l1=="French"~care2_l1,
l2=="French"~care2_l2))%>%
mutate(caregiver_2_french_use = case_when(caregiver_2_french_use == "regularly" ~3,
caregiver_2_french_use == "sometimes"~ 2,
caregiver_2_french_use == "never"~1))%>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_2_english_use = case_when(caregiver_2_english_use == "regularly" ~3,
caregiver_2_english_use == "sometimes"~ 2,
caregiver_2_english_use == "never"~1))%>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome")
# Create the dataframes to run the models for each language. Monolinguals are excluded, as are the rows
# where exposure for a given language equals 100. Since exposure is on a 0-100 scale and the beta distributions
# works with values ranging from 0-1, exposure is divided by 100.
for_beta <- FE_for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, strategy, care1_l1, care1_l2, l1, l2) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2))%>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use == "regularly" ~3,
caregiver_1_french_use == "sometimes"~ 2,
caregiver_1_french_use == "never"~1))%>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use == "regularly" ~3,
caregiver_1_english_use == "sometimes"~ 2,
caregiver_1_english_use == "never"~1))%>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2))%>%
mutate(caregiver_2_french_use = case_when(caregiver_2_french_use == "regularly" ~3,
caregiver_2_french_use == "sometimes"~ 2,
caregiver_2_french_use == "never"~1))%>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(caregiver_2_english_use == "regularly" ~3,
caregiver_2_english_use == "sometimes"~ 2,
caregiver_2_english_use == "never"~1))%>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome")
for_beta <- FE_for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, strategy, care1_l1, care1_l2, l1, l2) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2))%>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use == "regularly" ~3,
caregiver_1_french_use == "sometimes"~ 2,
caregiver_1_french_use == "never"~1))%>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use == "regularly" ~3,
caregiver_1_english_use == "sometimes"~ 2,
caregiver_1_english_use == "never"~1))%>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2))
for_beta <- FE_for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, strategy, care1_l1, care1_l2, l1, l2) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2))%>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use == "regularly" ~3,
caregiver_1_french_use == "sometimes"~ 2,
caregiver_1_french_use == "never"~1))%>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use == "regularly" ~3,
caregiver_1_english_use == "sometimes"~ 2,
caregiver_1_english_use == "never"~1))
for_beta <- FE_for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, strategy, care1_l1, care1_l2, l1, l2) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2))%>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use == "regularly" ~3,
caregiver_1_french_use == "sometimes"~ 2,
caregiver_1_french_use == "never"~1))%>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use == "regularly" ~3,
caregiver_1_english_use == "sometimes"~ 2,
caregiver_1_english_use == "never"~1)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2))
# Create the dataframes to run the models for each language. Monolinguals are excluded, as are the rows
# where exposure for a given language equals 100. Since exposure is on a 0-100 scale and the beta distributions
# works with values ranging from 0-1, exposure is divided by 100.
for_beta <- FE_for_anovas %>%
select(gender, anon_baby_id, age, fre_exp, eng_exp, strategy, care1_l1, care1_l2, care2_l1, care2_l2, l1, l2) %>%
mutate(caregiver_1_french_use = case_when(l1=="French"~care1_l1,
l2=="French"~care1_l2))%>%
mutate(caregiver_1_french_use = case_when(caregiver_1_french_use == "regularly" ~3,
caregiver_1_french_use == "sometimes"~ 2,
caregiver_1_french_use == "never"~1))%>%
mutate(caregiver_1_english_use = case_when(l1=="English"~care1_l1,
l2=="English"~care1_l2)) %>%
mutate(caregiver_1_english_use = case_when(caregiver_1_english_use == "regularly" ~3,
caregiver_1_english_use == "sometimes"~ 2,
caregiver_1_english_use == "never"~1)) %>%
mutate(caregiver_2_french_use = case_when(l1=="French"~ care2_l1,
l2=="French"~ care2_l2)) %>%
mutate(caregiver_2_french_use = case_when(caregiver_2_french_use == "regularly" ~3,
caregiver_2_french_use == "sometimes"~ 2,
caregiver_2_french_use == "never"~1))%>%
mutate(caregiver_2_english_use = case_when(l1=="English"~care2_l1,
l2=="English"~care2_l2)) %>%
mutate(caregiver_2_english_use = case_when(caregiver_2_english_use == "regularly" ~3,
caregiver_2_english_use == "sometimes"~ 2,
caregiver_2_english_use == "never"~1))%>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome")
for_beta_blc <- FE_for_blc_anova %>%
select(gender, anon_baby_id, age, exp_l2, strategy, care1_l1, care2_l1, care1_l2, care2_l2) %>%
filter(gender != "NA") %>%
filter(!strategy == "OneLanguageAtHome")
# Dataframe for english exposure
for_beta_eng <- for_beta %>%
select(age, eng_exp, strategy, anon_baby_id, caregiver_1_french_use, caregiver_1_english_use) %>%
filter(eng_exp != "NA") %>%
mutate(eng_exp = eng_exp/100,
strategy = as.factor(strategy))
# Dataframe for french exposure
for_beta_fre <- for_beta %>%
select(age, fre_exp, strategy, anon_baby_id, caregiver_1_french_use, caregiver_1_english_use) %>%
filter(fre_exp != "NA") %>%
mutate(fre_exp = fre_exp/100,
strategy = as.factor(strategy))
#Dataframe for balance
for_balance<- for_beta_blc%>%
select(age, exp_l2, strategy, anon_baby_id) %>%
filter(exp_l2 != "NA") %>%
mutate(exp_l2 = exp_l2/100,
strategy = as.factor(strategy))
#Constructing the different beta models
#AGE MODELS
beta_eng<- glmmTMB(eng_exp ~ strategy * age, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * age)
beta_fre<- glmmTMB(fre_exp ~ strategy * age, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * age)
beta_blc<- glmmTMB(exp_l2 ~ strategy * age, data=for_balance, family= beta_family(link="logit"), dispformula = ~ strategy * age)
#Summary of AGE models
summary(beta_eng)
summary(beta_fre)
summary(beta_blc)
#MOTHER MODELS
mom_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_1_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_1_english_use)
mom_beta_fre<- glmmTMB(fre_exp ~ strategy * caregiver_1_french_use, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_1_french_use)
#Summary of MOTHER models
summary(mom_beta_eng)
summary(mom_beta_fre)
#FATHER MODELS
dad_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_2_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_english_use)
# Dataframe for english exposure
for_beta_eng <- for_beta %>%
select(age, eng_exp, strategy, anon_baby_id, caregiver_1_french_use, caregiver_1_english_use, caregiver_2_french_use,caregiver_2_english_use) %>%
filter(eng_exp != "NA") %>%
mutate(eng_exp = eng_exp/100,
strategy = as.factor(strategy))
# Dataframe for french exposure
for_beta_fre <- for_beta %>%
select(age, fre_exp, strategy, anon_baby_id, caregiver_1_french_use, caregiver_1_english_use, caregiver_2_french_use, caregiver_2_english_use) %>%
filter(fre_exp != "NA") %>%
mutate(fre_exp = fre_exp/100,
strategy = as.factor(strategy))
#FATHER MODELS
dad_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_2_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_english_use)
dad_beta_fre<- glmmTMB(fre_exp ~ strategy * caregiver_2_french_use, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_french_use)
#Summary of MOTHER models
summary(dad_beta_eng)
summary(dad_beta_fre)
#MOTHER AND FATHER MODELS
parents_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_2_english_use, strategy* caregiver_1_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_english_use, strategy * caregiver_1_english_use)
#MOTHER AND FATHER MODELS
parents_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_2_english_use, strategy * caregiver_1_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_english_use, strategy * caregiver_1_english_use)
#MOTHER AND FATHER MODELS
parents_beta_eng<- glmmTMB(eng_exp ~ strategy * caregiver_2_english_use + strategy * caregiver_1_english_use, data=for_beta_eng, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_english_use + strategy * caregiver_1_english_use)
parents_beta_fre<- glmmTMB(fre_exp ~ strategy * caregiver_2_french_use + strategy*caregiver_1_french_use, data=for_beta_fre, family= beta_family(link="logit"), dispformula = ~ strategy * caregiver_2_french_use + strategy*caregiver_1_french_use)
#Summary of MOTHER models
summary(parents_beta_eng)
summary(parents_beta_fre)
figure_mother_french <-ggplot(for_beta, aes( x=caregiver_1_french_use , y=fre_exp, color=strategy)) +
geom_boxplot()
print(figure_mother_french)
figure_mother_french <-ggplot(for_beta, aes( x=caregiver_1_french_use , y=fre_exp, color=strategy)) +
geom_smooth()
print(figure_mother_french)
figure_mother_french <-ggplot(for_beta, aes( x= as.factor(caregiver_1_french_use) , y=fre_exp, fill=strategy)) +
geom_boxplot()
print(figure_mother_french)
figure_mother_french <-ggplot(for_beta, aes( x= as.factor(caregiver_1_french_use) , y=fre_exp, fill=strategy)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of French by strategy in amount of french exposure")
print(figure_mother_french)
figure_mother_french <-ggplot(for_beta, aes( x= as.factor(caregiver_1_french_use) , y=fre_exp, fill=strategy)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of French by strategy in amount of French exposure")
figure_mother_english <-ggplot(for_beta, aes( x= as.factor(caregiver_1_english_use) , y=eng_exp, fill=strategy)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of English by strategy in amount of English exposure")
print(figure_mother_english)
figure_mother_english <-ggplot(for_beta, aes( x= as.factor(caregiver_1_english_use) , y=eng_exp, fill=strategy, na.rm=T)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of English by strategy in amount of English exposure")
print(figure_mother_english)
figure_mother_english <-ggplot(for_beta, aes( x= as.factor(caregiver_1_english_use) , y=eng_exp, fill=strategy), na.rm=T) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of English by strategy in amount of English exposure")
print(figure_mother_english)
figure_mother_english <-ggplot(for_beta, aes( x= as.factor(caregiver_1_english_use) , y=eng_exp, fill=strategy)) +
geom_boxplot(na.rm=T) +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of mothers' use of English by strategy in amount of English exposure")
print(figure_mother_english)
print(figure_mother_english)
print(figure_mother_french)
figure_father_french <-ggplot(for_beta, aes( x= as.factor(caregiver_2_french_use) , y=fre_exp, fill=strategy)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of fathers' use of French by strategy in amount of French exposure")
print(figure_father_french)
print(figure_father_french)
figure_father_english <-ggplot(for_beta, aes( x= as.factor(caregiver_2_english_use) , y=eng_exp, fill=strategy)) +
geom_boxplot() +
scale_color_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue)) +
theme_bw() +
theme(axis.text.x = element_text(size=20), axis.text.y = element_text(size=20),axis.title = element_text(size=20), plot.title = element_text(size=20))+
labs(title= "Role of fathers' use of English by strategy in amount of English exposure")
print(figure_father_english)
#Summary of MOTHER models
summary(parents_beta_eng)
summary(parents_beta_eng)
summary(parents_beta_fre)
