fre_l2 <- l2_perc %>%
filter(l2=="French") %>%
select(perc)
eng_l2 <- l2_perc %>%
filter(l2=="English") %>%
select(perc)
min_l2<- abs(fre_l2-eng_l2)
#l1 amount of exposure range
min_exp_range <- final_data %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data %>%
select(exp_l1) %>%
max()
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id, leq_date)
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15)
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(nn==2) %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
select(anon_baby_id, first_visit_date, second_visit_date) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
distinct() %>%
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) ##Filter visits that were very close together.
##!! There is a mistake in one date which results in a negative date. Fix.
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
for_anovas<- first_visit_only %>%
filter(!strategy == "single-parent") %>%
mutate(strategy = case_when(strategy=="both-parents-bilingual"~"BothParentsBilingual",
strategy=="one-language-at-home"~"OneLanguageAtHome",
strategy=="one-parent-bilingual"~"OneParentBilingual",
strategy=="one-parent-one-lang"~"OneParentOneLang"))
##French Anova objects
for_anovas_f<- for_anovas %>%
filter(!fre_exp == 0|100)
range(for_anovas_f$fre_exp)
##French Anova objects
for_anovas_f<- for_anovas %>%
filter(!fre_exp == 0) %>%
filter(!fre_exp == 100)
range(for_anovas_f$fre_exp)
library(lubridate)
library(sparkline)
library(webshot)
library(htmlwidgets)
library(formattable)
library(here)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
library(waffle)
library(ggsankey)
library(dplyr)
library(tidyverse)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
load(here("anonymized_data/longitudinal_data.Rda"))
#Saving my palette to use in visualizations
my_yellow<-"#FFC107"
my_orange<- "#D95F02"
my_blue<- "#1F78B4"
my_green<- "#33a02c"
my_purple<- "#7570b3"
#### CONSTRUCTING AND DESCRIBING ALL RELEVANT DATA SETS ####
#Trilingul exclusions count
total_excluded_triling<- final_data_no_exc %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp<=90) %>%
distinct(unique_id)%>%
tally()
#Monolingual strategies count
monoling_strategies_Count <-
final_data_no_exc %>%
mutate(bilinugal_strategy= case_when(strategy=="one-language-at-home" & childcare_l1 == l1 & childcare_l2 %in% c(NA, "NA")  ~ "no",
strategy=="one-language-at-home" & childcare_l2 == l1 & childcare_l1 %in% c(NA, "NA") ~"no",
strategy=="one-language-at-home" & childcare_l1 %in% c(NA, "NA") & childcare_l2 %in% c(NA, "NA") ~"no",
TRUE~"yes")) %>%
filter(bilinugal_strategy=="no") %>%
distinct(unique_id)%>%
tally()
#### CONSTRUCTING AND DESCRIBING ALL RELEVANT DATA SETS ####
#Trilingul exclusions count
total_excluded_triling<- final_data_no_exc %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp<=90) %>%
distinct(unique_id)%>%
tally()
#Monolingual strategies count
monoling_strategies_Count <-
final_data_no_exc %>%
mutate(monoling_strategy = case_when(
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "yes",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "yes",
TRUE~"No"))%>%
mutate(bilinugal_strategy= case_when(monoling_strategy=="yes" & childcare_l1 == l1 & childcare_l2 %in% c(NA, "NA")  ~ "no",
monoling_strategy=="yes"& childcare_l2 == l1 & childcare_l1 %in% c(NA, "NA") ~"no",
monoling_strategy=="yes" & childcare_l1 %in% c(NA, "NA") & childcare_l2 %in% c(NA, "NA") ~"no",
TRUE~"yes")) %>%
filter(bilinugal_strategy=="no") %>%
distinct(unique_id)%>%
tally()
#after third language exclusions exclusions
n <- final_data %>%
distinct(unique_id) %>%
tally()
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1) #439 data from first visit only
#n when only taking first visit
n_keep_first_visit<-first_visit_only %>%
distinct(unique_id)%>%
tally()
age_min <- round(min(first_visit_only$age, na.rm = T), 2)
age_max<- round(max(first_visit_only$age, na.rm = T), 2)
age_mean<- round(mean(first_visit_only$age, na.rm = T), 2)
age_sd<- round(sd(first_visit_only$age, na.rm = T), 2)
female<- first_visit_only %>%
filter(gender=="female")%>%
distinct(unique_id)%>%
tally()
twice_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn==2)%>%
distinct(unique_id)%>%
tally()
three_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn==3)%>%
distinct(unique_id)%>%
tally()
four_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn>3)%>%
distinct(unique_id)%>%
tally()
#l1 percentages
l1_perc <- first_visit_only %>%
group_by(l1) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_l1 <- l1_perc %>%
filter(l1=="French") %>%
select(perc)
eng_l1 <- l1_perc %>%
filter(l1=="English") %>%
select(perc)
min_l1<- abs(fre_l1-eng_l1)
#l2 percentages
l2_perc <- first_visit_only %>%
group_by(l2) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_l2 <- l2_perc %>%
filter(l2=="French") %>%
select(perc)
eng_l2 <- l2_perc %>%
filter(l2=="English") %>%
select(perc)
min_l2<- abs(fre_l2-eng_l2)
#l1 amount of exposure range
min_exp_range <- final_data %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data %>%
select(exp_l1) %>%
max()
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id, leq_date)
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15)
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(nn==2) %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
select(anon_baby_id, first_visit_date, second_visit_date) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
distinct() %>%
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) ##Filter visits that were very close together.
##!! There is a mistake in one date which results in a negative date. Fix.
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
View(monoling_strategies_Count)
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 100, digits = 4)
library(lubridate)
library(sparkline)
library(webshot)
library(htmlwidgets)
library(formattable)
library(here)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
library(waffle)
library(ggsankey)
library(dplyr)
library(tidyverse)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
load(here("anonymized_data/longitudinal_data.Rda"))
#Saving my palette to use in visualizations
my_yellow<-"#FFC107"
my_orange<- "#D95F02"
my_blue<- "#1F78B4"
my_green<- "#33a02c"
my_purple<- "#72568f"
#### CONSTRUCTING AND DESCRIBING ALL RELEVANT DATA SETS ####
#Trilingul exclusions count
total_excluded_triling<- final_data_no_exc %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp<=90) %>%
distinct(unique_id)%>%
tally()
#Monolingual strategies count
monoling_strategies_Count <-
final_data_no_exc %>%
mutate(monoling_strategy = case_when(
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "yes",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "yes",
TRUE~"No"))%>%
mutate(bilinugal_strategy= case_when(monoling_strategy=="yes" & childcare_l1 == l1 & childcare_l2 %in% c(NA, "NA")  ~ "no",
monoling_strategy=="yes"& childcare_l2 == l1 & childcare_l1 %in% c(NA, "NA") ~"no",
monoling_strategy=="yes" & childcare_l1 %in% c(NA, "NA") & childcare_l2 %in% c(NA, "NA") ~"no",
TRUE~"yes")) %>%
filter(bilinugal_strategy=="no") %>%
distinct(unique_id)%>%
tally()
#after third language exclusions exclusions
n <- final_data %>%
distinct(unique_id) %>%
tally()
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1) #439 data from first visit only
#n when only taking first visit
n_keep_first_visit<-first_visit_only %>%
distinct(unique_id)%>%
tally()
age_min <- round(min(first_visit_only$age, na.rm = T), 2)
age_max<- round(max(first_visit_only$age, na.rm = T), 2)
age_mean<- round(mean(first_visit_only$age, na.rm = T), 2)
age_sd<- round(sd(first_visit_only$age, na.rm = T), 2)
female<- first_visit_only %>%
filter(gender=="female")%>%
distinct(unique_id)%>%
tally()
twice_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn==2)%>%
distinct(unique_id)%>%
tally()
three_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn==3)%>%
distinct(unique_id)%>%
tally()
four_visit <- final_data %>%
add_count(anon_baby_id) %>%
filter(nn>3)%>%
distinct(unique_id)%>%
tally()
#l1 percentages
l1_perc <- first_visit_only %>%
group_by(l1) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_l1 <- l1_perc %>%
filter(l1=="French") %>%
select(perc)
eng_l1 <- l1_perc %>%
filter(l1=="English") %>%
select(perc)
min_l1<- abs(fre_l1-eng_l1)
#l2 percentages
l2_perc <- first_visit_only %>%
group_by(l2) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_l2 <- l2_perc %>%
filter(l2=="French") %>%
select(perc)
eng_l2 <- l2_perc %>%
filter(l2=="English") %>%
select(perc)
min_l2<- abs(fre_l2-eng_l2)
#l1 amount of exposure range
min_exp_range <- final_data %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data %>%
select(exp_l1) %>%
max()
#Prepping longitudinal data excluding irrelevant cases
longitudinal_data_analyses <- longitudinal_data %>%
select(age, strategy, unique_id, anon_baby_id, leq_date)
longitudinal_data_analyses <- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15)
#Longitudinal data set n
n_long <-longitudinal_data_analyses %>%
distinct(unique_id)%>%
tally()
#Longitudinal data set length between visit one and 2
visit_length<- longitudinal_data %>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(nn==2) %>%
mutate(first_visit_date = case_when(visit == 1 ~ leq_date)) %>%
mutate(second_visit_date = case_when(visit == 2 ~ leq_date)) %>%
select(anon_baby_id, first_visit_date, second_visit_date) %>%
group_by(anon_baby_id) %>%
fill(first_visit_date, second_visit_date, .direction="updown") %>% #to collapse the rows and be able to calculate visit
distinct() %>%
ungroup() %>%
mutate(length_between_visits = abs(interval(start= first_visit_date, end=second_visit_date)/ duration (n=1, unit="days" ))) %>%
filter(! length_between_visits < 15) ##Filter visits that were very close together.
##!! There is a mistake in one date which results in a negative date. Fix.
avg_visit_l <- round(mean(visit_length$length_between_visits), 2)
min_visit_l <- round(min(visit_length$length_between_visits),2)
max_visit_l <- round(max(visit_length$length_between_visits),2)
sd_visit_l <- round(sd(visit_length$length_between_visits),2)
#Family language strategy visualization
#Calculating how many families use each strategy and its corresponding %
prop_strategy<- first_visit_only %>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
both_parents_biling<- prop_strategy %>%
filter(strategy=="both-parents-bilingual") %>%
select(perc)
perc_both_parents_biling<- round(both_parents_biling$perc, 1)
prop_strategy<- prop_strategy %>%
arrange(desc(prop))
#Waffle plot
figure_1<- ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=22, color="white")+
scale_fill_manual (name = "Family Strategy", values =c(my_yellow, my_orange, my_blue, my_green, my_purple)) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
my_purple<- "#683f6d"
figure_1<- ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=22, color="white")+
scale_fill_manual (name = "Family Strategy", values =c(my_yellow, my_orange, my_blue, my_green, my_purple)) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
print(figure_1)
View(prop_strategy)
prop_strategy$strategy<- factor(prop_strategy$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
figure_1<- ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=22, color="white")+
scale_fill_manual (name = "Family Strategy", values =c(my_yellow, my_orange, my_blue, my_green, my_purple)) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
print(figure_1)
figure_1<- ggplot(prop_strategy, aes(fill=strategy, values= n, na.rm=T)) +
geom_waffle (n_rows=22, color="white")+
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue, my_green, my_purple)) +
labs(x="", title = "Proportion of Use of Family Strategies")+
theme(axis.text.x= element_blank(), axis.ticks = element_blank())+
coord_equal()+
theme_void()
print(figure_1)
fre_by_strategy <- first_visit_only  %>%
select(c(strategy, fre_exp)) %>%
group_by(strategy) %>%
dplyr::summarize(mean(fre_exp,  na.rm=TRUE)) %>%
arrange(desc("mean(fre_exp, na.rm=TRUE)"))
View(fre_by_strategy)
fre_by_strategy <- first_visit_only  %>%
select(c(strategy, fre_exp)) %>%
group_by(strategy) %>%
dplyr::summarize(
sd= sd(fre_exp, na.rm=TRUE),
mean= mean(fre_exp,  na.rm=TRUE)) %>%
arrange(desc("mean(fre_exp, na.rm=TRUE)"))
View(fre_by_strategy)
fre_by_strategy$strategy<- factor(fre_by_strategy$strategy, levels= c("both-parents-bilingual", "one-parent-bilingual", "one-parent-one-lang", "one-language-at-home", "single-parent"))
figure_2_a <-ggplot(fre_by_strategy, aes( x=strategy , y=mean_fre_exp, fill = strategy )) +
geom_col() +
geom_errorbar()+
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue, my_green, my_purple)) +
theme_bw() +
theme(axis.text.x = element_blank())+
labs(title= "Mean french exposure by strategy")
print(figure_2_a)
figure_2_a <-ggplot(fre_by_strategy, aes( x=strategy , y=mean, fill = strategy )) +
geom_col() +
geom_errorbar()+
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue, my_green, my_purple)) +
theme_bw() +
theme(axis.text.x = element_blank())+
labs(title= "Mean french exposure by strategy")
print(figure_2_a)
figure_2_a <-ggplot(fre_by_strategy, aes( x=strategy , y=mean, fill = strategy, ymin = mean-sd, ymax = mean+sd )) +
geom_col() +
geom_errorbar()+
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue, my_green, my_purple)) +
theme_bw() +
theme(axis.text.x = element_blank())+
labs(title= "Mean french exposure by strategy")
print(figure_2_a)
figure_2_a <-ggplot(fre_by_strategy, aes( x=strategy , y=mean, fill = strategy, ymin = mean, ymax = mean+sd )) +
geom_col() +
geom_errorbar()+
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue, my_green, my_purple)) +
theme_bw() +
theme(axis.text.x = element_blank())+
labs(title= "Mean french exposure by strategy")
print(figure_2_a)
figure_2_a <-ggplot(fre_by_strategy, aes( x=strategy , y=mean, fill = strategy, ymin = mean, ymax = mean+sd )) +
geom_col() +
geom_errorbar(width=0.2)+
scale_fill_manual (name = "Family Strategy", values =c(my_orange, my_yellow, my_blue, my_green, my_purple)) +
theme_bw() +
theme(axis.text.x = element_blank())+
labs(title= "Mean french exposure by strategy")
print(figure_2_a)
