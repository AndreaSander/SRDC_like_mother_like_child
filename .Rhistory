#one-language-at-home: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-language-at-home",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "one-language-at-home",
#single-parent: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "single-parent",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "single-parent"
))
#Calculate the proportion for the different strategies
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
#save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
final_data_strat <- final_data_strat %>%
mutate(lang_status = case_when(
l2=="NA" ~ "monolingual",
exp_l2== 0 ~ "monolingual",
l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "both_maj",
l1 %in% c("French", "English") & !(l2 %in% c("French", "English")) ~ "one_maj",
!(l1 %in% c("French", "English")) & l2 %in% c("French", "English") ~ "one_maj",
TRUE ~ "both_min"
))
#do check that the monolinguals are actually monolinguals and not both min
both_maj_data<- final_data_strat %>%
filter(lang_status == "both_maj")
#355 observations
#Calculate the proportion for the different strategies in this group
prop_strategy_group1<-both_maj_data %>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
print(prop_strategy_group1)
for_t_tests_g1<- both_maj_data %>%
select(c(strategy, lang_status, fre_exp, exp_l1))
pwc_eng_exp_g1 <- for_t_tests_g1 %>%
pairwise_t_test(
eng_exp~strategy, pool.sd = FALSE,
p.adjust.method = "bonferroni"
)
for_t_tests_g1<- both_maj_data %>%
select(c(strategy, lang_status, fre_exp, eng_exp))
pwc_eng_exp_g1 <- for_t_tests_g1 %>%
pairwise_t_test(
eng_exp~strategy, pool.sd = FALSE,
p.adjust.method = "bonferroni"
)
pwc_eng_exp_g1
pwc_eng_exp_g2 <- for_t_tests_g2 %>%
pairwise_t_test(
eng_exp~strategy, pool.sd = FALSE,
p.adjust.method = "bonferroni"
)
one_maj_data<- final_data_strat %>%
filter(lang_status == "one_maj")
#80 observations
prop_strategy_group2<-one_maj_data %>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
print(prop_strategy_group2)
#the cell sizes are a bit small... but it does give a different story about which strategies are the most used than when both languages are majority
for_t_tests_g2<- one_maj_data %>%
select(c(strategy, lang_status, fre_exp, eng_exp))
pwc_eng_exp_g2 <- for_t_tests_g2 %>%
pairwise_t_test(
eng_exp~strategy, pool.sd = FALSE,
p.adjust.method = "bonferroni"
)
pwc_eng_exp_g2
load(here("anonymized_data/final_merged_data.Rda"))
vars<-c("exp_l3", "exp_l4")
final_data_french_coded <-
final_data %>%
mutate_at(vars, as.numeric) %>%
mutate(l3 = replace(l3, l3=="NA", "no lang")) %>%
mutate(l4 = replace(l4, l4=="NA", "no lang")) %>%
mutate(fre_exp = case_when(l1=="French"~ exp_l1,
l2=="French"~ exp_l2,
l3=="French"~ exp_l3,
l4=="French"~ exp_l4,
TRUE~ 0)) %>%
mutate(eng_exp = case_when(l1=="English"~ exp_l1,
l2=="English"~ exp_l2,
l3=="English"~ exp_l3,
l4=="English"~ exp_l4,
TRUE~ 0))
final_data_strat <- final_data_french_coded %>%
mutate(strategy=case_when(
#one-parent-one-lang-strict: Each parent speaks only one language and both parents don't speak the same language
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-parent-one-lang-strict",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-strict",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#(The same language cannot be spoken regularly by both parents or that would be considered a one-parent-bilingual strategy)
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-flex",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang-flex",
#one-parent-bilingual: One parent speaks 2 languages, the other parent only speaks one language
#Starting point
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
#Some bilingual parents put both of their languages as sometimes rather than both as regularly
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#One parent bilingual (R&R or S&S) and another parent that speaks one of the language but not the other (R|S & N|NA)
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "one-parent-bilingual",
care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "one-parent-bilingual",
#Both parents speak the same language regularly, and one of them speak another language sometimes
#(not one-parent-one-lang-flex because both parents use the same language regularly in opposition to each parent having a different language that they use regularly)
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "one-parent-bilingual",
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "one-parent-bilingual",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "one-parent-bilingual",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "one-parent-bilingual",
#both-parents-bilingual: Both parents speak both languages either regularly or sometimes
care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "both-parents-bilingual",
#one-parent-one-lang-flex: Each parent speaks mainly one language, and one of them sometimes speaks another language
#The same language cannot be spoken regularly by both parents or it comes to be filled under the one-parent-bilingual strategy
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "one-parent-one-lang-flex",
care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-parent-one-lang-flex",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "one-parent-one-lang-flex",
#one-language-at-home: There is only one language spoken in the home by both parents
care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "one-language-at-home",
care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "one-language-at-home",
care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "one-language-at-home",
#single-parent: Family in which there is only one caregiver
care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "single-parent",
care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "single-parent"
))
#Calculate the proportion for the different strategies
prop_strategy<-final_data_strat%>%
group_by(strategy) %>%
tally() %>%
mutate(prop = n/sum(n))
#save(final_data_strat, file=here("anonymized_data/final_data_strat.Rda"))
final_data_strat <- final_data_strat %>%
mutate(lang_status = case_when(
l2=="NA" ~ "monolingual",
exp_l2== 0 ~ "monolingual",
l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "both_maj",
l1 %in% c("French", "English") & !(l2 %in% c("French", "English")) ~ "one_maj",
!(l1 %in% c("French", "English")) & l2 %in% c("French", "English") ~ "one_maj",
TRUE ~ "both_min"
))
#do check that the monolinguals are actually monolinguals and not both min
one_maj_data<- final_data_strat %>%
filter(lang_status == "one_maj")
View(one_maj_data)
one_maj_data<- one_maj_data %>%
mutate(min_exp = case_when (!(l1 %in% c("French", "English")) ~ l1_exp,
!(l2 %in% c("French", "English")) ~ l2_exp,
TRUE ~ 0
))
one_maj_data<- one_maj_data %>%
mutate(min_exp = case_when (!(l1 %in% c("French", "English")) ~ exp_l1,
!(l2 %in% c("French", "English")) ~ exp_l2,
TRUE ~ 0
))
View(one_maj_data)
one_maj_data<- one_maj_data %>%
mutate(min_exp = case_when (!(l1 %in% c("French", "English"))& l2 %in% c("French", "English") ~ exp_l1,
!(l2 %in% c("French", "English")) & l1 %in% c("French", "English") ~ exp_l2,
TRUE ~ 0
))
for_t_tests_g2<- one_maj_data %>%
select(c(strategy, lang_status, fre_exp, eng_exp, min_exp))
pwc_min_exp_g2 <- for_t_tests_g2 %>%
pairwise_t_test(
min_exp~strategy, pool.sd = FALSE,
p.adjust.method = "bonferroni"
)
pwc_min_exp_g2
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 100, digits = 4)
```{r data call in, include=FALSE}
library(lubridate)
library(sparkline)
library(webshot)
library(htmlwidgets)
library(formattable)
library(here)
library(lme4)
library(lmerTest)
library(rstatix)
library(papeR)
library(knitr)
library(waffle)
library(ggsankey)
library(dplyr)
library(tidyverse)
library(patchwork)
library(ggpubr)
library(broom)
library(janitor)
library(glmmTMB)
library(DHARMa)
library(betareg)
library(emmeans)
library(ggiraphExtra)
library(ggeffects)
library(mvtnorm)
library(boot)
library(bbmle)
library(performance)
library(see)
library(writexl)
library(ggtext)
library(kableExtra)
load(here("anonymized_data/final_merged_data.Rda"))
load(here("anonymized_data/final_data_no_exc.Rda"))
load(here("anonymized_data/final_data_strat.Rda"))
load(here("anonymized_data/longitudinal_data.Rda"))
SES_info<- readxl::read_xlsx("anonymized_data/SES_and_ethicity_info.xlsx")
SES_info<-clean_names(SES_info)
#Saving my palette to use in visualizations
my_yellow<-"#FFC107"
my_orange<- "#D95F02"
my_blue<- "#1F78B4"
my_green<- "#33a02c"
my_purple<- "#683f6d"
```
#Trilingul exclusions count
total_excluded_triling<- final_data_no_exc %>%
group_by(unique_id, exp_l1, exp_l2)%>%
mutate(total_l1_l2_exp=(sum(exp_l1,exp_l2,na.rm = T))) %>%
ungroup() %>%
filter(total_l1_l2_exp<=90) %>%
distinct(unique_id)%>%
tally()
#Monolingual exclusions
total_monoling_excluded<- final_data_no_exc %>%
filter(exp_l1 >95) %>%
filter(exp_l2 <5) %>%
distinct(unique_id) %>%
tally()
#after third language exclusions exclusions
n <- final_data_strat %>%
distinct(unique_id) %>%
tally()
#subseting to get data only from each child's first visit to the lab. For main analyses
first_visit_only <- final_data_strat%>%
arrange(anon_baby_id, age) %>%
group_by(anon_baby_id) %>%
mutate(visit = row_number()) %>%
ungroup() %>%
filter(visit==1)
#n when only taking first visit
n_keep_first_visit<-first_visit_only %>%
distinct(anon_baby_id)%>%
tally()
age_min <- round(min(first_visit_only$age, na.rm = T), 2)
age_max<- round(max(first_visit_only$age, na.rm = T), 2)
age_mean<- round(mean(first_visit_only$age, na.rm = T), 2)
age_sd<- round(sd(first_visit_only$age, na.rm = T), 2)
female<- first_visit_only %>%
filter(gender=="female")%>%
distinct(anon_baby_id)%>% #using anon_baby_id since it uniquely identifies individual babies, instead of identifying by study
tally()
num_visits <- final_data_strat %>%
count(anon_baby_id, name = "n_visits") %>%
count(n_visits, name = "n_families")  %>%
mutate(n_data_points = n_families* n_visits)
first_visit_only<- first_visit_only %>%
right_join(SES_info, first_visit_only, by=c("study","unique_id", "anon_baby_id", "l1", "l2"))
FEH <- first_visit_only %>%
mutate(l1 = case_when(l1=="French" ~ "French",
l1=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(l2 = case_when(l2=="French" ~ "French",
l2=="English" ~ "English",
TRUE ~ "Heritage")) %>%
mutate(bilingual_type = case_when(l1 %in% c("French", "English") & l2 %in% c("French", "English") ~ "fre-eng",
l1 %in% c("French", "Heritage") & l2 %in% c("French", "Heritage") ~ "fre-her",
l1 %in% c("Heritage", "English") & l2 %in% c("Heritage", "English") ~ "eng-her"))
FEH_prof<- FEH %>%
mutate(mother_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_mother,
l1 %in% c("English","Heritage")~ age_l2_acquired_mother)) %>%
mutate(mother_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_mother,
l1%in% c("French","Heritage")~ age_l2_acquired_mother)) %>%
mutate(mother_heritage_aoa = case_when (l1 == "Heritage" ~ age_l1_acquired_mother,
l1%in% c("French","English")~ age_l2_acquired_mother)) %>%
mutate(father_french_aoa = case_when (l1 == "French" ~ age_l1_acquired_father,
l1 %in% c("English","Heritage")~ age_l2_acquired_father)) %>%
mutate(father_english_aoa = case_when (l1 == "English" ~ age_l1_acquired_father,
l1%in% c("French","Heritage")~ age_l2_acquired_father)) %>%
mutate(father_heritage_aoa = case_when (l1 == "Heritage" ~ age_l1_acquired_father,
l1%in% c("French","English")~ age_l2_acquired_father)) %>%
mutate(mother_french_aoa = case_when(mother_french_aoa <= 5 ~ "early_acquisition",
mother_french_aoa >5 ~ "older_than_5",
is.na(mother_french_aoa)~ NA)) %>%
mutate(mother_english_aoa = case_when(mother_english_aoa <= 5 ~ "early_acquisition",
mother_english_aoa >5 ~ "older_than_5",
is.na(mother_english_aoa) ~ NA)) %>%
mutate(mother_heritage_aoa = case_when(mother_heritage_aoa <= 5 ~ "early_acquisition",
mother_heritage_aoa >5 ~ "older_than_5",
is.na(mother_heritage_aoa)~ NA)) %>%
mutate(father_french_aoa = case_when(father_french_aoa <= 5 ~ "early_acquisition",
father_french_aoa >5 ~ "older_than_5",
is.na(father_french_aoa)~ NA)) %>%
mutate(father_english_aoa = case_when(father_english_aoa <= 5 ~ "early_acquisition",
father_english_aoa >5 ~ "older_than_5",
is.na(father_english_aoa)~ NA)) %>%
mutate(father_heritage_aoa = case_when(father_heritage_aoa <= 5 ~ "early_acquisition",
father_heritage_aoa >5 ~ "older_than_5",
is.na(father_english_aoa)~ NA))
## Mothers proficiency distribution
mothers_fre_prof <- FEH_prof%>%
group_by(mother_french_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
mothers_eng_prof <- FEH_prof%>%
group_by(mother_english_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
mothers_her_prof <- FEH_prof%>%
group_by(mother_heritage_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
fathers_fre_prof <- FEH_prof%>%
group_by(father_french_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
fathers_eng_prof <- FEH_prof%>%
group_by(father_english_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
fathers_her_prof <- FEH_prof%>%
group_by(father_heritage_aoa)%>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100) %>%
ungroup()
FEH_perc<- FEH %>%
group_by(bilingual_type) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_eng_perc <- FEH %>%
filter(bilingual_type== "fre-eng")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
fre_her_perc <- FEH %>%
filter(bilingual_type=="fre-her")%>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
her_eng_perc <- FEH %>%
filter(bilingual_type=="eng-her") %>%
group_by(l1) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
#l1 amount of exposure range
min_exp_range <- final_data_strat %>%
select(exp_l1) %>%
min()
max_exp_range <-final_data_strat %>%
select(exp_l1) %>%
max()
## Calculate percentages of overall maternal education by strategy for supplementary materials
library(RColorBrewer)
FE_maternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
filter(!strategy == "single-parent")%>%
drop_na(strategy)%>%
group_by(strategy, maternal_education) %>%
drop_na(maternal_education)%>%
mutate(maternal_education = case_when(maternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
maternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
maternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
FE_maternal_education$maternal_education <- factor(FE_maternal_education$maternal_education, levels= c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_1<- ggplot(FE_maternal_education, aes(y=perc, x=strategy, fill=maternal_education)) +
geom_col(position = "fill") +
scale_fill_brewer(palette="Dark2")+
labs(title= "French-English sample maternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
ggsave(file="Figure_S1.png", width=25, height=12, dpi=300)
HER_maternal_education <- FEH %>%
filter(bilingual_type %in% c("fre-her", "eng-her")) %>%
filter(!strategy == "single-parent")%>%
drop_na(strategy)%>%
group_by(strategy, maternal_education) %>%
drop_na(maternal_education) %>%
mutate(maternal_education = case_when(maternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
maternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
maternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
HER_maternal_education$maternal_education <- factor(HER_maternal_education$maternal_education, levels=c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_2<- ggplot(HER_maternal_education, aes(y=perc, x=strategy, fill=maternal_education)) +
geom_col(position = "fill") +
scale_fill_brewer(palette="Dark2") +
labs(title= "Heritage sample maternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
ggsave(file="Figure_S2.png", width=25, height=12, dpi=300)
FE_paternal_education <- FEH %>%
filter(bilingual_type=="fre-eng") %>%
filter(!strategy == "single-parent")%>%
drop_na(strategy)%>%
group_by(strategy, paternal_education) %>%
drop_na(paternal_education) %>%
mutate(paternal_education = case_when(paternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
paternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
paternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
FE_paternal_education$paternal_education <- factor(FE_paternal_education$paternal_education, levels=c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_3<- ggplot(FE_paternal_education, aes(y=perc, x=strategy, fill=paternal_education)) +
geom_col(position = "fill")  +
scale_fill_brewer(palette="Dark2") +
labs(title= "French-English sample paternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
ggsave(file="Figure_S3.png", width=25, height=12, dpi=300)
HER_paternal_education <- FEH %>%
filter(bilingual_type %in% c("fre-her", "eng-her")) %>%
filter(!strategy == "single-parent")%>%
group_by(strategy, paternal_education) %>%
drop_na(paternal_education) %>%
mutate(paternal_education = case_when(paternal_education %in% c("highschool", "less_than_highschool")~"highschool or less",
paternal_education %in% c("cgep", "university", "trade_school_diploma", "professional_degree") ~ "post-secondary education",
paternal_education %in% c("masters", "more_than_masters")~"post-graduate education")) %>%
tally()%>%
mutate(prop = n/sum(n)) %>%
mutate(perc= prop*100)
HER_paternal_education$paternal_education <- factor(HER_paternal_education$paternal_education, levels=c("post-graduate education", "post-secondary education", "highschool or less"))
sup_figure_4<- ggplot(HER_paternal_education, aes(y=perc, x=strategy, fill=paternal_education)) +
geom_col(position = "fill")+
scale_fill_brewer(palette="Dark2") +
labs(title= "Heritage sample paternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))
ggsave(file="Figure_S4.png", width=25, height=12, dpi=300)
sup_figure_1<- ggplot(FE_maternal_education, aes(y=perc, x=strategy, fill=maternal_education)) +
geom_col(position = "fill") +
scale_fill_brewer(palette="Dark2")+
labs(title= "French-English sample maternal education by strategy")+
theme(axis.text.x = element_text(angle = 25))+
theme(legend.text= element_text(size=18),legend.title= element_text(size=18))
ggsave(file="Figure_S1.png", width=25, height=12, dpi=300)
sup_figure_1<- ggplot(FE_maternal_education, aes(y=perc, x=strategy, fill=maternal_education)) +
geom_col(position = "fill") +
scale_fill_brewer(palette="Dark2")+
labs(title= "French-English sample maternal education by strategy")+
theme(axis.text.x = element_text(angle = 25, size=18))+
theme(legend.text= element_text(size=18),legend.title= element_text(size=18))
ggsave(file="Figure_S1.png", width=25, height=12, dpi=300)
sup_figure_1<- ggplot(FE_maternal_education, aes(y=perc, x=strategy, fill=maternal_education)) +
geom_col(position = "fill") +
scale_fill_brewer(palette="Dark2")+
labs(title= "French-English sample maternal education by strategy", element_text(size=18))+
theme(axis.text.x = element_text(angle = 25, size=18))+
theme(legend.text= element_text(size=18),legend.title= element_text(size=18), axis.title= element_text(size=18))
ggsave(file="Figure_S1.png", width=25, height=12, dpi=300)
?labs
sup_figure_1<- ggplot(FE_maternal_education, aes(y=perc, x=strategy, fill=maternal_education)) +
geom_col(position = "fill") +
scale_fill_brewer(palette="Dark2")+
labs(title= "French-English sample maternal education by strategy")+
theme(axis.text.x = element_text(angle = 25, size=18))+
theme(legend.text= element_text(size=18),legend.title= element_text(size=18), axis.title= element_text(size=18), plot.title= element_text(size=18))
ggsave(file="Figure_S1.png", width=25, height=12, dpi=300)
sup_figure_2<- ggplot(HER_maternal_education, aes(y=perc, x=strategy, fill=maternal_education)) +
geom_col(position = "fill") +
scale_fill_brewer(palette="Dark2") +
labs(title= "Heritage sample maternal education by strategy") +
theme(axis.text.x = element_text(angle = 25, size=18))+
theme(legend.text= element_text(size=18),legend.title= element_text(size=18), axis.title= element_text(size=18), plot.title= element_text(size=18))
ggsave(file="Figure_S2.png", width=25, height=12, dpi=300)
sup_figure_3<- ggplot(FE_paternal_education, aes(y=perc, x=strategy, fill=paternal_education)) +
geom_col(position = "fill")  +
scale_fill_brewer(palette="Dark2") +
labs(title= "French-English sample paternal education by strategy")+
theme(axis.text.x = element_text(angle = 25, size=18))+
theme(legend.text= element_text(size=18),legend.title= element_text(size=18), axis.title= element_text(size=18), plot.title= element_text(size=18))
ggsave(file="Figure_S3.png", width=25, height=12, dpi=300)
sup_figure_4<- ggplot(HER_paternal_education, aes(y=perc, x=strategy, fill=paternal_education)) +
geom_col(position = "fill")+
scale_fill_brewer(palette="Dark2") +
labs(title= "Heritage sample paternal education by strategy")+
theme(axis.text.x = element_text(angle = 25, size=18))+
theme(legend.text= element_text(size=18),legend.title= element_text(size=18), axis.title= element_text(size=18), plot.title= element_text(size=18))
ggsave(file="Figure_S4.png", width=25, height=12, dpi=300)
